	MODULE	crt0
	.ENHANCED
	.LARGE	       ; Not really, but we need the space for DEBUG

	INCLUDE native_if.inc

; Define the segment layout

	.SEG	VAREND
	.PACK	{INIT, VAR, VAREND}, {H'400, H'800}
	.PACK	{CONST, INITC}, {H'7400, H'D400}

; This segment holds stabs debug info and doesn't make it onto bluecore

	.CSEG	DEBUG
	ORG	H'10000

; Put labels at selected positions so
; we can deduce segment size and placement

	.SEG	INIT
INIT:
	.SEG	VAR
VAR:
	.SEG	VAREND
VAREND:
	.SEG	CONST
CONST:
	.SEG	INITC
INITC:

$XAP_AH  EQU H'ffe0
$XAP_AL  EQU H'ffe1
$XAP_UXH EQU H'ffe2
$XAP_UXL EQU H'ffe3
$XAP_UY	 EQU H'ffe4

; Logical address of native globals and stack
; Should these be derived instead?
NATIVE_GLOBALS_LOGICAL_ADDRESS    EQU	H'0400
NATIVE_STACK_LOGICAL_ADDRESS      EQU	H'0800

; Put the version number at the start of the CONST segment

	.SEG	CONST
	DC	17925 ; updated by Makefile from syscalls

; ****************************************************************************
; Startup code
; ****************************************************************************

	.CODE
	ORG	H'0000
	
	ld    al,#VAR-INIT  ; Size of INIT segment
	beq   skip_init
	ld    ah,#INITC     ; Logical source addr
	ld    x,@SHARED_APP_GLOBALS_POS  ; Physical dest addr (globals base)
	st    x,@(-1,y)

init_vars:
	st    ah,@SHARED_MMU_SAFE_LOCATION
	bsr   $dofetch_AH   ; ah has val to copy, x is trashed
	ld    x,@(-1,y)     ; Where to copy to
	st    ah,@(0,x)

	;Increment source and destination
	ld    ah,@SHARED_MMU_SAFE_LOCATION
	add   ah,#1
	ld    x,@(-1,y)
	add   x,#1
	st    x,@(-1,y)
      
	sub   al,#1
	bne   init_vars
skip_init:
	

	; AL is now zero
	ld    ah,#VAREND-VAR  ; Size of BSS segment
	beq   skip_zero
	ld    x,#VAR
loop_zero:
	st    al,@(0,x)
	add   x,#1
	sub   ah,#1
	bne   loop_zero
skip_zero:

	; call init code, normally empty
	bsr   $__init

	; pause waiting for the debugger, if appropriate
	bsr $_NativePauseForDebug

	ld    ah,#0
	ld    al,#0
	bsr   $_main

	; Main may exit by returning or by explicitly calling $exit.
	; In either case exit code will be in AH
	; Note 'real' programs are unlikely to exit.
	bra   $_exit

$_abort:
	; Exit abnormally
	ld    ah,#1
	bra   $_exit

_exit	EQU	$_exit
dofetch_AL	EQU	$dofetch_AL
dostore_AL	EQU	$dostore_AL
stack_overflow	EQU	$stack_overflow
	ENDMOD
	MODULE	malloc
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_malloc:
	enterl  #3
	ld    x,#3
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	malloc
	MODULE	free
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_free:
	enterl  #3
	ld    x,#4
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	free
	MODULE	realloc
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_realloc:
	enterl  #3
	ld    x,#5
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	realloc
	MODULE	memmove
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_memmove:
	enterl  #3
	ld    x,#6
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	memmove
	MODULE	exit
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_exit:
	enterl  #3
	ld    x,#7
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	exit
	MODULE	MessageSendLater
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageSendLater:
	enterl  #3
	ld    x,#9
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageSendLater
	MODULE	MessageCancelFirst
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageCancelFirst:
	enterl  #3
	ld    x,#10
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageCancelFirst
	MODULE	Panic
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_Panic:
	enterl  #3
	ld    x,#14
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	Panic
	MODULE	PanicNull
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PanicNull:
	enterl  #3
	ld    x,#15
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PanicNull
	MODULE	PsStore
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PsStore:
	enterl  #3
	ld    x,#17
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PsStore
	MODULE	PsRetrieve
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PsRetrieve:
	enterl  #3
	ld    x,#18
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PsRetrieve
	MODULE	PsFullRetrieve
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PsFullRetrieve:
	enterl  #3
	ld    x,#21
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PsFullRetrieve
	MODULE	MessagePioTask
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessagePioTask:
	enterl  #3
	ld    x,#36
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessagePioTask
	MODULE	PioDebounce
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioDebounce:
	enterl  #3
	ld    x,#37
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioDebounce
	MODULE	PioGet
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioGet:
	enterl  #3
	ld    x,#38
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioGet
	MODULE	PioSet
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioSet:
	enterl  #3
	ld    x,#39
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioSet
	MODULE	PioSetDir
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioSetDir:
	enterl  #3
	ld    x,#41
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioSetDir
	MODULE	AdcRequest
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_AdcRequest:
	enterl  #3
	ld    x,#45
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	AdcRequest
	MODULE	MessageFlushTask
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageFlushTask:
	enterl  #3
	ld    x,#46
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageFlushTask
	MODULE	PanicUnlessMalloc
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PanicUnlessMalloc:
	enterl  #3
	ld    x,#47
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PanicUnlessMalloc
	MODULE	BootSetMode
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_BootSetMode:
	enterl  #3
	ld    x,#51
	bra $common_trap_code
trapset_3	EQU	$trapset_3
	ENDMOD	BootSetMode
	MODULE	SinkSlack
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SinkSlack:
	enterl  #3
	ld    x,#62
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SinkSlack
	MODULE	SinkClaim
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SinkClaim:
	enterl  #3
	ld    x,#63
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SinkClaim
	MODULE	SinkMap
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SinkMap:
	enterl  #3
	ld    x,#64
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SinkMap
	MODULE	SinkFlush
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SinkFlush:
	enterl  #3
	ld    x,#65
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SinkFlush
	MODULE	SourceSize
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SourceSize:
	enterl  #3
	ld    x,#66
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SourceSize
	MODULE	SourceDrop
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SourceDrop:
	enterl  #3
	ld    x,#67
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SourceDrop
	MODULE	SourceMap
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SourceMap:
	enterl  #3
	ld    x,#68
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SourceMap
	MODULE	StreamConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamConfigure:
	enterl  #3
	ld    x,#70
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	StreamConfigure
	MODULE	StreamSourceFromSink
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamSourceFromSink:
	enterl  #3
	ld    x,#74
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	StreamSourceFromSink
	MODULE	SinkGetBdAddr
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SinkGetBdAddr:
	enterl  #3
	ld    x,#84
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SinkGetBdAddr
	MODULE	MessageSinkTask
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageSinkTask:
	enterl  #3
	ld    x,#85
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	MessageSinkTask
	MODULE	MessageSinkGetTask
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageSinkGetTask:
	enterl  #3
	ld    x,#86
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	MessageSinkGetTask
	MODULE	StreamSinksFromBdAddr
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamSinksFromBdAddr:
	enterl  #3
	ld    x,#87
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	StreamSinksFromBdAddr
	MODULE	StreamConnectDispose
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamConnectDispose:
	enterl  #3
	ld    x,#90
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	StreamConnectDispose
	MODULE	VmSendRfcommPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmSendRfcommPrim:
	enterl  #3
	ld    x,#102
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	VmSendRfcommPrim
	MODULE	StreamRfcommSink
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamRfcommSink:
	enterl  #3
	ld    x,#103
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	StreamRfcommSink
	MODULE	StreamUartSink
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamUartSink:
	enterl  #3
	ld    x,#104
	bra $common_trap_code
trapset_15	EQU	$trapset_15
	ENDMOD	StreamUartSink
	MODULE	StreamUartConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamUartConfigure:
	enterl  #3
	ld    x,#105
	bra $common_trap_code
trapset_15	EQU	$trapset_15
	ENDMOD	StreamUartConfigure
	MODULE	VmSendL2capPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmSendL2capPrim:
	enterl  #3
	ld    x,#106
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmSendL2capPrim
	MODULE	VmSendDmPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmSendDmPrim:
	enterl  #3
	ld    x,#107
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmSendDmPrim
	MODULE	VmSendSdpPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmSendSdpPrim:
	enterl  #3
	ld    x,#108
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmSendSdpPrim
	MODULE	VmGetHandleFromPointer
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmGetHandleFromPointer:
	enterl  #3
	ld    x,#109
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmGetHandleFromPointer
	MODULE	VmGetPointerFromHandle
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmGetPointerFromHandle:
	enterl  #3
	ld    x,#110
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmGetPointerFromHandle
	MODULE	MessageBlueStackTask
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageBlueStackTask:
	enterl  #3
	ld    x,#111
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	MessageBlueStackTask
	MODULE	StreamL2capSink
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamL2capSink:
	enterl  #3
	ld    x,#112
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	StreamL2capSink
	MODULE	VmUseExtendedBluestackPrimitives
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmUseExtendedBluestackPrimitives:
	enterl  #3
	ld    x,#148
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmUseExtendedBluestackPrimitives
	MODULE	NativePauseForDebug
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_NativePauseForDebug:
	enterl  #3
	ld    x,#220
	bra $common_trap_code
trapset_38	EQU	$trapset_38
	ENDMOD	NativePauseForDebug
	MODULE	mmu_ld
	.LARGE
	.ENHANCED
	.CODE

	INCLUDE native_if.inc
	













XH_LOC_Y_OFFSET	       EQU    ((-SHARED_STACK_COVER) - 1)
RETURN_ADDR_Y_OFFSET   EQU    (XH_LOC_Y_OFFSET - 1)




$TOTAL_MMU_STACK_ALLOCATION   CEQU   SHARED_STACK_COVER + SHARED_MMU_WORST_CASE_STACK
        
$dofetch_AL:	    
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	al,@(0,x)  
	st	al,@(-1,y) 
				   
	ld	xh,@(-1,y)
	ld	x,@(1,x)   
	bsr	0,x
	    
	
	ld	al,@(-3,y)
	add	y,#(2+SHARED_STACK_COVER) 
	    
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dofetch_AH:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	ah,@(0,x)  
	st	ah,@(-1,y) 
				   
	ld	xh,@(-1,y)
	ld	x,@(1,x)   
	bsr	0,x
	    
	
	ld	ah,@(-3,y)
	add	y,#(2+SHARED_STACK_COVER) 
	    
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dofetch_X:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(0,x)  
	st	x,@(-1,y) 
			  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(1,x)  
	bsr	0,x
	
	ld	x,@(-3,y)
	add	y,#(2+SHARED_STACK_COVER) 
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dofetch_X_internal:
	enterl	#2
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(0,x)  
	st	x,@(-1,y) 
			  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(1,x)  
	bsr	0,x
	
	ld	x,@(-3,y)
	leavel	#2

$dofetch32_AH:
	add	y,#-SHARED_STACK_COVER
	enterl	#2
	bsr	$dofetch_X_internal
	ld	AH,@$XAP_UXL
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dofetch_X_internal
	ld	AL,@$XAP_UXL
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	
	add	y,#(2+SHARED_STACK_COVER) 
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dofetch32_fff8:	
	add	y,#-SHARED_STACK_COVER
	enterl	#2
	bsr	$dofetch_X_internal
	st	x,@H'FFF8
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dofetch_X_internal
	st	x,@H'FFF9
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)

	
$dofetch32_fff9:
	add	y,#-SHARED_STACK_COVER
	enterl	#2
	bsr	$dofetch_X_internal
	st	x,@H'FFF9
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dofetch_X_internal
	st	x,@H'FFFA
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dofetch32_fffa:
	add	y,#-SHARED_STACK_COVER
	enterl	#2
	bsr	$dofetch_X_internal
	st	x,@H'FFFA
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dofetch_X_internal
	st	x,@H'FFFB
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	add	y,#(2+SHARED_STACK_COVER) 
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)

	ENDMOD 
	MODULE	mmu_st
	.LARGE
	.ENHANCED
	.CODE

	INCLUDE native_if.inc

XH_LOC_Y_OFFSET	      EQU    ((-SHARED_STACK_COVER) - 1)
RETURN_ADDR_Y_OFFSET  EQU    (XH_LOC_Y_OFFSET - 1)

$dostore_AL:		
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	st	al,@(-3,y)
	    
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	al,@(2,x)  
	st	al,@(-1,y) 
				   
	ld	xh,@(-1,y)
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	ld	al,@(-3,y)

	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)

$dostore_AL_internal:
	enterl	#2

	
	st	al,@(-3,y)
	    
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	al,@(2,x)  
	st	al,@(-1,y) 
			   
	ld	xh,@(-1,y)
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	ld	al,@(-3,y)

	leavel	#2


$dostore_AH:
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	st	ah,@(-3,y)
	    
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	ah,@(2,x)  
	st	ah,@(-1,y) 
			   
	ld	xh,@(-1,y)
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	ld	ah,@(-3,y)

	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)

	
$dostore_AH_internal:
	enterl	#2

	
	st	ah,@(-3,y)
	    
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	ah,@(2,x)  
	st	ah,@(-1,y) 
				   
	ld	xh,@(-1,y)
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	ld	ah,@(-3,y)

	leavel	#2


$dostore_fff8:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	ld	x,@H'fff8
	st	x,@(-3,y)
	    
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
			  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore_fff8_internal:
	enterl	#2

	
	ld	x,@H'fff8
	st	x,@(-3,y)
 
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
			  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	leavel	#2


$dostore_fff9:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	ld	x,@H'fff9
	st	x,@(-3,y)
    
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore_fff9_internal:
	enterl	#2

	
	ld	x,@H'fff9
	st	x,@(-3,y)

	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x

	leavel	#2


$dostore_fffa:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	ld	x,@H'fffa
	st	x,@(-3,y)
	    
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore_fffa_internal:
	enterl	#2

	
	ld	x,@H'fffa
	st	x,@(-3,y)

	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	leavel	#2


$dostore_fffb:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	ld	x,@H'fffb
	st	x,@(-3,y)

	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore_fffb_internal:
	enterl	#2

	
	ld	x,@H'fffb
	st	x,@(-3,y)
	    
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	leavel	#2


$dostore32_AH:
	
	
	add	y,#-SHARED_STACK_COVER 
	enterl	#2
	bsr	$dostore_AH_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dostore_AL_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
					  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore32_fff8:
   	
	
	add	y,#-SHARED_STACK_COVER 
	enterl	#2
	bsr	$dostore_fff8_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dostore_fff9_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
					  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore32_fff9:
	
	
	add	y,#-SHARED_STACK_COVER 
	enterl	#2
	bsr	$dostore_fff9_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dostore_fffa_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
					  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore32_fffa:
	
	
	add	y,#-SHARED_STACK_COVER 
	enterl	#2
	bsr	$dostore_fffa_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dostore_fffb_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
					  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)

	ENDMOD
	MODULE	stack_overflow
	.LARGE
	.ENHANCED
	.CODE

	INCLUDE native_if.inc

$stack_overflow:

	
	
	
	st	al,@(H'FFF8)
	st	x,@(H'FFF9)

	
	
	
	
	st	y,@(SHARED_MMU_SAFE_LOCATION)
	ld	y,@(SHARED_STACK_LOW_LIMIT)
	ld	al,@(0,y)
	st	al,@(H'FFFD)
	st	xh,@(0,y)
	ld	al,@(0,y)
	
	st	al,@(H'FFFA)

	
	
	ld	x,@(SHARED_MMU_CODE_ADDRESS)
	ld	al,@(NATIVE_HANDLE_STACK_OFLOW_HWRD,x) 
	st	al,@(0,y)  
	ld	xh,@(0,y)
	ld	x,@(NATIVE_HANDLE_STACK_OFLOW_LWRD,x)

	
	ld	al,@(H'FFFD)
	st	al,@(0,y)

	
	ld	y,@(SHARED_MMU_SAFE_LOCATION)
	
	
	bra	0,x		 

	ENDMOD 
	MODULE	MessageWait
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageWait:
	enterl  #3
	ld    x,#11
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageWait
	MODULE	MessageSendConditionally
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageSendConditionally:
	enterl  #3
	ld    x,#12
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageSendConditionally
	MODULE	MessageFree
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageFree:
	enterl  #3
	ld    x,#13
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageFree
	MODULE	trapset_1
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_1:
	ENDMOD	trapset_1
	MODULE	trapset_16
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_16:
	ENDMOD	trapset_16
	MODULE	trapset_14
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_14:
	ENDMOD	trapset_14
	MODULE	trapset_11
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_11:
	ENDMOD	trapset_11
	MODULE	trapset_3
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_3:
	ENDMOD	trapset_3
	MODULE	trapset_15
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_15:
	ENDMOD	trapset_15
	MODULE	trapset_38
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_38:
	ENDMOD	trapset_38
	MODULE	common_trap_code
       .LARGE
       .ENHANCED
       .CODE

$TRAP_HANDLER_HWRD	EQU	H'FFF4
$TRAP_HANDLER_LWRD	EQU	H'FFF5

$common_trap_code:

	st	x,@(0,y) 
	ld	x,@$TRAP_HANDLER_HWRD
	st	x,@(-1,y)
	ld	xh,@(-1,y)
	bra	@$TRAP_HANDLER_LWRD

	ENDMOD 
	MODULE	e_t_c

	.ALL
e_t_c:
	ENDMOD
	MODULE	barcode
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_isDisplayableChar:
; leaf function with empty stack frame
?LBB_isDisplayableChar:
	add	AL,#-H'0020
	cmp	AL,#(H'0001+H'005E)
	bcc	?L2
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE_isDisplayableChar:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
_isLineFeed:
; leaf function with empty stack frame
?LBB_isLineFeed:
	ld	AH,#H'0000
	cmp	AL,#H'000A
	bne	?L4
	ld	AH,#H'0001
?L4:
	ld	AL,@$XAP_AH
?LBE_isLineFeed:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
_isCarriageReturn:
; leaf function with empty stack frame
?LBB_isCarriageReturn:
	ld	AH,#H'0000
	cmp	AL,#H'000D
	bne	?L7
	ld	AH,#H'0001
?L7:
	ld	AL,@$XAP_AH
?LBE_isCarriageReturn:
	bra	0,X
;# begin scan referenced symbols
.IMPORT _isDisplayableChar 1 ; (Const ref)
.IMPORT _isLineFeed 1 ; (Const ref)
.IMPORT _isCarriageReturn 1 ; (Const ref)
;# end scan referenced symbols
_fill_byte:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_fill_byte ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_fill_byte:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB2:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'002F)
	bcc	?L18
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L11
	ld	AL,@(H'0001,Y)
	bsr	_isDisplayableChar
	cmp	AL,#H'0000
	beq	?L18
	ld	AL,@(0,Y)
	bra	(?L21)
?L11:
	ld	AL,@(0,Y)
	add	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	_isLineFeed
	cmp	AL,#H'0000
	bne	?L18
	ld	AL,@(0,Y)
	add	AL,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_isCarriageReturn
	cmp	AL,#H'0000
	beq	?L15
	ld	AL,@(H'0001,Y)
	bsr	_isLineFeed
	cmp	AL,#H'0000
	beq	?L18
	ld	AL,@(H'0003,Y)
?L21:
	add	AL,#H'0002
	st	AL,@H'fffc
	bra	(?L20)
?L15:
	ld	AL,@(H'0001,Y)
	bsr	_isDisplayableChar
	cmp	AL,#H'0000
	bne	?L19
	ld	AL,@(H'0001,Y)
	bsr	_isCarriageReturn
	cmp	AL,#H'0000
	beq	?L18
?L19:
	ld	AL,@(0,Y)
	add	AL,@(H'0002,Y)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
?L20:
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,#H'0001
	bra	(?L9)
?L18:
	ld	AL,#H'0000
?L9:
?LBE2:
?LBE_fill_byte:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
;# end scan referenced symbols
$_barcode_clear:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_barcode_clear ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_barcode_clear:
	st	AL,@H'fff8
?LBB3:
	cmp	AL,#H'0000
	beq	?L29
?LBB4:
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,#H'0000
?L35:
	ld	AL,@$XAP_AH
	add	AL,@H'fff8
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	add	AH,#H'0001
	cmp	AH,#H'002F
	bcz	?L35
?L29:
?LBE4:
?LBE3:
?LBE_barcode_clear:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT _fill_byte 0 ; (Non-const ref)
;# end scan referenced symbols
$_barcode_fill_raw_bytes:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_barcode_fill_raw_bytes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_barcode_fill_raw_bytes:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0005,Y)
?LBB5:
	cmp	AH,#H'0000
	beq	?L49
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0005,Y)
	add	AL,@$XAP_AH
	cmp	AL,#H'0030
	bcz	?L41
?L50:
	ld	AL,#H'0000
	bra	(?L39)
?L41:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	cmp	AL,@(H'0005,Y)
	bcc	?L49
?L47:
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	add	AH,@(H'0002,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_fill_byte
	cmp	AL,#H'0000
	beq	?L50
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,@(H'0005,Y)
	bcs	?L47
?L49:
	ld	AL,#H'0001
?L39:
?LBE5:
?LBE_barcode_fill_raw_bytes:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
;# end scan referenced symbols
$_barcode_is_terminated:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_barcode_is_terminated ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_barcode_is_terminated:
	st	AL,@(0,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bcz	?L58
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,@H'fffc
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	_isCarriageReturn
	cmp	AL,#H'0000
	beq	?L58
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	_isLineFeed
	cmp	AL,#H'0000
	beq	?L58
	ld	AL,#H'0001
	bra	(?L56)
?L58:
	ld	AL,#H'0000
?L56:
?LBE_barcode_is_terminated:
	leavel	#3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 6 total = 6
;# Function pattern *movqi_fetch_general used[0] = 4 total = 4
;# Function pattern *movqi_store_y_relative used[0] = 9 total = 9
;# Function pattern *movqi_fetch_y_relative used[0] = 11 total = 11
;# Function pattern *movqi_store_general used[0] = 4 total = 4
;# Function pattern *movqi2 used[0] = 9 total = 9
;# Function pattern *movqi2b used[0] = 14 used[1] = 1 total = 15
;# Function pattern *addqi2 used[0] = 10 used[2] = 3 used[3] = 2 total = 15
;# Function pattern jump used[0] = 6 total = 6
;# Function pattern *call_value1 used[0] = 9 total = 9
;# Function pattern addsi3+1 used[0] = 4 total = 4
;# Function pattern subhi3+1 used[0] = 3 total = 3
;# Function pattern extendhfsf2+2 used[1] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 19 total = 19
	MODULE	battery_probe
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_battery_probe 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_getBatteryProbeTask:
; leaf function with empty stack frame
?LBB_getBatteryProbeTask:
	ld	AL,#($_battery_probe)
?LBE_getBatteryProbeTask:
	bra	0,X
;# begin scan referenced symbols
.IMPORT _adc_result_handler 0 ; (Non-const ref)
.IMPORT _tick_handler 0 ; (Non-const ref)
;# end scan referenced symbols
_battery_probe_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_battery_probe_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_battery_probe_handler:
?LBB2:
	cmp	AH,#H'0000
	beq	?L6
	cmp	AH,#-H'7FDB
	bne	?L2
	ld	AH,@(H'0002,Y)
?LBB3:
	cmp	AH,#H'0000
	beq	?L2
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_adc_result_handler
?LBE3:
	bra	(?L2)
?L6:
	bsr	_tick_handler
?L2:
?LBE2:
?LBE_battery_probe_handler:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $___udivhi3 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
_adc_result_handler:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_adc_result_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_adc_result_handler:
	st	AL,@H'fff8
?LBB4:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	cmp	AL,#H'0002
	bne	?L13
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_battery_probe+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'00FF
	bne	?L14
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L14:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@($_battery_probe+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L15)
?L13:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_battery_probe+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@H'fff8
	cmp	X,@$XAP_AL
	bne	?L12
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@($_battery_probe+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?L15:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_battery_probe+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'00FF
	beq	?L12
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_battery_probe+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'00FF
	beq	?L12
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_battery_probe+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@H'fff8
	cmp	AH,@$XAP_AL
	beq	?L19
	cmp	AH,#H'0002
	bne	?L12
	ld	AL,@H'fff9
	cmp	AL,#H'0001
	bne	?L12
?L19:
?LBB5:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@($_battery_probe+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_battery_probe+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	cmp	AH,#H'0000
	bne	?L29
	cmp	AL,#H'0000
	beq	?L12
?L29:
	ld	AL,#H'0002
	bsr	$_malloc
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0002,Y)
	smult	#H'04E2
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	umult	#H'04E2
	add	AH,@$XAP_UXL
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$___udivhi3
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_battery_probe+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'4000
	bsr	$_MessageSend
?L12:
?LBE5:
?LBE4:
?LBE_adc_result_handler:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_AdcRequest 0 ; (Non-const ref)
.IMPORT _getBatteryProbeTask 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
_tick_handler:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_tick_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_tick_handler:
	ld	AL,#($_battery_probe)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@($_battery_probe+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_AdcRequest
	ld	AL,#($_battery_probe)
	ld	AH,#H'0002
	bsr	$_AdcRequest
	bsr	_getBatteryProbeTask
	st	AL,@H'fff8
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@($_battery_probe+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bsr	$_MessageSendLater
?LBE_tick_handler:
	leavel	#5
;# begin scan referenced symbols
.IMPORT _battery_probe_handler 0 ; (Non-const ref)
;# end scan referenced symbols
$_battery_probe_start:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_battery_probe_start ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_battery_probe_start:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	AH,#hwrd(_battery_probe_handler)
	ld	AL,#lwrd(_battery_probe_handler)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@($_battery_probe-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@($_battery_probe+1-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@H'fff8
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_battery_probe+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@H'fff9
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@($_battery_probe+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@(H'0002,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_battery_probe+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'00FF
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@($_battery_probe+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@($_battery_probe+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_tick_handler
?LBE_battery_probe_start:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_MessageFlushTask 0 ; (Non-const ref)
.IMPORT $_MessageCancelAll 0 ; (Non-const ref)
;# end scan referenced symbols
$_battery_probe_stop:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_battery_probe_stop ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_battery_probe_stop:
	bsr	_getBatteryProbeTask
	bsr	$_MessageFlushTask
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_battery_probe+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'4000
	bsr	$_MessageCancelAll
?LBE_battery_probe_stop:
	leavel	#2
	.SEG	VAR
$_battery_probe:
	DS	7
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 2 total = 2
;# Function pattern *movqi_fetch_general used[0] = 2 total = 2
;# Function pattern *movqi_store_y_relative used[0] = 2 used[1] = 1 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 3 total = 3
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_fetch_symbol_ref_with_offset used[0] = 11 total = 11
;# Function pattern *movqi_store_symbol_ref_with_offset used[0] = 7 total = 7
;# Function pattern *movhi_store_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 17 total = 17
;# Function pattern *movqi2b used[0] = 1 used[1] = 6 total = 7
;# Function pattern *movhi used[2] = 2 used[3] = 1 total = 3
;# Function pattern *addqi2 used[0] = 2 total = 2
;# Function pattern *mulqihi3_const used[0] = 1 total = 1
;# Function pattern *umulqihi3_const used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 3 total = 3
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 8 total = 8
;# Function pattern addhi3-2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 11 total = 11
;# Function pattern extendhfsf2+4 used[0] = 1 total = 1
	MODULE	buzzer
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PioSetDir 0 ; (Non-const ref)
.IMPORT $_PioSet 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_buzzer_on:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_buzzer_on ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_buzzer_on:
	ld	AL,#H'0800
	ld	AH,@$XAP_AL
	bsr	$_PioSetDir
	ld	AL,#H'0800
	ld	AH,@$XAP_AL
	bsr	$_PioSet
?LBE_buzzer_on:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_buzzer_off:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_buzzer_off ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_buzzer_off:
	ld	AL,#H'0800
	ld	AH,#H'0000
	bsr	$_PioSetDir
	ld	AL,#H'0800
	ld	AH,#H'0000
	bsr	$_PioSet
?LBE_buzzer_off:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_buzzer_off 0 ; (Non-const ref)
;# end scan referenced symbols
_beep_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_beep_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_beep_handler:
	cmp	AH,#H'0000
	bne	?L3
	bsr	$_buzzer_off
?L3:
?LBE_beep_handler:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _beep_handler 0 ; (Non-const ref)
.IMPORT _beeper 0 ; (Non-const ref)
.IMPORT $_buzzer_on 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
$_beep:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_beep ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_beep:
	st	AL,@(H'0003,Y)
	ld	AH,#hwrd(_beep_handler)
	ld	AL,#lwrd(_beep_handler)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_beeper-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(_beeper+1-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_buzzer_on
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#(_beeper)
	ld	AH,#H'0000
	bsr	$_MessageSendLater
?LBE_beep:
	leavel	#6
	.SEG	VAR
_beeper:
	DS	2
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 1 used[1] = 1 total = 2
;# Function pattern *movhi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 10 total = 10
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	errman
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_busy_beep 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_DoErrorCheck:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_DoErrorCheck ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_DoErrorCheck:
	cmp	AL,#H'0001
	beq	?L1
	ld	AL,#H'0005
	bsr	$_busy_beep
	bsr	$_Panic
?L1:
?LBE_DoErrorCheck:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_getHalTask 0 ; (Non-const ref)
.IMPORT $_DoErrorCheck 0 ; (Non-const ref)
.IMPORT $_getSppbTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_initialisationFinished:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_initialisationFinished ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_initialisationFinished:
?LBB2:
	bsr	$_getHalTask
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L5
	ld	AH,#H'0000
	add	AL,#H'0016
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L6
	ld	AH,#H'0001
?L6:
	ld	AL,@$XAP_AH
	bsr	$_DoErrorCheck
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	add	AL,#H'0017
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L11
	cmp	AL,#H'FFFF
	beq	?L7
?L11:
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L7:
	ld	AL,@H'fff8
	bsr	$_DoErrorCheck
?L5:
	bsr	$_getSppbTask
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L4
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_DoErrorCheck
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_DoErrorCheck
?L4:
?LBE2:
?LBE_initialisationFinished:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_PioSetDir 0 ; (Non-const ref)
.IMPORT $_PioSet 0 ; (Non-const ref)
;# end scan referenced symbols
$_busy_beep_unit:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_busy_beep_unit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_busy_beep_unit:
?LBB3:
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L18:
	ld	AL,#H'0800
	ld	AH,@$XAP_AL
	bsr	$_PioSetDir
	ld	AL,#H'0800
	ld	AH,@$XAP_AL
	bsr	$_PioSet
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'1387
	bcz	?L18
	ld	AL,#H'0000
	st	AL,@(0,Y)
?L23:
	ld	AL,#H'0800
	ld	AH,#H'0000
	bsr	$_PioSetDir
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@(0,Y)
	cmp	AL,#H'03E7
	bcz	?L23
?LBE3:
?LBE_busy_beep_unit:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_busy_beep_unit 0 ; (Non-const ref)
;# end scan referenced symbols
$_busy_beep:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_busy_beep ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_busy_beep:
	st	AL,@(0,Y)
?LBB4:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	cmp	AL,@(0,Y)
	bcc	?L42
?L35:
	bsr	$_busy_beep_unit
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,@(0,Y)
	bcs	?L35
?L42:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
?L40:
	ld	AL,#H'0800
	ld	AH,#H'0000
	bsr	$_PioSetDir
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'1387
	bcz	?L40
?LBE4:
?LBE_busy_beep:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
$_raise_exception:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_raise_exception ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_raise_exception:
	st	AH,@(0,Y)
	bsr	$_busy_beep
	ld	AL,@(0,Y)
	bsr	$_busy_beep
	bsr	$_Panic
?LBE_raise_exception:
	leavel	#3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 4 total = 4
;# Function pattern *movqi_fetch_general used[0] = 3 total = 3
;# Function pattern *movqi_store_y_relative used[0] = 12 total = 12
;# Function pattern *movqi_fetch_y_relative used[0] = 6 total = 6
;# Function pattern *movhi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 12 total = 12
;# Function pattern *movqi2b used[0] = 6 used[1] = 2 total = 8
;# Function pattern *addqi2 used[0] = 8 total = 8
;# Function pattern *call1 used[0] = 14 total = 14
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 9 total = 9
;# Function pattern extendhfsf2+5 used[0] = 1 total = 1
	MODULE	hal
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_hal 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_getHalTask:
; leaf function with empty stack frame
?LBB_getHalTask:
	ld	AL,#($_hal)
?LBE_getHalTask:
	bra	0,X
;# begin scan referenced symbols
.IMPORT _hal_initialising_state_exit 0 ; (Non-const ref)
.IMPORT _hal_activating_state_exit 0 ; (Non-const ref)
.IMPORT _hal_active_state_exit 0 ; (Non-const ref)
.IMPORT _hal_deactivating_state_exit 0 ; (Non-const ref)
.IMPORT _hal_initialising_state_enter 0 ; (Non-const ref)
.IMPORT _hal_activating_state_enter 0 ; (Non-const ref)
.IMPORT _hal_active_state_enter 0 ; (Non-const ref)
.IMPORT _hal_deactivating_state_enter 0 ; (Non-const ref)
;# end scan referenced symbols
_hal_set_state:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_set_state ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_set_state:
	st	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	beq	?L5
	cmp	AL,#H'0001
	bcs	?L4
	cmp	AL,#H'0002
	beq	?L6
	cmp	AL,#H'0003
	beq	?L7
	bra	(?L3)
?L4:
	bsr	_hal_initialising_state_exit
	bra	(?L3)
?L5:
	bsr	_hal_activating_state_exit
	bra	(?L3)
?L6:
	bsr	_hal_active_state_exit
	bra	(?L3)
?L7:
	bsr	_hal_deactivating_state_exit
?L3:
	ld	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_hal+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	beq	?L12
	cmp	AL,#H'0001
	bcs	?L11
	cmp	AL,#H'0002
	beq	?L13
	cmp	AL,#H'0003
	beq	?L14
	bra	(?L2)
?L11:
	bsr	_hal_initialising_state_enter
	bra	(?L2)
?L12:
	bsr	_hal_activating_state_enter
	bra	(?L2)
?L13:
	bsr	_hal_active_state_enter
	bra	(?L2)
?L14:
	bsr	_hal_deactivating_state_enter
?L2:
?LBE_hal_set_state:
	leavel	#3
;# begin scan referenced symbols
.IMPORT _hal_initialising_handler 0 ; (Non-const ref)
.IMPORT _hal_activating_handler 0 ; (Non-const ref)
.IMPORT _hal_active_handler 0 ; (Non-const ref)
.IMPORT _hal_deactivating_handler 0 ; (Non-const ref)
;# end scan referenced symbols
_hal_handler:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_handler:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	AH,@(H'0003,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	beq	?L28
	cmp	AL,#H'0001
	bcs	?L27
	cmp	AL,#H'0002
	beq	?L29
	cmp	AL,#H'0003
	beq	?L30
	bra	(?L25)
?L27:
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_hal_initialising_handler
	bra	(?L25)
?L28:
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_hal_activating_handler
	bra	(?L25)
?L29:
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_hal_active_handler
	bra	(?L25)
?L30:
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_hal_deactivating_handler
?L25:
?LBE_hal_handler:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_getHalTask 0 ; (Non-const ref)
.IMPORT $_pioInit 0 ; (Non-const ref)
.IMPORT $_BatteryInit 0 ; (Non-const ref)
.IMPORT _disableLDO 0 ; (Non-const ref)
.IMPORT $_update_indication 0 ; (Non-const ref)
;# end scan referenced symbols
_hal_initialising_state_enter:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_initialising_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_initialising_state_enter:
	bsr	$_getHalTask
	ld	AH,@$XAP_AL
	ld	AL,#($_hal+H'0005)
	bsr	$_pioInit
	bsr	$_getHalTask
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#($_hal+H'000F); movqi2b+1 peephole
	bsr	$_BatteryInit
	bsr	_disableLDO
	bsr	$_update_indication
?LBE_hal_initialising_state_enter:
	leavel	#4
;# begin scan referenced symbols
.IMPORT _enableLDO 0 ; (Non-const ref)
;# end scan referenced symbols
_hal_initialising_state_exit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_initialising_state_exit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_initialising_state_exit:
	bsr	_enableLDO
?LBE_hal_initialising_state_exit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _pio_raw_handler 0 ; (Non-const ref)
.IMPORT _battery_message_handler 0 ; (Non-const ref)
.IMPORT $_initialisationFinished 0 ; (Non-const ref)
.IMPORT _hal_set_state 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
.IMPORT $_MessageCancelAll 0 ; (Non-const ref)
.IMPORT $_ledsPlay 0 ; (Non-const ref)
.IMPORT $_BootSetMode 0 ; (Non-const ref)
;# end scan referenced symbols
_hal_initialising_handler:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_initialising_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_initialising_handler:
	cmp	AH,#H'03E9
	beq	?L46
	cmp	AH,#(H'0001+H'03E9)
	bcc	?L51
	cmp	AH,#H'0005
	beq	?L48
	cmp	AH,#(H'0001+H'0005)
	bcc	?L52
	cmp	AH,#H'0000
	beq	?L44
	bra	(?L39)
?L52:
	cmp	AH,#H'03E8
	beq	?L45
	bra	(?L39)
?L51:
	cmp	AH,#H'03EC
	beq	?L41
	cmp	AH,#(H'0001+H'03EC)
	bcc	?L53
	cmp	AH,#H'03EB
	beq	?L47
	bra	(?L39)
?L53:
	cmp	AH,#H'6800
	beq	?L42
	bra	(?L39)
?L41:
	ld	AL,@(H'0005,Y)
	bsr	_pio_raw_handler
	bra	(?L55)
?L42:
	ld	X,#($_hal+H'0017)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	cmp	AH,#H'0000
	bne	?L43
	cmp	AL,#H'FFFF
	bne	?L43
	bsr	$_getHalTask
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'7530
	st	AL,@(H'0001,Y)
	ld	AL,#($_hal+H'000F); movqi2b+1 peephole
	bsr	$_BatteryInit
?L43:
	ld	AL,@(H'0005,Y)
	bsr	_battery_message_handler
?L55:
	bsr	$_update_indication
	bra	(?L39)
?L44:
	bsr	$_initialisationFinished
	ld	AL,#H'0001
	bsr	_hal_set_state
	bra	(?L39)
?L45:
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'07D0
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_MessageSendLater
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'1F40
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0001
	bra	(?L54)
?L46:
	bsr	$_getHalTask
	ld	AH,#H'0000
	bsr	$_MessageCancelAll
	bsr	$_getHalTask
	ld	AH,#H'0001
	bsr	$_MessageCancelAll
	bra	(?L39)
?L47:
	ld	AL,#H'0011
	bsr	$_ledsPlay
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'01F4
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0005
?L54:
	bsr	$_MessageSendLater
	bra	(?L39)
?L48:
	ld	AL,#H'0000
	bsr	$_BootSetMode
?L39:
?LBE_hal_initialising_handler:
	leavel	#5
;# begin scan referenced symbols
;# end scan referenced symbols
_hal_activating_state_enter:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_activating_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_activating_state_enter:
	bsr	$_update_indication
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_hal+(25)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_hal+(26)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,#H'0012
	bsr	$_ledsPlay
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0384
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0002
	bsr	$_MessageSendLater
?LBE_hal_activating_state_enter:
	leavel	#5
;# begin scan referenced symbols
;# end scan referenced symbols
_hal_activating_state_exit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_activating_state_exit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_activating_state_exit:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(25)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	bne	?L65
	bsr	$_getHalTask
	ld	AH,#H'0002
	bsr	$_MessageCancelAll
?L65:
?LBE_hal_activating_state_exit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _powerAllowedToTurnOn 0 ; (Non-const ref)
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
_hal_activating_handler:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_activating_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_activating_handler:
	ld	AL,@(H'000B,Y)
?LBB2:
	cmp	AH,#H'03E8
	beq	?L75
	cmp	AH,#(H'0001+H'03E8)
	bcc	?L89
	cmp	AH,#H'0001
	beq	?L78
	cmp	AH,#H'0002
	beq	?L82
	bra	(?L68)
?L89:
	cmp	AH,#H'03EC
	beq	?L70
	cmp	AH,#(H'0001+H'03EC)
	bcc	?L90
	cmp	AH,#H'03E9
	beq	?L76
	bra	(?L68)
?L90:
	cmp	AH,#H'6800
	beq	?L73
	bra	(?L68)
?L70:
	bsr	_pio_raw_handler
	ld	AH,#hwrd(_powerAllowedToTurnOn)
	ld	AL,#lwrd(_powerAllowedToTurnOn)
	cmp	AH,#H'0000
	bne	?L68
	cmp	AL,#H'0000
	bne	?L68
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(25)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	beq	?L68
	bra	(?L93)
?L73:
	bsr	_battery_message_handler
	bsr	_powerAllowedToTurnOn
	cmp	AL,#H'0000
	bne	?L68
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(25)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	beq	?L68
	bra	(?L93)
?L75:
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'07D0
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_MessageSendLater
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'1F40
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0001
	bsr	$_MessageSendLater
	bra	(?L68)
?L76:
	bsr	$_getHalTask
	ld	AH,#H'0000
	bsr	$_MessageCancelAll
	bsr	$_getHalTask
	ld	AH,#H'0001
	bsr	$_MessageCancelAll
	ld	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_hal+(26)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(25)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	bne	?L68
?LBB3:
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@(H'0004,Y)
	st	X,@H'ffff
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'4101
	bsr	$_MessageSend
	ld	AL,@(H'0004,Y)
	bra	(?L94)
?L78:
?LBE3:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(25)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	beq	?L80
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(26)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	bne	?L79
?L80:
	bsr	$_Panic
	bra	(?L68)
?L79:
?LBB4:
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@(H'0005,Y)
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@(H'0006,Y)
	st	X,@H'ffff
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'4101
	bsr	$_MessageSend
	ld	AL,@(H'0006,Y)
	bra	(?L94)
?L82:
	ld	AL,#H'0001
?LBE4:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_hal+(25)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_powerAllowedToTurnOn
	cmp	AL,#H'0000
	bne	?L83
?L93:
	ld	AL,#H'0003
	bra	(?L91)
?L83:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(26)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	bne	?L85
?LBB5:
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@(H'0007,Y)
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@(H'0008,Y)
	st	X,@H'ffff
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'4101
	bsr	$_MessageSend
	ld	AL,@(H'0008,Y)
?L94:
	st	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'4101
	bsr	$_MessageSend
	ld	AL,#H'0002
?L91:
	bsr	_hal_set_state
?LBE5:
	bra	(?L68)
?L85:
	bsr	$_update_indication
?L68:
?LBE2:
?LBE_hal_activating_handler:
	leavel	#11
;# begin scan referenced symbols
;# end scan referenced symbols
_hal_active_state_enter:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_active_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_active_state_enter:
	bsr	$_update_indication
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	AL,#H'27C0
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0004
	bsr	$_MessageSendLater
?LBE_hal_active_state_enter:
	leavel	#5
;# begin scan referenced symbols
;# end scan referenced symbols
_hal_active_state_exit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_active_state_exit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_active_state_exit:
	bsr	$_getHalTask
	ld	AH,#H'0004
	bsr	$_MessageCancelAll
?LBE_hal_active_state_exit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _powerAllowedToContinue 0 ; (Non-const ref)
;# end scan referenced symbols
_hal_active_handler:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_active_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_active_handler:
	ld	AL,@(H'0005,Y)
	cmp	AH,#H'03E9
	beq	?L118
	cmp	AH,#(H'0001+H'03E9)
	bcc	?L127
	cmp	AH,#H'0004
	beq	?L124
	cmp	AH,#(H'0001+H'0004)
	bcc	?L128
	cmp	AH,#H'0000
	beq	?L124
	bra	(?L112)
?L128:
	cmp	AH,#H'03E8
	beq	?L117
	bra	(?L112)
?L127:
	cmp	AH,#H'03EC
	beq	?L114
	cmp	AH,#(H'0001+H'03EC)
	bcc	?L129
	cmp	AH,#H'03EA
	beq	?L123
	bra	(?L112)
?L129:
	cmp	AH,#H'6800
	beq	?L120
	bra	(?L112)
?L114:
	bsr	_pio_raw_handler
	bra	(?L130)
?L117:
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'07D0
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_MessageSendLater
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'1F40
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0001
	bsr	$_MessageSendLater
	bra	(?L112)
?L118:
	bsr	$_getHalTask
	ld	AH,#H'0000
	bsr	$_MessageCancelAll
	bsr	$_getHalTask
	ld	AH,#H'0001
	bsr	$_MessageCancelAll
	bra	(?L112)
?L120:
	bsr	_battery_message_handler
?L130:
	bsr	_powerAllowedToContinue
	cmp	AL,#H'0000
	beq	?L124
	bsr	$_update_indication
	bra	(?L112)
?L123:
	bsr	$_getHalTask
	ld	AH,#H'0004
	bsr	$_MessageCancelAll
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0009
	st	AL,@(H'0001,Y)
	ld	AL,#H'27C0
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0004
	bsr	$_MessageSendLater
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'4100
	bsr	$_MessageSend
	bra	(?L112)
?L124:
	ld	AL,#H'0003
	bsr	_hal_set_state
?L112:
?LBE_hal_active_handler:
	leavel	#5
;# begin scan referenced symbols
;# end scan referenced symbols
_hal_deactivating_state_enter:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_deactivating_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_deactivating_state_enter:
	bsr	$_update_indication
	ld	AL,#H'0012
	bsr	$_ledsPlay
	bsr	$_getHalTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0384
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0003
	bsr	$_MessageSendLater
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'4102
	bsr	$_MessageSend
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'4102
	bsr	$_MessageSend
?LBE_hal_deactivating_state_enter:
	leavel	#5
;# begin scan referenced symbols
;# end scan referenced symbols
_hal_deactivating_state_exit:
; leaf function with empty stack frame
?LBB_hal_deactivating_state_exit:
?LBE_hal_deactivating_state_exit:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
_hal_deactivating_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_deactivating_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_deactivating_handler:
	cmp	AH,#H'0003
	bne	?L141
	bsr	$_Panic
?L141:
?LBE_hal_deactivating_handler:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _hal_handler 0 ; (Non-const ref)
;# end scan referenced symbols
$_hal_init:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hal_init ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hal_init:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	AH,#hwrd(_hal_handler)
	ld	AL,#lwrd(_hal_handler)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@($_hal-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@($_hal+1-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@H'fff8
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_hal+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@H'fff9
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@($_hal+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_hal+(22)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,#($_hal+H'0017)
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'FFFF
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_hal+(27)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_hal+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_hal_initialising_state_enter
?LBE_hal_init:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_PioSetDir 0 ; (Non-const ref)
.IMPORT $_PioSet 0 ; (Non-const ref)
;# end scan referenced symbols
_enableLDO:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_enableLDO ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_enableLDO:
	ld	AL,#H'0100
	ld	AH,@$XAP_AL
	bsr	$_PioSetDir
	ld	AL,#H'0100
	ld	AH,@$XAP_AL
	bsr	$_PioSet
?LBE_enableLDO:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_disableLDO:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_disableLDO ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_disableLDO:
	ld	AL,#H'0100
	ld	AH,#H'0000
	bsr	$_PioSetDir
	ld	AL,#H'0100
	ld	AH,#H'0000
	bsr	$_PioSet
?LBE_disableLDO:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_pio_raw_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_pio_raw_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_pio_raw_handler:
?LBB6:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	and	AL,#H'0400
	and	AH,#H'0000
	cmp	AH,#H'0000
	bne	?L153
	cmp	AL,#H'0000
	beq	?L151
?L153:
	ld	AL,#H'0002
	bra	(?L152)
?L151:
	ld	AL,#H'0001
?L152:
	ld	X,#($_hal+H'0016)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE6:
?LBE_pio_raw_handler:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $___udivhi3 0 ; (Non-const ref)
;# end scan referenced symbols
_battery_message_handler:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_battery_message_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_battery_message_handler:
?LBB7:
	st	AL,@H'fffc
	bsr	$dofetch32_fff8
	ld	AL,@H'fff8
	smult	#H'0025
	ld	X,@$XAP_AL
	ld	AL,@H'fff9
	umult	#H'0025
	add	AH,@$XAP_UXL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'000F
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	bsr	$___udivhi3
	ld	X,#($_hal+H'0017)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
?LBE7:
?LBE_battery_message_handler:
	leavel	#4
;# begin scan referenced symbols
;# end scan referenced symbols
_powerAllowedToTurnOn:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_powerAllowedToTurnOn ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_powerAllowedToTurnOn:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(22)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	bne	?L156
	ld	X,#($_hal+H'0017)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	cmp	AH,#hwrd(H'0001+H'0CB1)
	bcs	?L158
	bne	?L156
	cmp	AL,#lwrd(H'0001+H'0CB1)
	bcc	?L156
?L158:
	ld	AL,#H'0000
	bra	(?L155)
?L156:
	ld	AL,#H'0001
?L155:
?LBE_powerAllowedToTurnOn:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_powerAllowedToContinue:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_powerAllowedToContinue ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_powerAllowedToContinue:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_hal+(22)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	bne	?L160
	ld	X,#($_hal+H'0017)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	cmp	AH,#hwrd(H'0001+H'0C4D)
	bcs	?L162
	bne	?L160
	cmp	AL,#lwrd(H'0001+H'0C4D)
	bcc	?L160
?L162:
	ld	AL,#H'0000
	bra	(?L159)
?L160:
	ld	AL,#H'0001
?L159:
?LBE_powerAllowedToContinue:
	leavel	#2
	.SEG	VAR
$_hal:
	DS	28
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 2 used[1] = 4 total = 6
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 15 used[1] = 16 total = 31
;# Function pattern *movqi_fetch_y_relative used[0] = 10 total = 10
;# Function pattern *movhi_store_y_relative used[2] = 12 total = 12
;# Function pattern *movhi_fetch_general used[0] = 1 total = 1
;# Function pattern *movhi_store_general used[1] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 3 total = 3
;# Function pattern *movqi_fetch_symbol_ref_with_offset used[0] = 18 total = 18
;# Function pattern *movqi_store_symbol_ref_with_offset used[0] = 10 total = 10
;# Function pattern *movhi_store_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 72 total = 72
;# Function pattern *movqi2b used[0] = 10 used[1] = 4 total = 14
;# Function pattern *movhi used[2] = 2 total = 2
;# Function pattern *andhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *mulqihi3_const used[0] = 1 total = 1
;# Function pattern *umulqihi3_const used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 45 total = 45
;# Function pattern *call1 used[0] = 59 total = 59
;# Function pattern *call_value1 used[0] = 45 total = 45
;# Function pattern addsi3+2 used[0] = 4 total = 4
;# Function pattern addsi3+3 used[0] = 3 total = 3
;# Function pattern addhi3-2 used[0] = 1 total = 1
;# Function pattern addhi3-1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+2 used[1] = 8 total = 8
;# Function pattern extendhfsf2+3 used[0] = 45 total = 45
;# Function pattern extendhfsf2+4 used[0] = 2 total = 2
;# Function pattern extendhfsf2+5 used[0] = 3 total = 3
	MODULE	indication
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	VAR
_currentState:
	DS	1
;# begin scan referenced symbols
.IMPORT $_getHalTask 0 ; (Non-const ref)
.IMPORT $_getSppbTask 0 ; (Non-const ref)
.IMPORT $_getScannerTask 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_calcIndication:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_calcIndication ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_calcIndication:
?LBB2:
	bsr	$_getHalTask
	st	AL,@(0,Y)
	bsr	$_getSppbTask
	st	AL,@(H'0001,Y)
	bsr	$_getScannerTask
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	beq	?L11
	cmp	AL,#H'0001
	bcs	?L3
	cmp	AL,#H'0002
	beq	?L14
	bra	(?L2)
?L3:
	ld	X,@(0,Y)
	add	X,#H'0017
	st	X,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L36
	cmp	AL,#H'FFFF
	beq	?L5
?L36:
	ld	AL,@(0,Y)
	add	AL,#H'0016
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L4
?L5:
	ld	AL,#H'0001
	bra	(?L1)
?L4:
	ld	X,@(0,Y)
	add	X,#H'0017
	st	X,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#hwrd(H'0001+H'0F3C)
	bcs	?L7
	bne	?L38
	cmp	AL,#lwrd(H'0001+H'0F3C)
	bcs	?L7
?L38:
	ld	AL,#H'0004
	bra	(?L1)
?L7:
	ld	AL,@(0,Y)
	add	AL,#H'0017
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#hwrd(H'0001+H'0E10)
	bcs	?L9
	bne	?L39
	cmp	AL,#lwrd(H'0001+H'0E10)
	bcs	?L9
?L39:
	ld	AL,#H'0003
	bra	(?L1)
?L9:
	ld	AL,#H'0002
	bra	(?L1)
?L11:
	ld	X,@(0,Y)
	add	X,#H'0019
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0005
	bra	(?L1)
?L14:
	ld	X,@$XAP_AH
	add	X,#H'0005
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L15
	ld	X,@$XAP_AH
	add	X,#H'0006
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L15
	ld	AL,#H'0010
	bra	(?L1)
?L15:
	ld	AL,@(H'0001,Y)
	add	AL,#H'000E
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0004)
	bcc	?L2
	add	AL,#(?L28)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L28:
	.CODE
?JT28:
	.SEG	CONST
	dc	lwrd(?L2-?JT28)
	dc	lwrd(?L2-?JT28)
	dc	lwrd(?L19-?JT28)
	dc	lwrd(?L25-?JT28)
	dc	lwrd(?L25-?JT28)
	.CODE
?L19:
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L20
	ld	AL,#H'0006
	bra	(?L1)
?L20:
	ld	X,@(0,Y)
	add	X,#H'0017
	st	X,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#hwrd(H'0001+H'0E0F)
	bcs	?L44
	bne	?L22
	cmp	AL,#lwrd(H'0001+H'0E0F)
	bcc	?L22
?L44:
	ld	AL,#H'000A
	bra	(?L1)
?L22:
	ld	AL,#H'0008
	bra	(?L1)
?L25:
	ld	AL,@(0,Y)
	add	AL,#H'0017
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#hwrd(H'0001+H'0E0F)
	bcs	?L45
	bne	?L26
	cmp	AL,#lwrd(H'0001+H'0E0F)
	bcc	?L26
?L45:
	ld	AL,#H'000B
	bra	(?L1)
?L26:
	ld	AL,#H'0009
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_calcIndication:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_calcIndication 0 ; (Non-const ref)
.IMPORT _currentState 0 ; (Non-const ref)
.IMPORT $_ledsPlay 0 ; (Non-const ref)
;# end scan referenced symbols
$_update_indication:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_update_indication ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_update_indication:
?LBB3:
	bsr	$_calcIndication
	ld	AH,@$XAP_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_currentState-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AH,@$XAP_AL
	beq	?L46
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_currentState-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@$XAP_AH
	bsr	$_ledsPlay
?L46:
?LBE3:
?LBE_update_indication:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 10 total = 10
;# Function pattern *movqi_fetch_general used[0] = 5 total = 5
;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 10 total = 10
;# Function pattern *movhi_fetch_general used[0] = 5 total = 5
;# Function pattern *movqi_fetch_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi_store_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi2b used[0] = 14 total = 14
;# Function pattern *addqi2 used[0] = 10 total = 10
;# Function pattern jump used[0] = 12 total = 12
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Single pattern tablejump used = 1
;# Function pattern subhi3+1 used[0] = 3 total = 3
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 9 total = 9
;# Function pattern extendhfsf2+5 used[0] = 5 total = 5
	MODULE	main
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_getSppbTask 0 ; (Non-const ref)
.IMPORT $_getScannerTask 0 ; (Non-const ref)
.IMPORT $_hal_init 0 ; (Non-const ref)
.IMPORT $_getHalTask 0 ; (Non-const ref)
.IMPORT $_sppb_init 0 ; (Non-const ref)
.IMPORT $_scanner_init 0 ; (Non-const ref)
.IMPORT $_MessageLoop 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_main:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_main ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_main:
	bsr	$_getSppbTask
	st	AL,@(0,Y)
	bsr	$_getScannerTask
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	bsr	$_hal_init
	bsr	$_getHalTask
	bsr	$_sppb_init
	bsr	$_getHalTask
	st	AL,@(H'0001,Y)
	bsr	$_getSppbTask
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	bsr	$_scanner_init
	bsr	$_MessageLoop
	ld	AL,#H'0000
?LBE_main:
	leavel	#4
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi2b used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern *call_value1 used[0] = 5 total = 5
	MODULE	scanner
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PioSetDir 0 ; (Non-const ref)
.IMPORT $_PioSet 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_trigger_drive_low:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_trigger_drive_low ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_trigger_drive_low:
	ld	AL,#H'0008
	ld	AH,#H'0008
	bsr	$_PioSetDir
	ld	AL,#H'0008
	ld	AH,#H'0000
	bsr	$_PioSet
?LBE_trigger_drive_low:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_trigger_pull_up:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_trigger_pull_up ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_trigger_pull_up:
	ld	AL,#H'0008
	ld	AH,#H'0000
	bsr	$_PioSetDir
	ld	AL,#H'0008
	ld	AH,#H'0008
	bsr	$_PioSet
?LBE_trigger_pull_up:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_update_indication 0 ; (Non-const ref)
.IMPORT _trigger_pull_up 0 ; (Non-const ref)
.IMPORT $_StreamUartSink 0 ; (Non-const ref)
.IMPORT $_StreamSourceFromSink 0 ; (Non-const ref)
.IMPORT $_StreamUartConfigure 0 ; (Non-const ref)
.IMPORT _scanner 0 ; (Non-const ref)
.IMPORT $_MessageSinkTask 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_off_state_enter:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_off_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_off_state_enter:
	bsr	$_update_indication
	bsr	_trigger_pull_up
	bsr	$_StreamUartSink
	bsr	$_StreamSourceFromSink
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0027; movqi2b+1 peephole
	ld	AH,#H'0000
	bsr	$_StreamUartConfigure
	bsr	$_StreamUartSink
	ld	AH,#(_scanner)
	bsr	$_MessageSinkTask
	ld	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_scanner+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?L3:
?LBE_scanner_off_state_enter:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
_scanner_off_state_exit:
; leaf function with empty stack frame
?LBB_scanner_off_state_exit:
?LBE_scanner_off_state_exit:
	bra	0,X
;# begin scan referenced symbols
.IMPORT _scanner_off_state_exit 1 ; (Const ref)
.IMPORT _scanner_on_state_enter 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_off_state_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_off_state_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_off_state_handler:
	cmp	AH,#H'4101
	bne	?L7
	bsr	_scanner_off_state_exit
	ld	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_scanner+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_scanner_on_state_enter
?L7:
?LBE_scanner_off_state_handler:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _scanner_warmup_state_enter 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_on_state_enter:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_on_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_on_state_enter:
	bsr	_trigger_pull_up
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_scanner+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_scanner_warmup_state_enter
?LBE_scanner_on_state_enter:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _scanner_warmup_state_exit 0 ; (Non-const ref)
.IMPORT _scanner_ready_state_exit 0 ; (Non-const ref)
.IMPORT _scanner_scanning_state_exit 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_on_state_exit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_on_state_exit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_on_state_exit:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_scanner+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	beq	?L17
	cmp	AL,#H'0001
	bcs	?L16
	cmp	AL,#H'0002
	beq	?L18
	bra	(?L15)
?L16:
	bsr	_scanner_warmup_state_exit
	bra	(?L15)
?L17:
	bsr	_scanner_ready_state_exit
	bra	(?L15)
?L18:
	bsr	_scanner_scanning_state_exit
?L15:
	ld	AL,#H'0003
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_scanner+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_trigger_pull_up
?LBE_scanner_on_state_exit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _scanner_on_state_exit 0 ; (Non-const ref)
.IMPORT _scanner_off_state_enter 0 ; (Non-const ref)
.IMPORT _scanner_warmup_state_handler 0 ; (Non-const ref)
.IMPORT _scanner_ready_state_handler 0 ; (Non-const ref)
.IMPORT _scanner_scanning_state_handler 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_on_state_handler:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_on_state_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_on_state_handler:
	st	AL,@H'fff8
	cmp	AH,#H'4102
	bne	?L26
	bsr	_scanner_on_state_exit
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_scanner+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_scanner_off_state_enter
	bra	(?L25)
?L26:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_scanner+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	beq	?L29
	cmp	AL,#H'0001
	bcs	?L28
	cmp	AL,#H'0002
	beq	?L30
	bra	(?L25)
?L28:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	bsr	_scanner_warmup_state_handler
	bra	(?L25)
?L29:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	bsr	_scanner_ready_state_handler
	bra	(?L25)
?L30:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	bsr	_scanner_scanning_state_handler
?L25:
?LBE_scanner_on_state_handler:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_warmup_state_enter:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_warmup_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_warmup_state_enter:
	bsr	$_update_indication
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'01F4
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#(_scanner)
	ld	AH,#H'0000
	bsr	$_MessageSendLater
?LBE_scanner_warmup_state_enter:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_MessageCancelAll 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_warmup_state_exit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_warmup_state_exit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_warmup_state_exit:
	ld	AL,#(_scanner)
	ld	AH,#H'0000
	bsr	$_MessageCancelAll
?LBE_scanner_warmup_state_exit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _scanner_ready_state_enter 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_warmup_state_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_warmup_state_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_warmup_state_handler:
	cmp	AH,#H'0000
	bne	?L40
	bsr	_scanner_warmup_state_exit
	ld	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_scanner+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_scanner_ready_state_enter
?L40:
?LBE_scanner_warmup_state_handler:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_scanner_ready_state_enter:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_ready_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_ready_state_enter:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'00E6
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#(_scanner)
	ld	AH,#H'0004
	bsr	$_MessageSendLater
?LBE_scanner_ready_state_enter:
	leavel	#5
;# begin scan referenced symbols
;# end scan referenced symbols
_scanner_ready_state_exit:
; leaf function with empty stack frame
?LBB_scanner_ready_state_exit:
?LBE_scanner_ready_state_exit:
	bra	0,X
;# begin scan referenced symbols
.IMPORT _scanner_scanning_state_enter 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_ready_state_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_ready_state_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_ready_state_handler:
	cmp	AH,#H'0004
	beq	?L52
	cmp	AH,#H'4100
	bne	?L49
	bsr	_scanner_ready_state_exit
	ld	AL,#H'0002
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_scanner+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_scanner_scanning_state_enter
	bra	(?L49)
?L52:
	bsr	$_update_indication
?L49:
?LBE_scanner_ready_state_handler:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _trigger_drive_low 0 ; (Non-const ref)
.IMPORT $_SourceSize 0 ; (Non-const ref)
.IMPORT $_SourceDrop 0 ; (Non-const ref)
.IMPORT $_barcode_clear 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_scanning_state_enter:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_scanning_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_scanning_state_enter:
?LBB2:
	bsr	$_update_indication
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0FA0
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#(_scanner)
	ld	AH,#H'0002
	bsr	$_MessageSendLater
	bsr	_trigger_drive_low
	bsr	$_StreamUartSink
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L58
	bsr	$_SourceSize
	cmp	AL,#H'0000
	beq	?L58
	ld	AL,@(H'0003,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	bsr	$_SourceDrop
?L58:
	ld	AL,#(_scanner+H'0007)
	bsr	$_barcode_clear
?LBE2:
?LBE_scanner_scanning_state_enter:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
;# end scan referenced symbols
_scanner_scanning_state_exit:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_scanning_state_exit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_scanning_state_exit:
?LBB3:
	ld	AL,#(_scanner)
	ld	AH,#H'0002
	bsr	$_MessageCancelAll
	bsr	_trigger_pull_up
	bsr	$_StreamUartSink
	bsr	$_StreamSourceFromSink
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L62
	bsr	$_SourceSize
	cmp	AL,#H'0000
	beq	?L62
	ld	AL,@(0,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	bsr	$_SourceDrop
?L62:
	ld	AL,#(_scanner)
	ld	AH,#-H'7FDF
	bsr	$_MessageCancelAll
	ld	AL,#(_scanner)
	ld	AH,#-H'7FDE
	bsr	$_MessageCancelAll
	ld	AL,#(_scanner+H'0007)
	bsr	$_barcode_clear
?LBE3:
?LBE_scanner_scanning_state_exit:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_SourceMap 0 ; (Non-const ref)
.IMPORT $_barcode_fill_raw_bytes 0 ; (Non-const ref)
.IMPORT $_ledsPlay 0 ; (Non-const ref)
.IMPORT $_barcode_is_terminated 0 ; (Non-const ref)
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_memcpy 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_scanning_state_handler:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_scanning_state_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_scanning_state_handler:
?LBB4:
	cmp	AH,#H'0004
	beq	?L76
	cmp	AH,#(H'0001+H'0004)
	bcc	?L79
	cmp	AH,#H'0002
	beq	?L70
	bra	(?L65)
?L79:
	cmp	AH,#H'4100
	beq	?L65
	cmp	AH,#-H'7FDF
	bne	?L65
?LBB5:
	bsr	$_StreamUartSink
	bsr	$_StreamSourceFromSink
	st	AL,@(H'0001,Y)
	bsr	$_SourceSize
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_SourceMap
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,#(_scanner+H'0007)
	bsr	$_barcode_fill_raw_bytes
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_SourceDrop
	ld	AL,#H'0011
	bsr	$_ledsPlay
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0001
	bne	?L70
	ld	AL,#(_scanner+H'0007)
	bsr	$_barcode_is_terminated
	cmp	AL,#H'0000
	beq	?L65
?LBB6:
	ld	AL,#H'0032
	bsr	$_malloc
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L70
	ld	AL,#H'0032
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y); movqi2b+1 peephole
	ld	AH,#(_scanner+H'0007)
	bsr	$_memcpy
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_scanner+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'3800
	bsr	$_MessageSend
?L70:
?LBE6:
	bsr	_scanner_scanning_state_exit
	ld	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_scanner+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_scanner_ready_state_enter
?LBE5:
	bra	(?L65)
?L76:
	bsr	$_update_indication
?L65:
?LBE4:
?LBE_scanner_scanning_state_handler:
	leavel	#7
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT _scanner_off_state_handler 0 ; (Non-const ref)
.IMPORT _scanner_on_state_handler 0 ; (Non-const ref)
;# end scan referenced symbols
_scanner_handler:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_handler:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	AH,@(H'0003,Y)
?LBB7:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_scanner+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	beq	?L89
	cmp	AL,#H'0001
	beq	?L90
	bra	(?L87)
?L89:
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_scanner_off_state_handler
	bra	(?L87)
?L90:
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	_scanner_on_state_handler
?L87:
?LBE7:
?LBE_scanner_handler:
	leavel	#3
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
.IMPORT _scanner_handler 0 ; (Non-const ref)
;# end scan referenced symbols
$_scanner_init:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_scanner_init ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_scanner_init:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	_trigger_pull_up
	ld	AH,#hwrd(_scanner_handler)
	ld	AL,#lwrd(_scanner_handler)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_scanner-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(_scanner+1-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_scanner+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@(H'0001,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_scanner+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_scanner+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'0003
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_scanner+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,#(_scanner+H'0007)
	bsr	$_barcode_clear
	bsr	_scanner_off_state_enter
?LBE_scanner_init:
	leavel	#4
;# begin scan referenced symbols
;# end scan referenced symbols
$_getScannerTask:
; leaf function with empty stack frame
?LBB_getScannerTask:
	ld	AL,#(_scanner)
?LBE_getScannerTask:
	bra	0,X
	.SEG	VAR
_scanner:
	DS	57
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 15 used[1] = 3 total = 18
;# Function pattern *movqi_fetch_y_relative used[0] = 9 total = 9
;# Function pattern *movhi_store_y_relative used[2] = 3 total = 3
;# Function pattern *movqi_fetch_symbol_ref_with_offset used[0] = 4 total = 4
;# Function pattern *movqi_store_symbol_ref_with_offset used[0] = 12 total = 12
;# Function pattern *movhi_store_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 58 total = 58
;# Function pattern *movqi2b used[0] = 3 used[1] = 3 total = 6
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern jump used[0] = 12 total = 12
;# Function pattern *call1 used[0] = 46 total = 46
;# Function pattern *call_value1 used[0] = 25 total = 25
;# Function pattern addhi3-1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 25 total = 25
	MODULE	spp_dev_auth
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_ConnectionSmPinCodeResponse 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_sppDevHandlePinCodeRequest:
	enterl	#19
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppDevHandlePinCodeRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppDevHandlePinCodeRequest:
?LBB2:
	st	AL,@H'ffff
	ld	AL,#H'0030
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,#H'0030
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,#H'0030
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,#H'0030
	st	AL,@(H'0004,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,#H'0004
	bsr	$_ConnectionSmPinCodeResponse
?LBE2:
?LBE_sppDevHandlePinCodeRequest:
	leavel	#19
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_ConnectionSmAuthoriseResponse 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppDevAuthoriseResponse:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppDevAuthoriseResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppDevAuthoriseResponse:
	st	AL,@H'fff8
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	X,@H'fff8
	add	X,#H'0007
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8; movqi2b+1 peephole
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	$_ConnectionSmAuthoriseResponse
?LBE_sppDevAuthoriseResponse:
	leavel	#6
;# begin scan referenced symbols
.IMPORT $_SppConnectResponseLazy 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppDevAuthoriseConnectInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppDevAuthoriseConnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppDevAuthoriseConnectInd:
	ld	AL,#H'0001
	add	AL,@$XAP_AH
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0001
	bsr	$_SppConnectResponseLazy
?LBE_sppDevAuthoriseConnectInd:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_ConnectionSmSetTrustLevel 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppDevSetTrustLevel:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppDevSetTrustLevel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppDevSetTrustLevel:
	ld	AH,@$XAP_AL
	add	AL,#H'0004
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L4
	ld	AL,@$XAP_AH
	ld	AH,#H'0001
	bsr	$_ConnectionSmSetTrustLevel
?L4:
?LBE_sppDevSetTrustLevel:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 3 used[1] = 6 total = 9
;# Function pattern *movhi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *movqi2b used[0] = 1 used[1] = 1 total = 2
;# Function pattern *addqi0-framep used[0] = 1 total = 1
;# Function pattern *addqi2 used[2] = 1 total = 1
;# Function pattern *call1 used[0] = 4 total = 4
;# Function pattern addhi3-1 used[0] = 1 total = 1
;# Function pattern subhi3+1 used[0] = 3 total = 3
;# Function pattern subhi3+2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	spp_dev_b_buttons
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_pio_encode:
; leaf function with empty stack frame
?LBB_pio_encode:
	cmp	AL,#H'0020
	beq	?L4
	cmp	AL,#(H'0001+H'0020)
	bcc	?L8
	cmp	AL,#H'0010
	beq	?L3
	bra	(?L6)
?L8:
	cmp	AL,#H'0030
	beq	?L5
	bra	(?L6)
?L3:
	ld	AL,#H'0000
	bra	(?L1)
?L4:
	ld	AL,#H'0001
	bra	(?L1)
?L5:
	ld	AL,#H'0002
	bra	(?L1)
?L6:
	ld	AL,#H'0003
?L1:
?LBE_pio_encode:
	bra	0,X
	.SEG	CONST
_enter_messages_sPOWER_BUTTON:
	dc	H'0000
	dc	H'0000
	dc	H'03E8
	dc	H'8000
	dc	H'0000
	dc	H'03E9
_enter_messages_sSCAN_BUTTON:
	dc	H'0000
	dc	H'0000
	dc	H'03EA
_enter_messages:
	dc	H'0002
	dc	_enter_messages_sPOWER_BUTTON
	dc	H'0001
	dc	_enter_messages_sSCAN_BUTTON
	dc	H'0000
	dc	H'0000
;# begin scan referenced symbols
.IMPORT _enter_messages 1 ; (Const ref)
.IMPORT $_MessageCancelAll 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_send_pio_enter_messages:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_send_pio_enter_messages ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_send_pio_enter_messages:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_AH
?LBB2:
	add	AL,@$XAP_AH
	ld	X,@$XAP_AL
	add	X,#(_enter_messages)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	st	AH,@(H'0005,Y)
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0007,Y)
	add	AH,#-H'0001
	st	AH,@(H'0006,Y)
	cmp	AH,#-H'0001
	beq	?L26
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@(H'0008,Y)
?L24:
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	lsr	#H'000E
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L16
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0004,Y)
	bne	?L17
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_MessageCancelAll
	cmp	AL,#H'0000
	beq	?L18
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	ld	AL,#H'0003
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0007,Y)
	add	AH,#H'0002
	bra	(?L28)
?L18:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y); movqi2b+1 peephole
	add	AL,#H'0001
	st	AL,@H'fffc
	bra	(?L27)
?L17:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	ld	AL,@(H'0004,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_MessageCancelAll
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0007,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
?L27:
	bsr	$dofetch_AH
	lsr	#H'0001
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_MessageSendLater
	bra	(?L21)
?L16:
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	lsr	#H'000F
	cmp	AH,#H'0000
	bne	?L22
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
?L28:
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_MessageSend
	bra	(?L21)
?L22:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	ld	AL,@(H'0004,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	sub	AL,@(H'0006,Y)
	add	AL,#-H'0001
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dostore_AL
?L21:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0003
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#-H'0001
	st	AH,@(H'0006,Y)
	cmp	AH,#-H'0001
	bne	?L24
?L26:
?LBE2:
?LBE_send_pio_enter_messages:
	leavel	#11
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	.SEG	CONST
_timed_messages_sPOWER_BUTTON_SCAN_BUTTON:
	dc	H'2710
	dc	H'0000
	dc	H'03EB
_timed_messages:
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	_timed_messages_sPOWER_BUTTON_SCAN_BUTTON
;# begin scan referenced symbols
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_PanicNull 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_send_pio_timed_message:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_send_pio_timed_message ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_send_pio_timed_message:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB3:
	ld	AL,#H'0001
	bsr	$_malloc
	bsr	$_PanicNull
	st	AL,@H'fffc
	ld	AH,@(H'0004,Y)
	bsr	$dostore_AH
	ld	AH,@(H'0007,Y)
	cmp	AH,#H'0000
	beq	?L36
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'0001
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	bra	(?L38)
?L36:
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'7FFF
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
?L38:
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_MessageSendLater
?LBE3:
?LBE_send_pio_timed_message:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT _timed_messages 1 ; (Const ref)
.IMPORT _send_pio_timed_message 0 ; (Non-const ref)
;# end scan referenced symbols
_send_pio_timed_messages:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_send_pio_timed_messages ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_send_pio_timed_messages:
	st	AL,@(H'0001,Y)
?LBB4:
	add	AH,@$XAP_AH
	ld	X,@$XAP_AH
	add	X,#(_timed_messages)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#-H'0001
	beq	?L46
?L44:
	ld	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0003
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	bsr	_send_pio_timed_message
	ld	AL,@(H'0002,Y)
	add	AL,#-H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#-H'0001
	bne	?L44
?L46:
?LBE4:
?LBE_send_pio_timed_messages:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT _pio_encode 1 ; (Const ref)
.IMPORT _send_pio_enter_messages 0 ; (Non-const ref)
.IMPORT _send_pio_timed_messages 0 ; (Non-const ref)
;# end scan referenced symbols
_pioChanged:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_pioChanged ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_pioChanged:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'000B,Y)
?LBB5:
	ld	AH,#H'0001
	st	AH,@(H'0006,Y)
	ld	AH,@$XAP_AL
	and	AH,#-H'0401
	st	AH,@(H'0005,Y)
	and	AL,#H'0400
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	cmp	AH,@$XAP_AL
	beq	?L50
?LBB6:
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@H'fffc
	ld	AH,@(H'0004,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'03EC
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0004,Y)
	bsr	$dostore_AH
?L50:
?LBE6:
	ld	AL,@(H'0005,Y)
	bsr	_pio_encode
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0005,Y)
	cmp	AH,@$XAP_AL
	bne	?L51
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
?L51:
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'0000
	beq	?L49
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fff8
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0003
	beq	?L53
	ld	AH,@(H'0003,Y)
	cmp	AH,@$XAP_AL
	beq	?L53
	ld	AL,@(H'0002,Y)
?LBB7:
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	xor	AL,@(H'0005,Y)
	bsr	$dofetch_AH
	and	AL,@$XAP_AH
	cmp	AL,@$XAP_AH
	bne	?L54
?LBB8:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,@$XAP_AL
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#(_enter_messages+H'0001)
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_X
	st	X,@H'fff8
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	smult	#H'0003
	ld	AH,@$XAP_AL
	add	AH,@H'fff8
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AH,#H'0002
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	$_MessageSend
?L54:
	ld	AH,@(H'0002,Y)
?LBE8:
	add	AH,#H'0003
	st	AH,@H'fffc
	ld	AL,#H'0003
	bsr	$dostore_AL
?L53:
	ld	AH,@(H'0002,Y)
?LBE7:
	add	AH,#H'0009
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L55
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?L55:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_MessageCancelAll
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0003
	beq	?L56
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_send_pio_enter_messages
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_send_pio_timed_messages
?L56:
	ld	AH,@(H'0002,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,@(H'0005,Y)
	bsr	$dostore_AL
?L49:
?LBE5:
?LBE_pioChanged:
	leavel	#11
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT _pioChanged 0 ; (Non-const ref)
;# end scan referenced symbols
_pioHandler:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_pioHandler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_pioHandler:
	st	AL,@H'fff8
	ld	AL,@(H'0006,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
?LBB9:
	cmp	AH,#H'0001
	beq	?L65
	cmp	AH,#H'0001
	bcs	?L67
	cmp	AH,#-H'7FDD
	beq	?L73
	bra	(?L65)
?L67:
?LBB10:
	st	AL,@H'fffc
	bsr	$dofetch_AH
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	X,@(H'0002,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L68
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bra	(?L69)
?L68:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_MessageSend
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L69:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AH,#H'0003
	bsr	$dostore_AH
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	lsr	#H'000F
	cmp	AH,#H'0000
	beq	?L65
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0001
	cmp	AH,#H'0000
	beq	?L71
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	ld	AH,@(H'0003,Y)
	bsr	$dostore_AH
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bra	(?L77)
?L71:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
?L77:
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_send_pio_timed_message
?LBE10:
	bra	(?L65)
?L73:
?LBB11:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dofetch_AH
	xor	AL,@$XAP_AH
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'0001,Y)
	bsr	_pioChanged
?L65:
?LBE11:
?LBE9:
?LBE_pioHandler:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_PioGet 0 ; (Non-const ref)
.IMPORT _pioHandler 0 ; (Non-const ref)
.IMPORT $_PsFullRetrieve 0 ; (Non-const ref)
.IMPORT $_MessagePioTask 0 ; (Non-const ref)
.IMPORT $_PioDebounce 0 ; (Non-const ref)
;# end scan referenced symbols
$_pioInit:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_pioInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_pioInit:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB12:
	ld	AL,#H'0004
	bsr	$_malloc
	st	AL,@(H'0004,Y)
	bsr	$_PioGet
	st	AL,@(H'0005,Y)
	st	AL,@H'ffff
	ld	AL,#-H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#hwrd(_pioHandler)
	ld	AL,#lwrd(_pioHandler)
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	bsr	$dostore_AH
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,#H'039F; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsFullRetrieve
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	bsr	$dofetch_AL
	xor	AL,#-H'0001
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	ld	AL,#H'0003
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	xor	AL,@(H'0001,Y)
	xor	AL,#-H'0001
	and	AL,#H'0400
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	bsr	$_MessagePioTask
	ld	AL,#H'0014
	st	AL,@(0,Y)
	ld	AL,#H'0430; movqi2b+1 peephole
	ld	AH,#H'0002
	bsr	$_PioDebounce
	ld	AL,@(H'0005,Y)
	and	AL,#H'0430
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,#-H'7FDD
	bsr	$_MessageSend
?LBE12:
?LBE_pioInit:
	leavel	#8
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 44 used[1] = 3 total = 47
;# Function pattern *movqi_fetch_general used[0] = 25 used[1] = 1 total = 26
;# Function pattern *movqi_store_y_relative used[0] = 36 used[1] = 7 total = 43
;# Function pattern *movqi_fetch_y_relative used[0] = 59 total = 59
;# Function pattern *movhi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movhi_store_general used[1] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 23 total = 23
;# Function pattern *movqi2 used[0] = 37 total = 37
;# Function pattern *movqi2b used[0] = 8 used[1] = 2 total = 10
;# Function pattern *addqi0-framep used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 49 used[2] = 1 used[3] = 3 total = 53
;# Function pattern *andqi3 used[0] = 8 total = 8
;# Function pattern *xorqi3 used[0] = 3 total = 3
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 6 total = 6
;# Function pattern one_cmplqi2 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 3 total = 3
;# Function pattern jump used[0] = 14 total = 14
;# Function pattern *call1 used[0] = 14 total = 14
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Function pattern addsi3+1 used[0] = 6 total = 6
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern addhi3-1 used[0] = 7 total = 7
;# Function pattern subhi3+1 used[0] = 6 total = 6
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 26 total = 26
	MODULE	spp_dev_b_leds
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	CONST
_gLedPinsUsed:
	dc	H'0A07
_pattern_ALL_LEDS_OFF:
	dc	H'0807
	dc	H'0000
_pattern_WHITE_ON:
	dc	H'0007
	dc	H'8000
_pattern_RED_ON:
	dc	H'0002
	dc	H'8000
_pattern_RED_GREEN_ON:
	dc	H'0003
	dc	H'8000
_pattern_GREEN_ON:
	dc	H'0001
	dc	H'8000
_pattern_BLUE_ON:
	dc	H'0004
	dc	H'8000
_pattern_BLUE_FAST_FLASH:
	dc	H'0004
	dc	H'8064
	dc	H'0004
	dc	H'0064
_pattern_WHITE_FAST_FLASH:
	dc	H'0007
	dc	H'8064
	dc	H'0007
	dc	H'0064
_pattern_BLUE_SLOW_FLASH:
	dc	H'0004
	dc	H'80C8
	dc	H'0004
	dc	H'0ED8
_pattern_BLUE_SLOW_BURST:
	dc	H'0004
	dc	H'80C8
	dc	H'0004
	dc	H'0064
	dc	H'0004
	dc	H'80C8
	dc	H'0004
	dc	H'0064
	dc	H'0004
	dc	H'80C8
	dc	H'0004
	dc	H'0C80
_pattern_RED_SLOW_FLASH:
	dc	H'0002
	dc	H'80C8
	dc	H'0002
	dc	H'0ED8
_pattern_RED_SLOW_BURST:
	dc	H'0002
	dc	H'80C8
	dc	H'0002
	dc	H'0064
	dc	H'0002
	dc	H'80C8
	dc	H'0002
	dc	H'0064
	dc	H'0002
	dc	H'80C8
	dc	H'0002
	dc	H'0C80
_pattern_RED_ON_BLUE_SLOW_FLASH:
	dc	H'0002
	dc	H'87D0
	dc	H'0002
	dc	H'0000
	dc	H'0004
	dc	H'80C8
	dc	H'0004
	dc	H'0000
_pattern_RED_GREEN_ON_BLUE_SLOW_FLASH:
	dc	H'0003
	dc	H'87D0
	dc	H'0003
	dc	H'0000
	dc	H'0004
	dc	H'80C8
	dc	H'0004
	dc	H'0000
_pattern_GREEN_ON_BLUE_SLOW_FLASH:
	dc	H'0800
	dc	H'0000
	dc	H'0001
	dc	H'87D0
	dc	H'0001
	dc	H'0000
	dc	H'0004
	dc	H'80C8
	dc	H'0004
	dc	H'0000
_pattern_RED_GREEN_BLUE_ALT:
	dc	H'0002
	dc	H'80C8
	dc	H'0002
	dc	H'00C8
	dc	H'0001
	dc	H'80C8
	dc	H'0001
	dc	H'00C8
	dc	H'0004
	dc	H'80C8
	dc	H'0004
	dc	H'00C8
_pattern_RAINBOW:
	dc	H'0002
	dc	H'8032
	dc	H'0002
	dc	H'0000
	dc	H'0003
	dc	H'8032
	dc	H'0003
	dc	H'0000
	dc	H'0001
	dc	H'8032
	dc	H'0001
	dc	H'0000
	dc	H'0005
	dc	H'8032
	dc	H'0005
	dc	H'0000
	dc	H'0004
	dc	H'8032
	dc	H'0004
	dc	H'0000
	dc	H'0006
	dc	H'8032
	dc	H'0006
	dc	H'0000
_pattern_BEEP_ONCE:
	dc	H'0A00
	dc	H'80C8
	dc	H'0A00
	dc	H'0032
_pattern_BEEP_TWICE:
	dc	H'0A00
	dc	H'812C
	dc	H'0A00
	dc	H'0064
	dc	H'0A00
	dc	H'812C
	dc	H'0A00
	dc	H'0064
_pattern_BEEP_THREE_TIMES:
	dc	H'0800
	dc	H'812C
	dc	H'0800
	dc	H'0064
	dc	H'0800
	dc	H'812C
	dc	H'0800
	dc	H'0064
	dc	H'0800
	dc	H'812C
	dc	H'0800
	dc	H'0064
_gLeds:
	dc	H'0101
	dc	_pattern_ALL_LEDS_OFF
	dc	H'0101
	dc	_pattern_WHITE_ON
	dc	H'0101
	dc	_pattern_RED_ON
	dc	H'0101
	dc	_pattern_RED_GREEN_ON
	dc	H'0101
	dc	_pattern_GREEN_ON
	dc	H'0101
	dc	_pattern_BLUE_ON
	dc	H'0201
	dc	_pattern_BLUE_FAST_FLASH
	dc	H'0201
	dc	_pattern_WHITE_FAST_FLASH
	dc	H'0201
	dc	_pattern_BLUE_SLOW_FLASH
	dc	H'0601
	dc	_pattern_BLUE_SLOW_BURST
	dc	H'0201
	dc	_pattern_RED_SLOW_FLASH
	dc	H'0601
	dc	_pattern_RED_SLOW_BURST
	dc	H'0401
	dc	_pattern_RED_ON_BLUE_SLOW_FLASH
	dc	H'0401
	dc	_pattern_RED_GREEN_ON_BLUE_SLOW_FLASH
	dc	H'0501
	dc	_pattern_GREEN_ON_BLUE_SLOW_FLASH
	dc	H'0601
	dc	_pattern_RED_GREEN_BLUE_ALT
	dc	H'0C01
	dc	_pattern_RAINBOW
	dc	H'0200
	dc	_pattern_BEEP_ONCE
	dc	H'0400
	dc	_pattern_BEEP_TWICE
	dc	H'0600
	dc	_pattern_BEEP_THREE_TIMES
	.SEG	INIT
$_LED:
	DS	1
	.SEG	INITC
	dc	H'0000
;# begin scan referenced symbols
.IMPORT $_LED 0 ; (Non-const ref)
.IMPORT _ledsInit 0 ; (Non-const ref)
.IMPORT _ledsConfigPattern 0 ; (Non-const ref)
.IMPORT $_MessageFlushTask 0 ; (Non-const ref)
.IMPORT _gLedPinsUsed 1 ; (Const ref)
.IMPORT _ledsSet 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ledsPlay:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ledsPlay ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ledsPlay:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	bne	?L2
	bsr	_ledsInit
?L2:
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0013
	bcz	?L3
	ld	AL,#H'0000
	bra	(?L1)
?L3:
	ld	AL,@(H'0001,Y)
	bsr	_ledsConfigPattern
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L4
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_MessageFlushTask
	ld	X,#(_gLedPinsUsed)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0000
	bsr	_ledsSet
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'0000
	bsr	$_MessageSend
?L4:
	ld	AL,@(H'0002,Y)
?L1:
?LBE2:
?LBE_ledsPlay:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT _gLeds 1 ; (Const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
_ledsHandler:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ledsHandler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ledsHandler:
	st	AL,@(H'0003,Y)
	cmp	AH,#H'0000
	bne	?L8
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fff9
;	ld	X,@H'ffff; Redundant: REMOVED by as
;	st	X,@H'ffff; Redundant: REMOVED by as
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AL,@H'ffff
	ld	AL,@H'fffc
	st	AL,@H'fff8
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	add	AL,@$XAP_AL
	ld	X,@$XAP_AL
	add	X,#(_gLeds)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,@$XAP_AH
	bcs	?L11
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,@$XAP_AL
	add	AL,#(_gLeds)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L12
	st	X,@H'ffff
	ld	X,@H'fff9
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L18)
?L12:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AH
	add	X,#H'0005
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AL,@$XAP_AL
	add	AL,#(_gLeds)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L11
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@H'ffff
?L18:
	ld	AL,#H'0000
	bsr	$dostore_AL
?L11:
	ld	AL,@(H'0003,Y)
	bsr	$_MessageFlushTask
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AL,@$XAP_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/1 peephole
	bsr	$dofetch_X
	st	X,@H'fff8
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#(_gLeds+H'0001)
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_X
	st	X,@H'fffb
	ld	AL,@H'fff8
	add	AL,@H'fff8
	st	AL,@H'fff8
	add	AL,@H'fffb
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'000F
	ld	X,@H'fff8
	add	X,@H'fffb
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	_ledsSet
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AL,@H'ffff
	ld	AL,@H'fffc
	st	AL,@H'fff9
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	add	AL,@$XAP_AL
	ld	X,@$XAP_AL
	add	X,#(_gLeds)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	cmp	AH,#H'0001
	beq	?L15
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	add	AH,@$XAP_AH
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#(_gLeds+H'0001)
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AH
	add	AL,@$XAP_AL
	add	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#H'7FFF
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0000
	bsr	$_MessageSendLater
?L15:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AL,#H'0001
	bsr	$dostore_AL
?L8:
?LBE_ledsHandler:
	leavel	#6
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT _ledsHandler 0 ; (Non-const ref)
;# end scan referenced symbols
_ledsInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ledsInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ledsInit:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#hwrd(_ledsHandler)
	ld	AL,#lwrd(_ledsHandler)
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0004
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE_ledsInit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _ledsSetPio 0 ; (Non-const ref)
;# end scan referenced symbols
_ledsSet:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ledsSet ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ledsSet:
?LBB3:
	bsr	_ledsSetPio
?LBE3:
?LBE_ledsSet:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_PioSetDir 0 ; (Non-const ref)
.IMPORT $_PioSet 0 ; (Non-const ref)
;# end scan referenced symbols
_ledsSetPio:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ledsSetPio ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ledsSetPio:
	st	AL,@(0,Y)
?LBB4:
	cmp	AH,#H'0001
	beq	?L29
	ld	AL,#H'0000
?L29:
	st	AL,@(H'0001,Y)
	ld	AL,@(0,Y)
	ld	AH,@$XAP_AL
	bsr	$_PioSetDir
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_PioSet
?LBE4:
?LBE_ledsSetPio:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
_ledsConfigPattern:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ledsConfigPattern ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ledsConfigPattern:
	st	AL,@H'fff8
?LBB5:
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AL,@$XAP_AL
	add	AL,#(_gLeds)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L32
	ld	AL,@H'fff8
	add	AL,@H'fff8
	add	AL,#(_gLeds)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L33
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_fff8
	bra	(?L39)
?L33:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_fff8
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L38)
?L32:
	ld	AL,@H'fff8
	add	AL,@H'fff8
	add	AL,#(_gLeds)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L36
?L39:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AL
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_fff8
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@($_LED-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
?L38:
	ld	AL,#H'0000
	bsr	$dostore_AL
	bra	(?L35)
?L36:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L35:
?LBE5:
	ld	AL,@H'fff9
?LBE_ledsConfigPattern:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 used[1] = 1 total = 2
;# Function pattern *movqi_fetch_general used[0] = 3 used[1] = 1 total = 4
;# Function pattern *movqi_store_y_relative used[0] = 5 used[1] = 2 total = 7
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_general used[1] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 9 total = 9
;# Function pattern *movqi_fetch_symbol_ref used[0] = 23 total = 23
;# Function pattern *movqi_store_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 20 total = 20
;# Function pattern *movqi2b used[0] = 3 used[1] = 6 total = 9
;# Function pattern *addqi2 used[0] = 11 used[2] = 2 used[3] = 14 total = 27
;# Function pattern *andqi3 used[0] = 6 total = 6
;# Function pattern *lshrqi3 used[0] = 3 total = 3
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 8 total = 8
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern addsi3+1 used[0] = 4 total = 4
;# Function pattern subhi3+1 used[0] = 19 used[1] = 1 total = 20
;# Function pattern addqi3-2 used[0] = 7 total = 7
;# Function pattern extendhfsf2+3 used[0] = 12 total = 12
;# Function pattern extendhfsf2+6 used[0] = 1 total = 1
	MODULE	sppb
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:/BlueLab412/tools/include/firmware
;# -IC:/BlueLab412/tools/include/standard
;# -IC:/BlueLab412/tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DDEV_CASIRA -DNO_DEBUG -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_getSppbTask 0 ; (Non-const ref)
.IMPORT $_SppInitLazy 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sppDevInit:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppDevInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppDevInit:
?LBB2:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dostore_AL
	bsr	$_getSppbTask
	st	AL,@(H'0005,Y)
	bsr	$_getSppbTask
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	bsr	$_SppInitLazy
?LBE2:
?LBE_sppDevInit:
	leavel	#8
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT _sppb 0 ; (Non-const ref)
;# end scan referenced symbols
$_getSppbTask:
; leaf function with empty stack frame
?LBB_getSppbTask:
	ld	AL,#(_sppb)
?LBE_getSppbTask:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
_unhandledSppState:
; leaf function with empty stack frame
?LBB_unhandledSppState:
?LBE_unhandledSppState:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
_setSppState:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_setSppState ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_setSppState:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(14)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE_setSppState:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_update_indication 0 ; (Non-const ref)
.IMPORT $_ConnectionInit 0 ; (Non-const ref)
;# end scan referenced symbols
_sppb_initialising_state_enter:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_initialising_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_initialising_state_enter:
	bsr	$_update_indication
	bsr	$_getSppbTask
	bsr	$_ConnectionInit
?LBE_sppb_initialising_state_enter:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_sppb_initialising_state_exit:
; leaf function with empty stack frame
?LBB_sppb_initialising_state_exit:
?LBE_sppb_initialising_state_exit:
	bra	0,X
;# begin scan referenced symbols
.IMPORT _sppb_initialising_state_exit 1 ; (Const ref)
.IMPORT _sppb_ready_state_enter 0 ; (Non-const ref)
.IMPORT _unhandledSppState 1 ; (Const ref)
;# end scan referenced symbols
_sppb_initialising_state_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_initialising_state_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_initialising_state_handler:
	cmp	AH,#H'6F00
	bne	?L12
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L7
	ld	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_sppb_initialising_state_exit
	ld	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(14)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_sppb_ready_state_enter
	bra	(?L7)
?L12:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(14)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_unhandledSppState
?L7:
?LBE_sppb_initialising_state_handler:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_sppb_ready_state_enter:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_ready_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_ready_state_enter:
	bsr	$_update_indication
?LBE_sppb_ready_state_enter:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_sppb_ready_state_exit:
; leaf function with empty stack frame
?LBB_sppb_ready_state_exit:
?LBE_sppb_ready_state_exit:
	bra	0,X
;# begin scan referenced symbols
.IMPORT _sppb_ready_state_exit 1 ; (Const ref)
.IMPORT _setSppState 0 ; (Non-const ref)
.IMPORT _sppb_scan_state_enter 0 ; (Non-const ref)
;# end scan referenced symbols
_sppb_ready_state_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_ready_state_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_ready_state_handler:
	cmp	AH,#H'4101
	bne	?L21
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(9)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_sppb_ready_state_exit
	ld	AL,#H'0002
	bsr	_setSppState
	bsr	_sppb_scan_state_enter
	bra	(?L18)
?L21:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(14)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_unhandledSppState
?L18:
?LBE_sppb_ready_state_handler:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_ConnectionSmRegisterIncomingService 0 ; (Non-const ref)
.IMPORT $_ConnectionWriteClassOfDevice 0 ; (Non-const ref)
.IMPORT $_ConnectionWriteInquiryscanActivity 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSetSdpSecurityIn 0 ; (Non-const ref)
.IMPORT $_ConnectionWriteScanEnable 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
_sppb_scan_state_enter:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_scan_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_scan_state_enter:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	bsr	$_ConnectionSmRegisterIncomingService
	ld	AL,#H'1F00
	ld	AH,#H'0000
	bsr	$_ConnectionWriteClassOfDevice
	ld	AL,#H'0400
	ld	AH,#H'0200
	bsr	$_ConnectionWriteInquiryscanActivity
	ld	AL,#H'0001
	bsr	$_ConnectionSmSetSdpSecurityIn
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(11)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(9)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	bne	?L25
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(9)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,#H'0003
	bsr	$_ConnectionWriteScanEnable
	ld	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(10)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_getSppbTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,#H'5F90
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_MessageSendLater
	bra	(?L26)
?L25:
	ld	AL,#H'0002
	bsr	$_ConnectionWriteScanEnable
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(10)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?L26:
	bsr	$_update_indication
?LBE_sppb_scan_state_enter:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_MessageCancelAll 0 ; (Non-const ref)
;# end scan referenced symbols
_sppb_scan_state_exit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_scan_state_exit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_scan_state_exit:
	ld	AL,#H'0000
	bsr	$_ConnectionWriteScanEnable
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(10)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	bne	?L28
	bsr	$_getSppbTask
	ld	AH,#H'0000
	bsr	$_MessageCancelAll
?L28:
?LBE_sppb_scan_state_exit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_sppDevAuthoriseConnectInd 0 ; (Non-const ref)
.IMPORT $_SppDisconnect 0 ; (Non-const ref)
.IMPORT _sppb_scan_state_exit 0 ; (Non-const ref)
.IMPORT _sppb_connected_state_enter 0 ; (Non-const ref)
;# end scan referenced symbols
_sppb_scan_state_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_scan_state_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_scan_state_handler:
	st	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	st	AL,@H'fff8
	ld	AL,@H'ffff
?LBB3:
	cmp	AH,#H'4102
	beq	?L43
	cmp	AH,#(H'0001+H'4102)
	bcc	?L46
	cmp	AH,#H'0000
	beq	?L42
	bra	(?L31)
?L46:
	cmp	AH,#H'6F01
	beq	?L36
	cmp	AH,#H'6F02
	bne	?L31
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(11)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	bne	?L31
	ld	AL,#(_sppb)
	ld	AH,@H'fff8
	bsr	$_sppDevAuthoriseConnectInd
	ld	AL,#H'0001
	bra	(?L47)
?L36:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(11)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	bne	?L37
?LBB4:
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L31
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_SppDisconnect
?LBE4:
	bra	(?L31)
?L37:
?LBB5:
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L40
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(12)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(13)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_sppb_scan_state_exit
	ld	AL,#H'0003
	bsr	_setSppState
	bsr	_sppb_connected_state_enter
	bra	(?L31)
?L40:
	ld	AL,#H'0000
?L47:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(11)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_update_indication
?LBE5:
	bra	(?L31)
?L42:
	ld	AL,#H'0002
	bsr	$_ConnectionWriteScanEnable
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(10)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L31)
?L43:
	bsr	_sppb_scan_state_exit
	ld	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(14)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_sppb_ready_state_enter
?L31:
?LBE3:
?LBE_sppb_scan_state_handler:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_StreamSourceFromSink 0 ; (Non-const ref)
.IMPORT $_StreamConnectDispose 0 ; (Non-const ref)
;# end scan referenced symbols
_sppb_connected_state_enter:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_connected_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_connected_state_enter:
?LBB6:
	bsr	$_update_indication
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(13)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_StreamSourceFromSink
	bsr	$_StreamConnectDispose
?LBE6:
?LBE_sppb_connected_state_enter:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
;# end scan referenced symbols
_sppb_connected_state_exit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_connected_state_exit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_connected_state_exit:
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(13)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE_sppb_connected_state_exit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _sppb_connected_state_exit 0 ; (Non-const ref)
.IMPORT _sppb_disconnecting_state_enter 0 ; (Non-const ref)
.IMPORT $_ledsPlay 0 ; (Non-const ref)
.IMPORT $_SinkIsValid 0 ; (Non-const ref)
.IMPORT $_SinkSlack 0 ; (Non-const ref)
.IMPORT $_SinkClaim 0 ; (Non-const ref)
.IMPORT $_SinkMap 0 ; (Non-const ref)
.IMPORT $_memcpy 0 ; (Non-const ref)
.IMPORT $_SinkFlush 0 ; (Non-const ref)
;# end scan referenced symbols
_sppb_connected_state_handler:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_connected_state_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_connected_state_handler:
?LBB7:
	cmp	AH,#H'4102
	beq	?L61
	cmp	AH,#(H'0001+H'4102)
	bcc	?L66
	cmp	AH,#H'3800
	beq	?L62
	bra	(?L64)
?L66:
	cmp	AH,#H'6F05
	bne	?L64
	bsr	_sppb_connected_state_exit
	ld	AL,#H'0002
	bsr	_setSppState
	bsr	_sppb_scan_state_enter
	bra	(?L58)
?L61:
	bsr	_sppb_connected_state_exit
	ld	AL,#H'0004
	bsr	_setSppState
	bsr	_sppb_disconnecting_state_enter
	bra	(?L58)
?L62:
?LBB8:
	ld	AL,#H'0011
	bsr	$_ledsPlay
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L58
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(13)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L58
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(13)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_SinkSlack
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AL,@$XAP_AH
	bcs	?L58
?LBB9:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(13)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(H'0002,Y)
	bsr	$dofetch_AH
	bsr	$_SinkClaim
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_SinkMap
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,@(H'0001,Y)
	st	X,@H'fff8
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_memcpy
	ld	AL,@(H'0002,Y)
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_SinkFlush
?LBE9:
?LBE8:
	bra	(?L58)
?L64:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(14)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_unhandledSppState
?L58:
?LBE7:
?LBE_sppb_connected_state_handler:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
;# end scan referenced symbols
_sppb_disconnecting_state_enter:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_disconnecting_state_enter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_disconnecting_state_enter:
	bsr	$_update_indication
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(12)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_SppDisconnect
?LBE_sppb_disconnecting_state_enter:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_sppb_disconnecting_state_exit:
; leaf function with empty stack frame
?LBB_sppb_disconnecting_state_exit:
?LBE_sppb_disconnecting_state_exit:
	bra	0,X
;# begin scan referenced symbols
.IMPORT _sppb_disconnecting_state_exit 1 ; (Const ref)
;# end scan referenced symbols
_sppb_disconnecting_state_handler:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_disconnecting_state_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_disconnecting_state_handler:
	cmp	AH,#H'6F05
	bne	?L78
	bsr	_sppb_disconnecting_state_exit
	ld	AL,#H'0001
	bsr	_setSppState
	bsr	_sppb_ready_state_enter
	bra	(?L75)
?L78:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_sppb+(14)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_unhandledSppState
?L75:
?LBE_sppb_disconnecting_state_handler:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _cl_handler 0 ; (Non-const ref)
.IMPORT _sppb_initialising_state_handler 0 ; (Non-const ref)
.IMPORT _sppb_ready_state_handler 0 ; (Non-const ref)
.IMPORT _sppb_scan_state_handler 0 ; (Non-const ref)
.IMPORT _sppb_connected_state_handler 0 ; (Non-const ref)
.IMPORT _sppb_disconnecting_state_handler 0 ; (Non-const ref)
;# end scan referenced symbols
_sppb_handler:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_handler:
	st	AL,@H'fff9
	st	AH,@H'fff8
?LBB10:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_sppb+(14)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@H'fff8
	and	AL,#-H'0100
	cmp	AL,#H'7000
	bne	?L82
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_cl_handler
	bra	(?L81)
?L82:
	cmp	AH,#(H'0001+H'0004)
	bcc	?L81
	ld	X,@$XAP_AH
	add	X,#(?L90)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L90:
	.CODE
?JT90:
	.SEG	CONST
	dc	lwrd(?L84-?JT90)
	dc	lwrd(?L85-?JT90)
	dc	lwrd(?L86-?JT90)
	dc	lwrd(?L87-?JT90)
	dc	lwrd(?L88-?JT90)
	.CODE
?L84:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_sppb_initialising_state_handler
	bra	(?L81)
?L85:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_sppb_ready_state_handler
	bra	(?L81)
?L86:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_sppb_scan_state_handler
	bra	(?L81)
?L87:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_sppb_connected_state_handler
	bra	(?L81)
?L88:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_sppb_disconnecting_state_handler
?L81:
?LBE10:
?LBE_sppb_handler:
	leavel	#3
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
.IMPORT _sppDevInit 0 ; (Non-const ref)
.IMPORT $_sppDevHandlePinCodeRequest 0 ; (Non-const ref)
.IMPORT $_sppDevAuthoriseResponse 0 ; (Non-const ref)
.IMPORT $_sppDevSetTrustLevel 0 ; (Non-const ref)
.IMPORT $_ConnectionSmIoCapabilityResponse 0 ; (Non-const ref)
;# end scan referenced symbols
_cl_handler:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_cl_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_cl_handler:
	st	AL,@H'ffff
	ld	AL,@(H'0007,Y)
	st	AL,@H'fff8
	ld	AL,@H'ffff
?LBB11:
	add	AH,#-H'7000
	cmp	AH,#(H'0001+H'003A)
	bcc	?L92
	ld	X,@$XAP_AH
	add	X,#(?L109)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L109:
	.CODE
?JT109:
	.SEG	CONST
	dc	lwrd(?L94-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L103-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L101-?JT109)
	dc	lwrd(?L106-?JT109)
	dc	lwrd(?L107-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L102-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	dc	lwrd(?L92-?JT109)
	.CODE
?L94:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L92
	ld	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_sppDevInit
	bra	(?L92)
?L101:
	ld	AL,@H'fff8
	bsr	$_sppDevHandlePinCodeRequest
	bra	(?L92)
?L102:
	ld	AL,@H'fff8
	bsr	$_sppDevAuthoriseResponse
	bra	(?L92)
?L103:
	ld	AL,@H'fff8
	bsr	$_sppDevSetTrustLevel
	bra	(?L92)
?L106:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,#(_sppb+H'0005); movqi2b+1 peephole
	ld	AH,#H'0003
	bsr	$_ConnectionSmIoCapabilityResponse
	bra	(?L92)
?L107:
?LBB12:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(6)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(7)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(8)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?L92:
?LBE12:
?LBE11:
?LBE_cl_handler:
	leavel	#7
;# begin scan referenced symbols
.IMPORT _sppb_handler 0 ; (Non-const ref)
.IMPORT _sppb_initialising_state_enter 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppb_init:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppb_init ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppb_init:
	st	AL,@H'fff8
	ld	AH,#hwrd(_sppb_handler)
	ld	AL,#lwrd(_sppb_handler)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_sppb-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(_sppb+1-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@H'fff8
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_sppb+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_sppb+(12)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_sppb+(13)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_sppb+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_sppb+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_sppb+(14)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	_sppb_initialising_state_enter
?LBE_sppb_init:
	leavel	#2
	.SEG	VAR
_sppb:
	DS	15
	ENDMOD

;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 11 used[1] = 6 total = 17
;# Function pattern *movqi_fetch_y_relative used[0] = 9 used[1] = 2 total = 11
;# Function pattern *movhi_store_y_relative used[2] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 3 total = 3
;# Function pattern *movqi_fetch_symbol_ref_with_offset used[0] = 14 total = 14
;# Function pattern *movqi_store_symbol_ref_with_offset used[0] = 25 total = 25
;# Function pattern *movhi_store_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 58 total = 58
;# Function pattern *movqi2b used[0] = 1 used[1] = 3 total = 4
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern *addqi4-withytranslation used[1] = 3 total = 3
;# Function pattern *addqi0-framep used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 2 used[3] = 1 total = 3
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 24 total = 24
;# Function pattern *call1 used[0] = 55 total = 55
;# Function pattern *call_value1 used[0] = 15 total = 15
;# Single pattern tablejump used = 2
;# Function pattern addsi3+1 used[0] = 8 total = 8
;# Function pattern addhi3-1 used[0] = 2 total = 2
;# Function pattern subhi3+1 used[0] = 9 total = 9
;# Function pattern extendhfsf2+2 used[1] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 22 total = 22
	MODULE	ConnectionSmSetTrustLevel
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionSmSetTrustLevel:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmSetTrustLevel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmSetTrustLevel:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0024
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionSmSetTrustLevel:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 7 total = 7
;# Function pattern *movqi_fetch_general used[0] = 3 total = 3
;# Function pattern *movqi_store_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_fetch_y_relative used[0] = 8 total = 8
;# Function pattern *movqi_store_general used[0] = 4 total = 4
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 6 used[2] = 1 total = 7
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern addsi3+1 used[0] = 1 total = 1
;# Function pattern addsi3+2 used[0] = 1 total = 1
	MODULE	ConnectionWriteInquiryscanActivity
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionWriteInquiryscanActivity:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionWriteInquiryscanActivity ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionWriteInquiryscanActivity:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
?LBB3:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0028
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionWriteInquiryscanActivity:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_fetch_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_store_general used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *addqi2 used[3] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	dm_baseband_cod
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionWriteClassOfDevice:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionWriteClassOfDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionWriteClassOfDevice:
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	bsr	$dostore32_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0026
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionWriteClassOfDevice:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movhi used[3] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	dm_baseband_scan
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionWriteScanEnable:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionWriteScanEnable ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionWriteScanEnable:
	st	AL,@(H'0001,Y)
?LBB2:
?LBB3:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0029
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionWriteScanEnable:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	dm_security_authorise
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionSmAuthoriseResponse:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmAuthoriseResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmAuthoriseResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
?LBB3:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,@(H'0009,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'001B
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSmAuthoriseResponse:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_memmove 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionSmPinCodeResponse:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmPinCodeResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmPinCodeResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
?LBB5:
	ld	AL,#H'0015
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	cmp	AH,#H'0000
	beq	?L3
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
?L3:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'001C
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionSmPinCodeResponse:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionSmIoCapabilityResponse:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmIoCapabilityResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmIoCapabilityResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
?LBB7:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0009,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	beq	?L6
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@(H'0004,Y)
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@(H'0005,Y)
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'000B,Y)
	bsr	$_memmove
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'000C,Y)
	bsr	$_memmove
	bra	(?L7)
?L6:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dostore_AL
?L7:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'001D
	bsr	$_MessageSend
?LBE7:
?LBE6:
?LBE_ConnectionSmIoCapabilityResponse:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionSmUserConfirmationResponse:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmUserConfirmationResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmUserConfirmationResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'001E
	bsr	$_MessageSend
?LBE8:
?LBE_ConnectionSmUserConfirmationResponse:
	leavel	#6
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionSmUserPasskeyResponse:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmUserPasskeyResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmUserPasskeyResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB9:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	bsr	$dostore32_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'001F
	bsr	$_MessageSend
?LBE9:
?LBE_ConnectionSmUserPasskeyResponse:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_connectionAuthDeleteDevice 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionSmDeleteAuthDevice:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmDeleteAuthDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmDeleteAuthDevice:
	bsr	$_connectionAuthDeleteDevice
?LBE_ConnectionSmDeleteAuthDevice:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionAuthDeleteAllDevice 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionSmDeleteAllAuthDevices:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmDeleteAllAuthDevices ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmDeleteAllAuthDevices:
	bsr	$_connectionAuthDeleteAllDevice
?LBE_ConnectionSmDeleteAllAuthDevices:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 45 total = 45
;# Function pattern *movqi_fetch_general used[0] = 15 total = 15
;# Function pattern *movqi_store_y_relative used[0] = 23 used[1] = 2 total = 25
;# Function pattern *movqi_fetch_y_relative used[0] = 61 total = 61
;# Function pattern *movhi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movhi_store_general used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 28 total = 28
;# Function pattern *movqi2 used[0] = 14 total = 14
;# Function pattern *addqi2 used[0] = 43 used[2] = 5 total = 48
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 17 total = 17
;# Function pattern addsi3+1 used[0] = 7 total = 7
;# Function pattern addsi3+2 used[0] = 7 total = 7
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
	MODULE	dm_security_sdp
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_ConnectionSmRegisterIncomingService 0 ; (Non-const ref)
.IMPORT $_ConnectionSmUnRegisterIncomingService 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionSmSetSdpSecurityIn:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmSetSdpSecurityIn ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmSetSdpSecurityIn:
	cmp	AL,#H'0000
	beq	?L2
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	bsr	$_ConnectionSmRegisterIncomingService
	bra	(?L1)
?L2:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0001
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$_ConnectionSmUnRegisterIncomingService
?L1:
?LBE_ConnectionSmSetSdpSecurityIn:
	leavel	#5
	ENDMOD

;# Function pattern *movhi_store_y_relative used[2] = 2 total = 2
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern addhi3-1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	dm_security_service
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionSmRegisterIncomingService:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmRegisterIncomingService ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmRegisterIncomingService:
	st	AL,@(H'0001,Y)
?LBB2:
?LBB3:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	bsr	$dostore32_AH
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0015
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSmRegisterIncomingService:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionSmUnRegisterIncomingService:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmUnRegisterIncomingService ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmUnRegisterIncomingService:
	st	AL,@(H'0001,Y)
?LBB4:
?LBB5:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	bsr	$dostore32_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0017
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionSmUnRegisterIncomingService:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 5 total = 5
;# Function pattern *movqi_store_y_relative used[0] = 6 total = 6
;# Function pattern *movqi_fetch_y_relative used[0] = 8 total = 8
;# Function pattern *movhi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movhi_store_general used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 5 total = 5
;# Function pattern *movqi2 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 3 used[3] = 2 total = 5
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 4 total = 4
	MODULE	init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	CONST
$_defaultMsgFilter:
	dc	H'0001
;# begin scan referenced symbols
.IMPORT _theCm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_initLocks:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_initLocks ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_initLocks:
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(10)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(11)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(12)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(13)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(18)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(19)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(20)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(22)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(23)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(28)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(29)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(30)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE_initLocks:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetCmTask:
; leaf function with empty stack frame
?LBB_connectionGetCmTask:
	ld	AL,#(_theCm)
?LBE_connectionGetCmTask:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetAppTask:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetAppTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetAppTask:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE_connectionGetAppTask:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetMsgFilter:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetMsgFilter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetMsgFilter:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE_connectionGetMsgFilter:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_defaultMsgFilter 1 ; (Const ref)
.IMPORT $_ConnectionInitEx 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionInit:
	ld	AH,#($_defaultMsgFilter)
	bsr	$_ConnectionInitEx
?LBE_ConnectionInit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_VmUseExtendedBluestackPrimitives 0 ; (Non-const ref)
.IMPORT $_connectionBluestackHandler 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageBlueStackTask 0 ; (Non-const ref)
.IMPORT _initLocks 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionInitEx:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionInitEx ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionInitEx:
	st	AL,@(H'0001,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_theCm+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_VmUseExtendedBluestackPrimitives
	ld	AH,#hwrd($_connectionBluestackHandler)
	ld	AL,#lwrd($_connectionBluestackHandler)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_theCm-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(_theCm+1-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_connectionGetCmTask
	bsr	$_MessageBlueStackTask
	bsr	_initLocks
	ld	AL,@(H'0001,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0001
	bsr	$_MessageSend
?LBE_ConnectionInitEx:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSetSecurityMode 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSecModeConfig 0 ; (Non-const ref)
.IMPORT $_connectionDmInfoInit 0 ; (Non-const ref)
.IMPORT $_connectionSendInitCfm 0 ; (Non-const ref)
.IMPORT $_connectionDmInit 0 ; (Non-const ref)
.IMPORT $_connectionRfcInit 0 ; (Non-const ref)
.IMPORT $_connectionL2capInit 0 ; (Non-const ref)
.IMPORT $_connectionUdpInit 0 ; (Non-const ref)
.IMPORT $_connectionTcpInit 0 ; (Non-const ref)
.IMPORT $_connectionSdpInit 0 ; (Non-const ref)
.IMPORT $_connectionVersionInit 0 ; (Non-const ref)
.IMPORT $_connectionSmInit 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleInternalInit:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInternalInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInternalInit:
	st	AL,@(H'0003,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@(H'0003,Y)
	or	AH,@$XAP_AL
	and	AH,#H'00FF
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	and	AL,#H'00FF
	cmp	AL,#H'00FF
	bne	?L9
	ld	AL,#H'02FF
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L10)
?L9:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@$XAP_AH
	and	AL,#-H'0100
	cmp	AL,#H'0100
	beq	?L10
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	or	AL,#H'0100
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'2710
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#(_theCm)
	ld	AH,#H'0000
	bsr	$_MessageSendLater
?L10:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	and	AL,#H'00FF
	cmp	AL,#H'00FF
	bne	?L12
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(9)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	and	AL,#-H'00F1
	or	AL,#H'0080
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(9)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(21)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0002
	bne	?L13
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0004
	bsr	$_ConnectionSmSetSecurityMode
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0002
	bsr	$_ConnectionSmSecModeConfig
	bra	(?L14)
?L13:
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0002
	bsr	$_ConnectionSmSetSecurityMode
?L14:
	bsr	$_connectionDmInfoInit
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(21)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'0000
	bsr	$_connectionSendInitCfm
	bra	(?L8)
?L12:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0008
	beq	?L21
	cmp	AL,#(H'0001+H'0008)
	bcc	?L28
	cmp	AL,#H'0001
	beq	?L18
	cmp	AL,#H'0001
	bcs	?L17
	cmp	AL,#H'0002
	beq	?L19
	cmp	AL,#H'0004
	beq	?L20
	bra	(?L8)
?L28:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0020
	beq	?L23
	cmp	AL,#(H'0001+H'0020)
	bcc	?L29
	cmp	AL,#H'0010
	beq	?L22
	bra	(?L8)
?L29:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0040
	beq	?L24
	bra	(?L8)
?L17:
	bsr	$_connectionDmInit
	bra	(?L8)
?L18:
	bsr	$_connectionRfcInit
	bra	(?L8)
?L19:
	bsr	$_connectionL2capInit
	bra	(?L8)
?L20:
	bsr	$_connectionUdpInit
	bra	(?L8)
?L21:
	bsr	$_connectionTcpInit
	bra	(?L8)
?L22:
	ld	AL,#(_theCm+H'0016)
	bsr	$_connectionSdpInit
	bra	(?L8)
?L23:
	bsr	$_connectionVersionInit
	bra	(?L8)
?L24:
	ld	AL,#(_theCm+H'0013)
	bsr	$_connectionSmInit
	asl	#H'000C
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_theCm+(8)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	and	AH,#H'0FFF
	or	AH,@$XAP_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_theCm+(8)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?L8:
?LBE_connectionHandleInternalInit:
	leavel	#6
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionSendInternalInitCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSendInternalInitCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSendInternalInitCfm:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0002
	bsr	$_MessageSend
?LBE2:
?LBE_connectionSendInternalInitCfm:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionSendInitCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSendInitCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSendInitCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7000
	bsr	$_MessageSend
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L43
	bsr	$_connectionGetCmTask
	ld	AH,#H'0000
	bsr	$_MessageCancelFirst
?L43:
?LBE3:
?LBE_connectionSendInitCfm:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	.SEG	VAR
_theCm:
	DS	32
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 2 total = 2
;# Function pattern *movqi_store_y_relative used[0] = 9 used[1] = 6 total = 15
;# Function pattern *movqi_fetch_y_relative used[0] = 10 total = 10
;# Function pattern *movhi_store_y_relative used[2] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 3 total = 3
;# Function pattern *movqi_fetch_symbol_ref_with_offset used[0] = 10 total = 10
;# Function pattern *movqi_store_symbol_ref_with_offset used[0] = 20 total = 20
;# Function pattern *movhi_store_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 21 total = 21
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern *addqi2 used[3] = 1 total = 1
;# Function pattern *andqi3 used[0] = 8 total = 8
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 13 total = 13
;# Function pattern *call1 used[0] = 19 total = 19
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern extendhfsf2+2 used[1] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 13 total = 13
	MODULE	bluestack_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_connectionHandleSyncRegisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncUnregisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncConnectCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncConnectCompleteInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncConnectInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncDisconnectInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncDisconnectCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncRenegotiateInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncRenegotiateCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmAddDeviceCfmReady 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmLinkKeyReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmPinReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmLinkKeyInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmAuthoriseInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleEncryptCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleEncryptionChange 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLocalOobDataCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmIoCapResInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmIoCapReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmSimplePairingCompleteInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmUserConfirmationReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmUserPasskeyReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmSspLinkKeyReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmUserPasskeyNotificationInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmKeypressNotificationInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleInquiryResult 0 ; (Non-const ref)
.IMPORT $_connectionHandleInquiryComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleRemoteNameComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRemoteSupportedFeaturesCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRemoteVersionCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadClkOffsetComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadInquiryModeComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteInquiryModeComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleInquiryResultWithRssi 0 ; (Non-const ref)
.IMPORT $_connectionHandleSniffSubRatingInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadEirDataComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleExtendedInquiryResult 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadInquiryTxComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleLinkSupervisionTimeoutInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleEncryptionKeyRefreshInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleQosSetupCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleRoleDiscoveryComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmSwitchRoleComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleLocalNameComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadClassOfDeviceComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteIacLapComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadBdAddrComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLinkQualityComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRssiComplete 0 ; (Non-const ref)
.IMPORT $_connectionLinkPolicyHandleWritePowerStatesCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmHciModeChangeEvent 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmAclOpenCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmAclOpenInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmEnAclOpenInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmEnAclClosedInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmAclClosedInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmBondingCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetBtVersionCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLocalVersionCfm 0 ; (Non-const ref)
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmAddDeviceCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmAccessInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleConfigureSecurityCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleDutSecurityDisabled 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetSecurityModeCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleDutCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_connectionBluestackHandlerDm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerDm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerDm:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB2:
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	cmp	AH,#H'0002
	bne	?L2
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#-H'7C06
	cmp	AL,#(H'0001+H'0021)
	bcc	?L3
	add	AL,#(?L13)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L13:
	.CODE
?JT13:
	.SEG	CONST
	dc	lwrd(?L8-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L4-?JT13)
	dc	lwrd(?L5-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L6-?JT13)
	dc	lwrd(?L7-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L9-?JT13)
	dc	lwrd(?L10-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L11-?JT13)
	dc	lwrd(?L12-?JT13)
	.CODE
?L4:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncRegisterCfm
	bra	(?L1)
?L5:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncUnregisterCfm
	bra	(?L1)
?L6:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSyncConnectCfm
	bra	(?L1)
?L7:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSyncConnectCompleteInd
	bra	(?L1)
?L8:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncConnectInd
	bra	(?L1)
?L9:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncDisconnectInd
	bra	(?L1)
?L10:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncDisconnectCfm
	bra	(?L1)
?L11:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncRenegotiateInd
	bra	(?L1)
?L12:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncRenegotiateCfm
	bra	(?L1)
?L3:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#-H'2C14
	cmp	AL,#(H'0001+H'0014)
	bcc	?L15
	add	AL,#(?L34)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L34:
	.CODE
?JT34:
	.SEG	CONST
	dc	lwrd(?L17-?JT34)
	dc	lwrd(?L15-?JT34)
	dc	lwrd(?L18-?JT34)
	dc	lwrd(?L19-?JT34)
	dc	lwrd(?L20-?JT34)
	dc	lwrd(?L21-?JT34)
	dc	lwrd(?L1-?JT34)
	dc	lwrd(?L23-?JT34)
	dc	lwrd(?L24-?JT34)
	dc	lwrd(?L15-?JT34)
	dc	lwrd(?L15-?JT34)
	dc	lwrd(?L25-?JT34)
	dc	lwrd(?L17-?JT34)
	dc	lwrd(?L26-?JT34)
	dc	lwrd(?L27-?JT34)
	dc	lwrd(?L28-?JT34)
	dc	lwrd(?L29-?JT34)
	dc	lwrd(?L30-?JT34)
	dc	lwrd(?L31-?JT34)
	dc	lwrd(?L32-?JT34)
	dc	lwrd(?L33-?JT34)
	.CODE
?L17:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmAddDeviceCfmReady
	bra	(?L1)
?L18:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSmLinkKeyReqInd
	bra	(?L1)
?L19:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmPinReqInd
	bra	(?L1)
?L20:
	ld	AH,#H'0013
	add	AH,@H'fff8
	ld	AL,#H'0008
	add	AL,@H'fff8
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmLinkKeyInd
	bra	(?L1)
?L21:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmAuthoriseInd
	bra	(?L1)
?L23:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleEncryptCfm
	bra	(?L1)
?L24:
	ld	AL,@H'fff9
	bsr	$_connectionHandleEncryptionChange
	bra	(?L1)
?L25:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadLocalOobDataCfm
	bra	(?L1)
?L26:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmIoCapResInd
	bra	(?L1)
?L27:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmIoCapReqInd
	bra	(?L1)
?L28:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmSimplePairingCompleteInd
	bra	(?L1)
?L29:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmUserConfirmationReqInd
	bra	(?L1)
?L30:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmUserPasskeyReqInd
	bra	(?L1)
?L31:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmSspLinkKeyReqInd
	bra	(?L1)
?L32:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmUserPasskeyNotificationInd
	bra	(?L1)
?L33:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmKeypressNotificationInd
	bra	(?L1)
?L15:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#-H'0421
	cmp	AL,#(H'0001+H'000B)
	bcc	?L36
	add	AL,#(?L44)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L44:
	.CODE
?JT44:
	.SEG	CONST
	dc	lwrd(?L39-?JT44)
	dc	lwrd(?L36-?JT44)
	dc	lwrd(?L36-?JT44)
	dc	lwrd(?L38-?JT44)
	dc	lwrd(?L39-?JT44)
	dc	lwrd(?L36-?JT44)
	dc	lwrd(?L36-?JT44)
	dc	lwrd(?L36-?JT44)
	dc	lwrd(?L40-?JT44)
	dc	lwrd(?L41-?JT44)
	dc	lwrd(?L42-?JT44)
	dc	lwrd(?L43-?JT44)
	.CODE
?L38:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleInquiryResult
	bra	(?L1)
?L39:
	ld	AL,#H'0005
	add	AL,@H'fff8
	bsr	$_connectionHandleInquiryComplete
	bra	(?L1)
?L40:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleRemoteNameComplete
	bra	(?L1)
?L41:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadRemoteSupportedFeaturesCfm
	bra	(?L1)
?L42:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadRemoteVersionCfm
	bra	(?L1)
?L43:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadClkOffsetComplete
	bra	(?L1)
?L36:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#-H'780A
	cmp	AL,#(H'0001+H'0040)
	bcc	?L46
	add	AL,#(?L56)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L56:
	.CODE
?JT56:
	.SEG	CONST
	dc	lwrd(?L47-?JT56)
	dc	lwrd(?L48-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L49-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L50-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L51-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L52-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L53-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L54-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L55-?JT56)
	.CODE
?L47:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadInquiryModeComplete
	bra	(?L1)
?L48:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleWriteInquiryModeComplete
	bra	(?L1)
?L49:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleInquiryResultWithRssi
	bra	(?L1)
?L50:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSniffSubRatingInd
	bra	(?L1)
?L51:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadEirDataComplete
	bra	(?L1)
?L52:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleExtendedInquiryResult
	bra	(?L1)
?L53:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadInquiryTxComplete
	bra	(?L1)
?L54:
	ld	AL,@H'fff9
	bsr	$_connectionHandleLinkSupervisionTimeoutInd
	bra	(?L1)
?L55:
	ld	AL,@H'fff9
	bsr	$_connectionHandleEncryptionKeyRefreshInd
	bra	(?L1)
?L46:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0C58
	beq	?L63
	cmp	AL,#(H'0001+H'0C58)
	bcc	?L71
	cmp	AL,#H'0812
	beq	?L60
	cmp	AL,#(H'0001+H'0812)
	bcc	?L72
	cmp	AL,#H'0810
	beq	?L59
	bra	(?L2)
?L72:
	cmp	AL,#H'0813
	beq	?L61
	cmp	AL,#H'0C4B
	beq	?L62
	bra	(?L2)
?L71:
	cmp	AL,#H'1409
	beq	?L66
	cmp	AL,#(H'0001+H'1409)
	bcc	?L73
	cmp	AL,#H'0C69
	beq	?L64
	cmp	AL,#H'100E
	beq	?L65
	bra	(?L2)
?L73:
	cmp	AL,#H'140A
	beq	?L67
	cmp	AL,#H'7901
	beq	?L68
	bra	(?L2)
?L59:
	ld	AL,@H'fff9
	bsr	$_connectionHandleQosSetupCfm
	bra	(?L1)
?L60:
	ld	AL,#H'001F
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleRoleDiscoveryComplete
	bra	(?L1)
?L61:
	ld	AH,#H'001F
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleDmSwitchRoleComplete
	bra	(?L1)
?L62:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleLocalNameComplete
	bra	(?L1)
?L63:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadClassOfDeviceComplete
	bra	(?L1)
?L64:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleWriteIacLapComplete
	bra	(?L1)
?L65:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadBdAddrComplete
	bra	(?L1)
?L66:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadLinkQualityComplete
	bra	(?L1)
?L67:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadRssiComplete
	bra	(?L1)
?L68:
	ld	AL,@H'fff9
	bsr	$_connectionLinkPolicyHandleWritePowerStatesCfm
	bra	(?L1)
?L2:
	cmp	AH,#H'0000
	beq	?L1
	cmp	AH,#H'0001
	beq	?L75
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'280E
	beq	?L82
	cmp	AL,#(H'0001+H'280E)
	bcc	?L86
	cmp	AL,#H'280C
	beq	?L78
	cmp	AL,#(H'0001+H'280C)
	bcc	?L79
	cmp	AL,#H'080F
	beq	?L77
	bra	(?L75)
?L86:
	cmp	AL,#H'3004
	beq	?L80
	cmp	AL,#(H'0001+H'3004)
	bcc	?L87
	cmp	AL,#H'2C29
	beq	?L83
	bra	(?L75)
?L87:
	cmp	AL,#H'3005
	beq	?L81
	bra	(?L75)
?L77:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleDmHciModeChangeEvent
	bra	(?L1)
?L78:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleDmAclOpenCfm
	bra	(?L1)
?L79:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleDmAclOpenInd
	bra	(?L1)
?L80:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleDmEnAclOpenInd
	bra	(?L1)
?L81:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleDmEnAclClosedInd
	bra	(?L1)
?L82:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleDmAclClosedInd
	bra	(?L1)
?L83:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmBondingCfm
	bra	(?L1)
?L75:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'100C
	beq	?L1
	cmp	AL,#(H'0001+H'100C)
	bcc	?L129
	cmp	AL,#(H'0001+H'0C4A)
	bcc	?L130
	cmp	AL,#H'0C49
	bcc	?L1
	cmp	AL,#H'0426
	beq	?L1
	cmp	AL,#(H'0001+H'0426)
	bcc	?L1
	cmp	AL,#H'0001
	beq	?L91
	cmp	AL,#H'0003
	beq	?L89
	bra	(?L1)
?L130:
	cmp	AL,#H'0C59
	beq	?L1
	cmp	AL,#H'0C59
	bcz	?L1
	cmp	AL,#H'0C66
	beq	?L1
	cmp	AL,#H'0C66
	bcz	?L1
	cmp	AL,#H'100B
	beq	?L90
	bra	(?L1)
?L129:
	cmp	AL,#H'2C20
	beq	?L94
	cmp	AL,#(H'0001+H'2C20)
	bcc	?L135
	cmp	AL,#H'2C13
	beq	?L100
	cmp	AL,#(H'0001+H'2C13)
	bcc	?L136
	cmp	AL,#H'1808
	beq	?L103
	bra	(?L1)
?L136:
	cmp	AL,#H'2C15
	beq	?L1
	cmp	AL,#H'2C15
	bcs	?L94
	cmp	AL,#H'2C1E
	beq	?L98
	bra	(?L1)
?L135:
	cmp	AL,#H'7802
	beq	?L1
	cmp	AL,#(H'0001+H'7802)
	bcc	?L1
	cmp	AL,#H'3001
	beq	?L1
	cmp	AL,#(H'0001+H'3001)
	bcc	?L1
	cmp	AL,#H'2C2B
	beq	?L96
	bra	(?L1)
?L89:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleSetBtVersionCfm
	bra	(?L1)
?L90:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadLocalVersionCfm
	bra	(?L1)
?L91:
	cmp	AH,#H'0001
	bne	?L1
	ld	AL,#H'0001
	bsr	$_connectionSendInternalInitCfm
	bra	(?L1)
?L94:
	cmp	AH,#H'0001
	bne	?L1
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmAddDeviceCfm
	bra	(?L1)
?L96:
	cmp	AH,#H'0003
	beq	?L1
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmAccessInd
	bra	(?L1)
?L98:
	cmp	AH,#H'0003
	beq	?L1
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleConfigureSecurityCfm
	bra	(?L1)
?L100:
	cmp	AH,#H'0003
	bne	?L101
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleDutSecurityDisabled
	bra	(?L1)
?L101:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleSetSecurityModeCfm
	bra	(?L1)
?L103:
	cmp	AH,#H'0003
	bne	?L1
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleDutCfm
?L1:
?LBE2:
?LBE_connectionBluestackHandlerDm:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_connectionHandleL2capRegisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConnectInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConnectCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConfigInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConfigCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capDisconnectInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capDisconnectCfm 0 ; (Non-const ref)
;# end scan referenced symbols
_connectionBluestackHandlerL2cap:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerL2cap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerL2cap:
	st	AL,@H'fff8
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#-H'0100
	cmp	AL,#H'0200
	bne	?L184
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0012)
	bcc	?L184
	add	AL,#(?L195)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L195:
	.CODE
?JT195:
	.SEG	CONST
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L187-?JT195)
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L188-?JT195)
	dc	lwrd(?L189-?JT195)
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L190-?JT195)
	dc	lwrd(?L191-?JT195)
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L184-?JT195)
	dc	lwrd(?L192-?JT195)
	dc	lwrd(?L193-?JT195)
	dc	lwrd(?L184-?JT195)
	.CODE
?L187:
	ld	AL,#H'001E
	add	AL,@H'fff8
	bsr	$_connectionHandleL2capRegisterCfm
	bra	(?L184)
?L188:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capConnectInd
	bra	(?L184)
?L189:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capConnectCfm
	bra	(?L184)
?L190:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capConfigInd
	bra	(?L184)
?L191:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capConfigCfm
	bra	(?L184)
?L192:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capDisconnectInd
	bra	(?L184)
?L193:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capDisconnectCfm
?L184:
?LBE_connectionBluestackHandlerL2cap:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionHandleRfcommRegisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommStartCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommStartInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommStartCmpInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommParnegInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommParnegCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommEstablishInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommEstablishCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommControlInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommReleaseInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommPortNegInd 0 ; (Non-const ref)
;# end scan referenced symbols
_connectionBluestackHandlerRfcomm:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerRfcomm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerRfcomm:
	st	AL,@H'fff8
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#-H'0100
	cmp	AL,#H'0200
	bne	?L199
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0004
	cmp	AL,#(H'0001+H'002B)
	bcc	?L198
	add	AL,#(?L213)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L213:
	.CODE
?JT213:
	.SEG	CONST
	dc	lwrd(?L201-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L203-?JT213)
	dc	lwrd(?L202-?JT213)
	dc	lwrd(?L204-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L208-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L209-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L206-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L211-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L210-?JT213)
	dc	lwrd(?L205-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L198-?JT213)
	dc	lwrd(?L207-?JT213)
	.CODE
?L201:
	ld	AL,#H'001C
	add	AL,@H'fff8
	bsr	$_connectionHandleRfcommRegisterCfm
	bra	(?L198)
?L202:
	ld	AL,#H'001C
	add	AL,@H'fff8
	bsr	$_connectionHandleRfcommStartCfm
	bra	(?L198)
?L203:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommStartInd
	bra	(?L198)
?L204:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommStartCmpInd
	bra	(?L198)
?L205:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommParnegInd
	bra	(?L198)
?L206:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommParnegCfm
	bra	(?L198)
?L207:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommEstablishInd
	bra	(?L198)
?L208:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommEstablishCfm
	bra	(?L198)
?L209:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommControlInd
	bra	(?L198)
?L210:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommReleaseInd
	bra	(?L198)
?L211:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommPortNegInd
	bra	(?L198)
?L199:
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#-H'0100
	cmp	AL,#H'0100
	bne	?L198
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L198
	ld	AL,#H'0002
	bsr	$_connectionSendInternalInitCfm
?L198:
?LBE_connectionBluestackHandlerRfcomm:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionHandleSdpRegisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpUnregisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpOpenSearchCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpCloseSearchInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpServiceSearchCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpAttributeSearchCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpServiceSearchAttributeCfm 0 ; (Non-const ref)
;# end scan referenced symbols
_connectionBluestackHandlerSdp:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerSdp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerSdp:
	st	AL,@H'fff8
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#-H'0100
	cmp	AL,#H'0200
	bne	?L221
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0009
	cmp	AL,#(H'0001+H'000C)
	bcc	?L221
	add	AL,#(?L231)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L231:
	.CODE
?JT231:
	.SEG	CONST
	dc	lwrd(?L226-?JT231)
	dc	lwrd(?L221-?JT231)
	dc	lwrd(?L221-?JT231)
	dc	lwrd(?L227-?JT231)
	dc	lwrd(?L221-?JT231)
	dc	lwrd(?L221-?JT231)
	dc	lwrd(?L224-?JT231)
	dc	lwrd(?L221-?JT231)
	dc	lwrd(?L225-?JT231)
	dc	lwrd(?L221-?JT231)
	dc	lwrd(?L230-?JT231)
	dc	lwrd(?L228-?JT231)
	dc	lwrd(?L229-?JT231)
	.CODE
?L224:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpRegisterCfm
	bra	(?L221)
?L225:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpUnregisterCfm
	bra	(?L221)
?L226:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpOpenSearchCfm
	bra	(?L221)
?L227:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpCloseSearchInd
	bra	(?L221)
?L228:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpServiceSearchCfm
	bra	(?L221)
?L229:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpAttributeSearchCfm
	bra	(?L221)
?L230:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpServiceSearchAttributeCfm
?L221:
?LBE_connectionBluestackHandlerSdp:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionHandleInternalInit 0 ; (Non-const ref)
;# end scan referenced symbols
_connectionBluestackHandlerUninitialised:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerUninitialised ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerUninitialised:
	cmp	AH,#H'0001
	bne	?L234
	ld	AL,#H'0000
	bsr	$_connectionHandleInternalInit
?L234:
?LBE_connectionBluestackHandlerUninitialised:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
.IMPORT $_connectionSendInitCfm 0 ; (Non-const ref)
.IMPORT $_handleSetSecurityModeReq 0 ; (Non-const ref)
.IMPORT $_handleSetSspSecurityLevelReq 0 ; (Non-const ref)
.IMPORT $_handleSecModeConfigReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLocalVersionRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetBtVersionReq 0 ; (Non-const ref)
;# end scan referenced symbols
_connectionBluestackHandlerInitialising:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerInitialising ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerInitialising:
	st	AL,@(H'0001,Y)
	cmp	AH,#(H'0001+H'0037)
	bcc	?L238
	ld	X,@$XAP_AH
	add	X,#(?L248)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L248:
	.CODE
?JT248:
	.SEG	CONST
	dc	lwrd(?L241-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L240-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L242-?JT248)
	dc	lwrd(?L243-?JT248)
	dc	lwrd(?L244-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L246-?JT248)
	dc	lwrd(?L238-?JT248)
	dc	lwrd(?L245-?JT248)
	.CODE
?L240:
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionHandleInternalInit
	bra	(?L238)
?L241:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0002
	bsr	$_MessageCancelFirst
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'00FF
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0001
	bsr	$_connectionSendInitCfm
	bra	(?L238)
?L242:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0008
	ld	AH,@(H'0004,Y)
	bsr	$_handleSetSecurityModeReq
	bra	(?L238)
?L243:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0008
	ld	AH,@(H'0001,Y)
	add	AH,#H'0013
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	bsr	$_handleSetSspSecurityLevelReq
	bra	(?L238)
?L244:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0008
	ld	AH,@(H'0001,Y)
	add	AH,#H'0013
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	bsr	$_handleSecModeConfigReq
	bra	(?L238)
?L245:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0013
	ld	AH,@(H'0004,Y)
	bsr	$_connectionHandleReadLocalVersionRequest
	bra	(?L238)
?L246:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0013
	ld	AH,@(H'0004,Y)
	bsr	$_connectionHandleSetBtVersionReq
?L238:
?LBE_connectionBluestackHandlerInitialising:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_connectionHandleWriteScanEnableRequest 0 ; (Non-const ref)
.IMPORT $_connectionSendDutCfmToClient 0 ; (Non-const ref)
;# end scan referenced symbols
_connectionBluestackHandlerTestMode:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerTestMode ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerTestMode:
	ld	X,@$XAP_AL
	cmp	AH,#H'0029
	beq	?L254
	cmp	AH,#(H'0001+H'0029)
	bcc	?L260
	cmp	AH,#H'0013
	beq	?L252
	cmp	AH,#(H'0001+H'0013)
	bcc	?L261
	cmp	AH,#H'0012
	beq	?L251
	bra	(?L249)
?L261:
	cmp	AH,#H'0014
	beq	?L253
	bra	(?L249)
?L260:
	cmp	AH,#H'0037
	beq	?L255
	cmp	AH,#(H'0001+H'0037)
	bcc	?L262
	cmp	AH,#H'0035
	beq	?L256
	bra	(?L249)
?L262:
	cmp	AH,#H'005E
	beq	?L257
	bra	(?L249)
?L251:
	add	AL,#H'0008
	ld	AH,@(H'0003,Y)
	bsr	$_handleSetSecurityModeReq
	bra	(?L249)
?L252:
	add	AL,#H'0008
	ld	AH,#H'0013
	add	AH,@$XAP_UXL
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_handleSetSspSecurityLevelReq
	bra	(?L249)
?L253:
	add	AL,#H'0008
	ld	AH,#H'0013
	add	AH,@$XAP_UXL
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_handleSecModeConfigReq
	bra	(?L249)
?L254:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteScanEnableRequest
	bra	(?L249)
?L255:
	add	AL,#H'0013
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadLocalVersionRequest
	bra	(?L249)
?L256:
	add	AL,#H'0013
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSetBtVersionReq
	bra	(?L249)
?L257:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,#H'0001
	bsr	$_connectionSendDutCfmToClient
?L249:
?LBE_connectionBluestackHandlerTestMode:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_connectionHandleReadLocalOobDataReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleAuthenticationReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleCancelAuthenticationReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleAuthenticationTimeout 0 ; (Non-const ref)
.IMPORT $_handleRegisterReq 0 ; (Non-const ref)
.IMPORT $_handleUnRegisterReq 0 ; (Non-const ref)
.IMPORT $_handleRegisterOutgoingReq 0 ; (Non-const ref)
.IMPORT $_handleUnRegisterOutgoingReq 0 ; (Non-const ref)
.IMPORT $_handleEncryptReq 0 ; (Non-const ref)
.IMPORT $_handleEncryptionKeyRefreshReq 0 ; (Non-const ref)
.IMPORT $_handlePinRequestRes 0 ; (Non-const ref)
.IMPORT $_handleIoCapabilityRequestRes 0 ; (Non-const ref)
.IMPORT $_handleUserConfirmationRequestRes 0 ; (Non-const ref)
.IMPORT $_handleUserPasskeyRequestRes 0 ; (Non-const ref)
.IMPORT $_handleSendKeypressNotificationReq 0 ; (Non-const ref)
.IMPORT $_handleSetTrustLevelReq 0 ; (Non-const ref)
.IMPORT $_handleAuthoriseRes 0 ; (Non-const ref)
.IMPORT $_handleAddAuthDeviceReq 0 ; (Non-const ref)
.IMPORT $_handleGetAuthDeviceReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleEnterDutModeReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleInquiryStart 0 ; (Non-const ref)
.IMPORT $_connectionHandleInquiryCancel 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRemoteName 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLocalName 0 ; (Non-const ref)
.IMPORT $_connectionHandleChangeLocalName 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteInquiryTx 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadInquiryTx 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteEirDataRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadEirDataRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadClassOfDeviceRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWritePageScanActivityRequset 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteInquiryScanActivityRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteCodRequset 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteCachedPageModeRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteCachedClkOffsetRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleClearParamCacheRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteFlushTimeoutRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteIacLapRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteInquiryModeRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadInquiryModeRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadAddrRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLinkQualityRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRssiRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadclkOffsetRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRemoteSupportedFeaturesRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmEnAclDetachReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRemoteVersionRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmChangeLinkKeyReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpRegisterRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpUnregisterRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpServerConfigMtu 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpClientConfigMtu 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpOpenSearchRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpCloseSearchRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpServiceSearchRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpAttributeSearchRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpServiceSearchAttrRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpTerminatePrimitiveRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capRegisterReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capUnregisterReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConnectRes 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capDisconnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConnectTimeout 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommRegisterReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommConnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommConnectRes 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommDisconnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommControlReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommRegisterTimeout 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommConnectTimeout 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncRegisterReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncUnregisterReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncConnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncConnectRes 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncDisconnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncRenegotiateReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncRegisterTimeoutInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncUnregisterTimeoutInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleLinkPolicySetRoleReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleLinkPolicyGetRoleReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetLinkSupervisionTimeoutReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetLinkPolicyReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetSniffSubRatePolicyReq 0 ; (Non-const ref)
.IMPORT $_connectionSmHandleGetAttributeReq 0 ; (Non-const ref)
.IMPORT $_connectionSmHandleGetIndexedAttributeReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capInterlockDisconnectRsp 0 ; (Non-const ref)
;# end scan referenced symbols
_connectionBluestackHandlerReady:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerReady ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerReady:
	st	AL,@H'fff8
	add	AH,#-H'0003
	cmp	AH,#(H'0001+H'005D)
	bcc	?L270
	ld	X,@$XAP_AH
	add	X,#(?L366)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L366:
	.CODE
?JT366:
	.SEG	CONST
	dc	lwrd(?L298-?JT366)
	dc	lwrd(?L299-?JT366)
	dc	lwrd(?L300-?JT366)
	dc	lwrd(?L301-?JT366)
	dc	lwrd(?L303-?JT366)
	dc	lwrd(?L304-?JT366)
	dc	lwrd(?L316-?JT366)
	dc	lwrd(?L317-?JT366)
	dc	lwrd(?L305-?JT366)
	dc	lwrd(?L306-?JT366)
	dc	lwrd(?L323-?JT366)
	dc	lwrd(?L274-?JT366)
	dc	lwrd(?L275-?JT366)
	dc	lwrd(?L276-?JT366)
	dc	lwrd(?L277-?JT366)
	dc	lwrd(?L293-?JT366)
	dc	lwrd(?L273-?JT366)
	dc	lwrd(?L272-?JT366)
	dc	lwrd(?L278-?JT366)
	dc	lwrd(?L280-?JT366)
	dc	lwrd(?L279-?JT366)
	dc	lwrd(?L281-?JT366)
	dc	lwrd(?L282-?JT366)
	dc	lwrd(?L283-?JT366)
	dc	lwrd(?L290-?JT366)
	dc	lwrd(?L284-?JT366)
	dc	lwrd(?L285-?JT366)
	dc	lwrd(?L286-?JT366)
	dc	lwrd(?L287-?JT366)
	dc	lwrd(?L288-?JT366)
	dc	lwrd(?L270-?JT366)
	dc	lwrd(?L291-?JT366)
	dc	lwrd(?L292-?JT366)
	dc	lwrd(?L289-?JT366)
	dc	lwrd(?L307-?JT366)
	dc	lwrd(?L310-?JT366)
	dc	lwrd(?L308-?JT366)
	dc	lwrd(?L309-?JT366)
	dc	lwrd(?L297-?JT366)
	dc	lwrd(?L311-?JT366)
	dc	lwrd(?L312-?JT366)
	dc	lwrd(?L313-?JT366)
	dc	lwrd(?L314-?JT366)
	dc	lwrd(?L302-?JT366)
	dc	lwrd(?L315-?JT366)
	dc	lwrd(?L325-?JT366)
	dc	lwrd(?L318-?JT366)
	dc	lwrd(?L319-?JT366)
	dc	lwrd(?L320-?JT366)
	dc	lwrd(?L321-?JT366)
	dc	lwrd(?L295-?JT366)
	dc	lwrd(?L322-?JT366)
	dc	lwrd(?L296-?JT366)
	dc	lwrd(?L324-?JT366)
	dc	lwrd(?L326-?JT366)
	dc	lwrd(?L327-?JT366)
	dc	lwrd(?L328-?JT366)
	dc	lwrd(?L329-?JT366)
	dc	lwrd(?L330-?JT366)
	dc	lwrd(?L331-?JT366)
	dc	lwrd(?L332-?JT366)
	dc	lwrd(?L333-?JT366)
	dc	lwrd(?L334-?JT366)
	dc	lwrd(?L335-?JT366)
	dc	lwrd(?L336-?JT366)
	dc	lwrd(?L337-?JT366)
	dc	lwrd(?L338-?JT366)
	dc	lwrd(?L339-?JT366)
	dc	lwrd(?L340-?JT366)
	dc	lwrd(?L341-?JT366)
	dc	lwrd(?L364-?JT366)
	dc	lwrd(?L342-?JT366)
	dc	lwrd(?L343-?JT366)
	dc	lwrd(?L344-?JT366)
	dc	lwrd(?L345-?JT366)
	dc	lwrd(?L347-?JT366)
	dc	lwrd(?L348-?JT366)
	dc	lwrd(?L346-?JT366)
	dc	lwrd(?L349-?JT366)
	dc	lwrd(?L350-?JT366)
	dc	lwrd(?L351-?JT366)
	dc	lwrd(?L352-?JT366)
	dc	lwrd(?L353-?JT366)
	dc	lwrd(?L354-?JT366)
	dc	lwrd(?L355-?JT366)
	dc	lwrd(?L356-?JT366)
	dc	lwrd(?L357-?JT366)
	dc	lwrd(?L358-?JT366)
	dc	lwrd(?L359-?JT366)
	dc	lwrd(?L360-?JT366)
	dc	lwrd(?L361-?JT366)
	dc	lwrd(?L294-?JT366)
	dc	lwrd(?L362-?JT366)
	dc	lwrd(?L363-?JT366)
	.CODE
?L272:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,#H'0013
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_handleSecModeConfigReq
	bra	(?L270)
?L273:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,#H'0013
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_handleSetSspSecurityLevelReq
	bra	(?L270)
?L274:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,#H'0008
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleReadLocalOobDataReq
	bra	(?L270)
?L275:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleAuthenticationReq
	bra	(?L270)
?L276:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,#H'0008
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleCancelAuthenticationReq
	bra	(?L270)
?L277:
	ld	AL,#H'0008
	add	AL,@H'fff8
	bsr	$_connectionHandleAuthenticationTimeout
	bra	(?L270)
?L278:
	ld	AL,@(H'0003,Y)
	bsr	$_handleRegisterReq
	bra	(?L270)
?L279:
	ld	AL,@(H'0003,Y)
	bsr	$_handleUnRegisterReq
	bra	(?L270)
?L280:
	ld	AL,@(H'0003,Y)
	bsr	$_handleRegisterOutgoingReq
	bra	(?L270)
?L281:
	ld	AL,@(H'0003,Y)
	bsr	$_handleUnRegisterOutgoingReq
	bra	(?L270)
?L282:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleEncryptReq
	bra	(?L270)
?L283:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleEncryptionKeyRefreshReq
	bra	(?L270)
?L284:
	ld	AL,@(H'0003,Y)
	bsr	$_handlePinRequestRes
	bra	(?L270)
?L285:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleIoCapabilityRequestRes
	bra	(?L270)
?L286:
	ld	AL,@(H'0003,Y)
	bsr	$_handleUserConfirmationRequestRes
	bra	(?L270)
?L287:
	ld	AL,@(H'0003,Y)
	bsr	$_handleUserPasskeyRequestRes
	bra	(?L270)
?L288:
	ld	AL,@(H'0003,Y)
	bsr	$_handleSendKeypressNotificationReq
	bra	(?L270)
?L289:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleSetTrustLevelReq
	bra	(?L270)
?L290:
	ld	AL,@(H'0003,Y)
	bsr	$_handleAuthoriseRes
	bra	(?L270)
?L291:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,#H'0008
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_handleAddAuthDeviceReq
	bra	(?L270)
?L292:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleGetAuthDeviceReq
	bra	(?L270)
?L293:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_handleSetSecurityModeReq
	bra	(?L270)
?L294:
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#H'00FF
	or	AL,#H'0300
	bsr	$dostore_AL
	ld	AL,#H'0013
	add	AL,@H'fff8
	bsr	$_connectionHandleEnterDutModeReq
	bra	(?L270)
?L295:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSetBtVersionReq
	bra	(?L270)
?L296:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadLocalVersionRequest
	bra	(?L270)
?L297:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteScanEnableRequest
	bra	(?L270)
?L298:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleInquiryStart
	bra	(?L270)
?L299:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleInquiryCancel
	bra	(?L270)
?L300:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadRemoteName
	bra	(?L270)
?L301:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadLocalName
	bra	(?L270)
?L302:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleChangeLocalName
	bra	(?L270)
?L303:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,#H'0005
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleWriteInquiryTx
	bra	(?L270)
?L304:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,#H'0005
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleReadInquiryTx
	bra	(?L270)
?L305:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleWriteEirDataRequest
	bra	(?L270)
?L306:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,#H'0005
	add	AH,@H'fff8
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleReadEirDataRequest
	bra	(?L270)
?L307:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadClassOfDeviceRequest
	bra	(?L270)
?L308:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWritePageScanActivityRequset
	bra	(?L270)
?L309:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteInquiryScanActivityRequest
	bra	(?L270)
?L310:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteCodRequset
	bra	(?L270)
?L311:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteCachedPageModeRequest
	bra	(?L270)
?L312:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteCachedClkOffsetRequest
	bra	(?L270)
?L313:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleClearParamCacheRequest
	bra	(?L270)
?L314:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleWriteFlushTimeoutRequest
	bra	(?L270)
?L315:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleWriteIacLapRequest
	bra	(?L270)
?L316:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleWriteInquiryModeRequest
	bra	(?L270)
?L317:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadInquiryModeRequest
	bra	(?L270)
?L318:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadAddrRequest
	bra	(?L270)
?L319:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadLinkQualityRequest
	bra	(?L270)
?L320:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadRssiRequest
	bra	(?L270)
?L321:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadclkOffsetRequest
	bra	(?L270)
?L322:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadRemoteSupportedFeaturesRequest
	bra	(?L270)
?L323:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleDmEnAclDetachReq
	bra	(?L270)
?L324:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleReadRemoteVersionRequest
	bra	(?L270)
?L325:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSmChangeLinkKeyReq
	bra	(?L270)
?L326:
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpRegisterRequest
	bra	(?L270)
?L327:
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpUnregisterRequest
	bra	(?L270)
?L328:
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpServerConfigMtu
	bra	(?L270)
?L329:
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpClientConfigMtu
	bra	(?L270)
?L330:
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpOpenSearchRequest
	bra	(?L270)
?L331:
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpCloseSearchRequest
	bra	(?L270)
?L332:
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpServiceSearchRequest
	bra	(?L270)
?L333:
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpAttributeSearchRequest
	bra	(?L270)
?L334:
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpServiceSearchAttrRequest
	bra	(?L270)
?L335:
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSdpTerminatePrimitiveRequest
	bra	(?L270)
?L336:
	ld	AL,#H'001E
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleL2capRegisterReq
	bra	(?L270)
?L337:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capUnregisterReq
	bra	(?L270)
?L338:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capConnectReq
	bra	(?L270)
?L339:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capConnectRes
	bra	(?L270)
?L340:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capDisconnectReq
	bra	(?L270)
?L341:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capConnectTimeout
	bra	(?L270)
?L342:
	ld	AL,#H'001C
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleRfcommRegisterReq
	bra	(?L270)
?L343:
	ld	AL,#H'001C
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleRfcommConnectReq
	bra	(?L270)
?L344:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommConnectRes
	bra	(?L270)
?L345:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommDisconnectReq
	bra	(?L270)
?L346:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommControlReq
	bra	(?L270)
?L347:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleRfcommRegisterTimeout
	bra	(?L270)
?L348:
	ld	AL,#H'001C
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleRfcommConnectTimeout
	bra	(?L270)
?L349:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncRegisterReq
	bra	(?L270)
?L350:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncUnregisterReq
	bra	(?L270)
?L351:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncConnectReq
	bra	(?L270)
?L352:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncConnectRes
	bra	(?L270)
?L353:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncDisconnectReq
	bra	(?L270)
?L354:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncRenegotiateReq
	bra	(?L270)
?L355:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncRegisterTimeoutInd
	bra	(?L270)
?L356:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSyncUnregisterTimeoutInd
	bra	(?L270)
?L357:
	ld	AL,#H'001F
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleLinkPolicySetRoleReq
	bra	(?L270)
?L358:
	ld	AL,#H'001F
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleLinkPolicyGetRoleReq
	bra	(?L270)
?L359:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSetLinkSupervisionTimeoutReq
	bra	(?L270)
?L360:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleSetLinkPolicyReq
	bra	(?L270)
?L361:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	bsr	$_connectionHandleSetSniffSubRatePolicyReq
	bra	(?L270)
?L362:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	bsr	$_connectionSmHandleGetAttributeReq
	bra	(?L270)
?L363:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	bsr	$_connectionSmHandleGetIndexedAttributeReq
	bra	(?L270)
?L364:
	ld	AL,@(H'0003,Y)
	bsr	$_connectionHandleL2capInterlockDisconnectRsp
?L270:
?LBE_connectionBluestackHandlerReady:
	leavel	#3
;# begin scan referenced symbols
.IMPORT _connectionBluestackHandlerDm 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerRfcomm 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerL2cap 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerSdp 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerReady 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerUninitialised 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerInitialising 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerTestMode 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionBluestackHandler:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandler:
	st	AH,@H'fff8
?LBB3:
	st	AL,@H'fff9
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	ld	AL,@H'fff8
	cmp	AL,#-H'7FFA
	beq	?L370
	cmp	AL,#(H'0001-H'7FFA)
	bcc	?L385
	cmp	AL,#-H'7FFC
	beq	?L369
	cmp	AL,#(H'0001-H'7FFC)
	bcc	?L371
	cmp	AL,#H'702C
	beq	?L367
	bra	(?L376)
?L385:
	ld	AL,@H'fff8
	cmp	AL,#-H'7FF9
	beq	?L372
	ld	AL,#H'7FF2
	add	AL,@H'fff8
	cmp	AL,#(H'0001+H'0001)
	bcc	?L376
	bra	(?L367)
?L369:
	ld	AL,@H'fff9
	ld	AH,@(H'0003,Y)
	bsr	_connectionBluestackHandlerDm
	bra	(?L367)
?L370:
	ld	AL,@H'fff9
	ld	AH,@(H'0003,Y)
	bsr	_connectionBluestackHandlerRfcomm
	bra	(?L367)
?L371:
	ld	AL,@H'fff9
	ld	AH,@(H'0003,Y)
	bsr	_connectionBluestackHandlerL2cap
	bra	(?L367)
?L372:
	ld	AL,@H'fff9
	ld	AH,@(H'0003,Y)
	bsr	_connectionBluestackHandlerSdp
	bra	(?L367)
?L376:
	cmp	AH,#H'0001
	beq	?L380
	cmp	AH,#H'0001
	bcs	?L379
	cmp	AH,#H'0002
	beq	?L378
	cmp	AH,#H'0003
	beq	?L381
	bra	(?L367)
?L378:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_connectionBluestackHandlerReady
	bra	(?L367)
?L379:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_connectionBluestackHandlerUninitialised
	bra	(?L367)
?L380:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_connectionBluestackHandlerInitialising
	bra	(?L367)
?L381:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_connectionBluestackHandlerTestMode
?L367:
?LBE3:
?LBE_connectionBluestackHandler:
	leavel	#3
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 6 total = 6
;# Function pattern *movqi_fetch_general used[0] = 6 total = 6
;# Function pattern *movqi_store_y_relative used[0] = 18 used[1] = 11 total = 29
;# Function pattern *movqi_fetch_y_relative used[0] = 25 total = 25
;# Function pattern *movqi_store_general used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 193 total = 193
;# Function pattern *movqi2b used[0] = 1 used[1] = 8 total = 9
;# Function pattern *addqi2 used[0] = 21 used[2] = 112 total = 133
;# Function pattern *andqi3 used[0] = 6 total = 6
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern jump used[0] = 218 total = 218
;# Function pattern *call1 used[0] = 208 total = 208
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Single pattern tablejump used = 9
;# Function pattern addsi3+1 used[0] = 8 total = 8
;# Function pattern subhi3+1 used[0] = 41 total = 41
;# Function pattern extendhfsf2+2 used[1] = 28 total = 28
;# Function pattern extendhfsf2+3 used[0] = 65 total = 65
	MODULE	dm_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_setDefaultLinkPolicy:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_setDefaultLinkPolicy ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_setDefaultLinkPolicy:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'2804
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE2:
?LBE_setDefaultLinkPolicy:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_ConnectionReadLocalVersion 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionVersionInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionVersionInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionVersionInit:
	bsr	$_connectionGetCmTask
	bsr	$_ConnectionReadLocalVersion
?LBE_connectionVersionInit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_StreamConfigure 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionDmInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionDmInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionDmInit:
?LBB3:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_StreamConfigure
?LBE3:
?LBE_connectionDmInit:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT _setDefaultLinkPolicy 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionDmInfoInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionDmInfoInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionDmInfoInit:
?LBB4:
	ld	AL,#H'0005
	ld	AH,#H'0005
	bsr	_setDefaultLinkPolicy
?LBB5:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'3000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0005
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	bsr	$_VmSendDmPrim
?LBE5:
?LBE4:
?LBE_connectionDmInfoInit:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 3 total = 3
;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movhi_store_general used[1] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 5 total = 5
;# Function pattern *movqi2 used[0] = 10 total = 10
;# Function pattern *addqi2 used[3] = 3 total = 3
;# Function pattern *call1 used[0] = 6 total = 6
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern addqi3-2 used[0] = 1 total = 1
	MODULE	dm_security_auth
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_connectionConvertLinkKeyType_t 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_register_device:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_register_device ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_register_device:
	st	AH,@(H'0001,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L2
?LBB3:
	ld	AL,#H'0019
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,#H'2E08
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(H'0001,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	ld	AL,@(H'0001,Y)
	add	AL,#H'0014
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	ld	AL,@(H'0002,Y)
	add	AL,#H'0008
	ld	AH,@(H'0001,Y)
	add	AH,#H'0004
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bsr	$_memmove
	ld	AL,@(H'0002,Y)
	add	AL,#H'0018
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0015
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertLinkKeyType_t
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0002,Y)
	bra	(?L4)
?L2:
?LBE3:
?LBB4:
	ld	AL,#H'0018
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C08
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AH,@(H'0004,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0014
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	ld	AL,@(H'0004,Y)
	add	AL,#H'0008
	ld	AH,@(H'0001,Y)
	add	AH,#H'0004
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bsr	$_memmove
	ld	AL,@(H'0004,Y)
?L4:
	bsr	$_VmSendDmPrim
?LBE4:
?LBE2:
?LBE_register_device:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
_unregister_device:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_unregister_device ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_unregister_device:
	st	AL,@(0,Y)
?LBB5:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C09
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE5:
?LBE_unregister_device:
	leavel	#4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_PsRetrieve 0 ; (Non-const ref)
.IMPORT $_BdaddrIsSame 0 ; (Non-const ref)
;# end scan referenced symbols
_find_trusted_device:
	enterl	#27
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_find_trusted_device ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_find_trusted_device:
	st	AL,@(H'0017,Y)
?LBB6:
	ld	AH,#H'0000
	st	AH,@(H'0018,Y)
?L14:
	ld	AL,@(H'0018,Y)
	add	AL,#H'002A
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L10
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'0017,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L10
	ld	AL,@(H'0018,Y)
	add	AL,#H'0001
	bra	(?L7)
?L10:
	ld	AL,@(H'0018,Y)
	add	AL,#H'0001
	st	AL,@(H'0018,Y)
	cmp	AL,#H'0007
	bcz	?L14
	ld	AL,#H'0000
?L7:
?LBE6:
?LBE_find_trusted_device:
	leavel	#27
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT _unregister_device 0 ; (Non-const ref)
.IMPORT $_PsStore 0 ; (Non-const ref)
;# end scan referenced symbols
_find_free_position:
	enterl	#36
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_find_free_position ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_find_free_position:
?LBB7:
	ld	AH,#H'0000
	st	AH,@(H'001F,Y)
?L26:
	ld	AL,@(H'001F,Y)
	add	AL,#H'002A
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	bne	?L23
	ld	AL,@(H'001F,Y)
	add	AL,#H'0001
	bra	(?L20)
?L23:
	ld	AH,@(H'001F,Y)
	add	AH,#H'0001
	st	AH,@(H'001F,Y)
	cmp	AH,#H'0007
	bcz	?L26
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	ld	AL,#H'0008
	st	AL,@(H'0020,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?L27:
	ld	X,@(H'0020,Y)
	add	X,#-H'0001
	st	X,@(H'0020,Y)
	add	X,@$XAP_AH
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L28
	ld	AL,@(H'0020,Y)
	cmp	AL,#H'0000
	bne	?L27
?L28:
	st	X,@H'ffff
	ld	X,@(H'0020,Y)
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AH
	st	AH,@(H'0021,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L32
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_unregister_device
?L32:
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AL,@(H'0020,Y)
	add	AL,@$XAP_AH
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	bsr	$_PsStore
	ld	AL,@(H'0021,Y)
?L20:
?LBE7:
?LBE_find_free_position:
	leavel	#36
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
_search_trusted_device_index:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_search_trusted_device_index ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_search_trusted_device_index:
	st	AL,@(H'0009,Y)
?LBB8:
	ld	AL,#H'0063
	st	AL,@(H'000A,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L41
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?L47:
	ld	AL,@(H'000A,Y)
	add	AL,@$XAP_AH
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0009,Y)
	beq	?L41
	ld	AL,@(H'000A,Y)
	add	AL,#H'0001
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0007
	bcz	?L47
?L41:
?LBE8:
	ld	AL,@(H'000A,Y)
?LBE_search_trusted_device_index:
	leavel	#13
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
;# end scan referenced symbols
_update_trusted_device_index:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_update_trusted_device_index ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_update_trusted_device_index:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB9:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L52
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0063
	beq	?L54
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@H'fff8
	cmp	AL,@(H'000A,Y)
	bcc	?L54
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fff9
?L59:
	ld	AH,@(H'000A,Y)
	sub	AH,@H'fff8
	add	AH,@H'fff9
	ld	X,@$XAP_AH
	add	X,#-H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,@(H'000A,Y)
	bcs	?L59
?L54:
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
?L52:
?LBE9:
?LBE_update_trusted_device_index:
	leavel	#13
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT _register_device 0 ; (Non-const ref)
;# end scan referenced symbols
_update_trusted_device_list:
	enterl	#28
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_update_trusted_device_list ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_update_trusted_device_list:
	st	AL,@(H'0017,Y)
	st	AL,@H'ffff
	ld	AL,@(H'001C,Y)
	st	AL,@H'fff8
	ld	AL,@H'ffff
?LBB10:
	ld	AL,#H'0000
	st	AL,@(H'0018,Y)
	ld	X,#H'0001
	st	X,@(H'0019,Y)
	cmp	AH,#H'0000
	beq	?L66
	add	AH,#-H'0001
	st	AH,@(H'0018,Y)
?L66:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AL,@(H'001D,Y)
	st	AL,@(H'0016,Y)
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'001E,Y)
	bsr	$_memmove
	ld	X,@(H'001F,Y)
	st	X,@(H'0015,Y)
	ld	AL,@(H'0020,Y)
	cmp	AL,#H'0000
	beq	?L67
	ld	AL,@(H'0018,Y)
	add	AL,#H'002A
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
	cmp	AL,#H'0000
	beq	?L68
	ld	AL,@(H'0017,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bra	(?L71)
?L68:
	ld	AL,#H'0000
	st	AL,@(H'0019,Y)
	bra	(?L70)
?L67:
	ld	AL,@(H'0017,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?L71:
	bsr	_register_device
?L70:
?LBE10:
	ld	AL,@(H'0019,Y)
?LBE_update_trusted_device_list:
	leavel	#28
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
;# end scan referenced symbols
_delete_from_trusted_device_index:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_delete_from_trusted_device_index ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_delete_from_trusted_device_index:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB11:
	ld	AH,#H'0000
	st	AH,@(H'000B,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L76
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0063
	beq	?L77
	st	AL,@H'fff8
	ld	AL,@(H'000A,Y)
	add	AL,#-H'0001
	ld	AH,@H'fff8
	cmp	AH,@$XAP_AL
	bcc	?L84
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffa
	ld	AH,@(H'000A,Y)
	add	AH,#-H'0001
	st	AH,@H'fff9
?L82:
	ld	AH,@H'fffa
	add	AH,@H'fff8
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,@H'fff9
	bcs	?L82
?L84:
	ld	AH,@(H'000A,Y)
	st	X,@H'ffff
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,@$XAP_AH
	add	X,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L77:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
	ld	AH,#H'0001
	st	AH,@(H'000B,Y)
?L76:
?LBE11:
	ld	AL,@(H'000B,Y)
?LBE_delete_from_trusted_device_index:
	leavel	#14
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthInit:
	enterl	#36
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthInit:
	st	AL,@(H'001F,Y)
?LBB12:
	ld	AL,#H'0000
	st	AL,@(H'0020,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	bne	?L90
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
	ld	AL,#H'002A
	st	AL,@(H'0021,Y)
?L95:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0021,Y); movqi2b+1 peephole
	ld	AH,#H'0000
	bsr	$_PsStore
	ld	X,@(H'0021,Y)
	add	X,#H'0001
	st	X,@(H'0021,Y)
	cmp	X,#H'0031
	bcz	?L95
	bra	(?L96)
?L90:
	ld	AL,#H'0000
	st	AL,@(H'0021,Y)
?L102:
	ld	AL,@(H'0021,Y)
	add	AL,#H'002A
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L99
	ld	AL,@(H'001F,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_register_device
	ld	AL,@(H'0020,Y)
	add	AL,#H'0001
	st	AL,@(H'0020,Y)
?L99:
	ld	X,@(H'0021,Y)
	add	X,#H'0001
	st	X,@(H'0021,Y)
	cmp	X,#H'0007
	bcz	?L102
?L96:
?LBE12:
	ld	AL,@(H'0020,Y)
?LBE_connectionAuthInit:
	leavel	#36
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
.IMPORT _find_trusted_device 0 ; (Non-const ref)
.IMPORT _search_trusted_device_index 0 ; (Non-const ref)
.IMPORT _find_free_position 0 ; (Non-const ref)
.IMPORT _update_trusted_device_index 0 ; (Non-const ref)
.IMPORT _delete_from_trusted_device_index 0 ; (Non-const ref)
.IMPORT _update_trusted_device_list 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionAuthAddDevice:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthAddDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthAddDevice:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB13:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_AH
	bsr	_find_trusted_device
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L111
	bsr	_search_trusted_device_index
	st	AL,@(H'0008,Y)
	bra	(?L112)
?L111:
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'0000
	beq	?L112
	ld	AL,#H'0007
	st	AL,@(H'0008,Y)
	bsr	_find_free_position
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	bne	?L112
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
?L112:
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'0000
	beq	?L115
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0008,Y)
	bsr	_update_trusted_device_index
	bra	(?L116)
?L115:
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L116
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0008
	bsr	_delete_from_trusted_device_index
	ld	AL,@(H'0007,Y)
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_PsStore
?L116:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0007,Y)
	bsr	_update_trusted_device_list
?LBE13:
?LBE_connectionAuthAddDevice:
	leavel	#11
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthGetDevice:
	enterl	#27
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthGetDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthGetDevice:
	st	AH,@(H'0017,Y)
?LBB14:
	ld	AH,#H'0000
	st	AH,@(H'0018,Y)
	bsr	_find_trusted_device
	cmp	AL,#H'0000
	beq	?L124
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	ld	AL,#H'0001
	st	AL,@(H'0018,Y)
	ld	AL,@(H'0015,Y)
	ld	X,@(H'001C,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0016,Y)
	ld	X,@(H'0017,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@(H'001B,Y); movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
?L124:
?LBE14:
	ld	AL,@(H'0018,Y)
?LBE_connectionAuthGetDevice:
	leavel	#27
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthDeleteDevice:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthDeleteDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthDeleteDevice:
	st	AL,@(H'0001,Y)
?LBB15:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_find_trusted_device
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L127
	bsr	_search_trusted_device_index
	ld	AH,#H'0008
	bsr	_delete_from_trusted_device_index
	ld	AL,@(H'0002,Y)
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_PsStore
	ld	AL,@(H'0001,Y)
	bsr	_unregister_device
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
?L127:
?LBE15:
	ld	AL,@(H'0003,Y)
?LBE_connectionAuthDeleteDevice:
	leavel	#6
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthDeleteAllDevice:
	enterl	#37
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthDeleteAllDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthDeleteAllDevice:
	st	AL,@(H'001F,Y)
?LBB16:
	ld	AH,#H'0000
	st	AH,@(H'0020,Y)
	st	AH,@(H'0021,Y)
?L136:
	ld	X,@(H'0021,Y)
	add	X,#H'002A
	st	X,@(H'0022,Y)
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L134
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_unregister_device
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0022,Y); movqi2b+1 peephole
	ld	AH,#H'0000
	bsr	$_PsStore
	ld	AL,#H'0001
	st	AL,@(H'0020,Y)
?L134:
	ld	X,@(H'001F,Y)
	cmp	X,#H'0000
	beq	?L132
	ld	AL,@$XAP_UXL
	add	AL,@(H'0021,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_PsStore
?L132:
	ld	AH,@(H'0021,Y)
	add	AH,#H'0001
	st	AH,@(H'0021,Y)
	cmp	AH,#H'0007
	bcz	?L136
	ld	AL,@(H'0020,Y)
	cmp	AL,#H'0000
	beq	?L137
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0017,Y)
	st	AL,@(H'0018,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0019,Y)
	st	AL,@(H'001A,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'001B,Y)
	st	AL,@(H'001C,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'001D,Y)
	st	AL,@(H'001E,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0017+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
?L137:
?LBE16:
	ld	AL,@(H'0020,Y)
?LBE_connectionAuthDeleteAllDevice:
	leavel	#37
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthSetTrustLevel:
	enterl	#27
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthSetTrustLevel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthSetTrustLevel:
	st	AL,@(H'0017,Y)
	ld	AL,@$XAP_AH
?LBB17:
	bsr	_find_trusted_device
	cmp	AL,#H'0000
	beq	?L145
	add	AL,#H'0029
	st	AL,@(H'0018,Y)
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	ld	AH,@(H'001B,Y)
	st	AH,@(H'0015,Y)
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@(H'0018,Y); movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
	ld	AL,@(H'0017,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_register_device
	ld	AL,#H'0001
	bra	(?L144)
?L145:
	ld	AL,#H'0000
?L144:
?LBE17:
?LBE_connectionAuthSetTrustLevel:
	leavel	#27
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthUpdateMru:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthUpdateMru ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthUpdateMru:
?LBB18:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	bsr	_find_trusted_device
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L148
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@(0,Y)
	bsr	_search_trusted_device_index
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	bsr	_update_trusted_device_index
?L148:
?LBE18:
	ld	AL,@(H'0001,Y)
?LBE_connectionAuthUpdateMru:
	leavel	#4
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthSendLinkKey:
	enterl	#27
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthSendLinkKey ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthSendLinkKey:
	st	AL,@(H'0017,Y)
?LBB19:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0018,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C0A
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(H'0017,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0017,Y)
	bsr	_find_trusted_device
	cmp	AL,#H'0000
	beq	?L151
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	ld	AL,@(H'0018,Y)
	add	AL,#H'0015
	st	AL,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,@(H'0018,Y)
	add	AL,#H'0005
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
	bra	(?L152)
?L151:
	ld	AL,@(H'0018,Y)
	add	AL,#H'0015
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0018,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'000D
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'000F
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'0011
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'0013
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
?L152:
	ld	AL,@(H'0018,Y)
	bsr	$_VmSendDmPrim
?LBE19:
?LBE_connectionAuthSendLinkKey:
	leavel	#27
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionAuthSendSspLinkKey:
	enterl	#36
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthSendSspLinkKey ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthSendSspLinkKey:
	st	AL,@(H'0017,Y)
	st	AH,@(H'0018,Y)
?LBB20:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'001B,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C00
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(H'0017,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0017,Y)
	bsr	_find_trusted_device
	cmp	AL,#H'0000
	beq	?L155
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	ld	AL,@(H'0016,Y)
	cmp	AL,#H'0000
	bne	?L156
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0016,Y)
	ld	AL,@H'ffff
?L156:
	ld	AL,@(H'0018,Y)
	cmp	AL,#H'0000
	beq	?L157
	ld	AL,@(H'0016,Y)
	cmp	AL,#H'0004
	bne	?L158
	ld	AL,@(H'001B,Y)
	add	AL,#H'0005
	st	AL,@(H'001C,Y)
	ld	AL,#H'0004
	bsr	$_connectionConvertLinkKeyType_t
	ld	X,@(H'001C,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'001A,Y)
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
	ld	AL,@(H'001B,Y)
	add	AL,#H'0006
	st	AL,@(H'001D,Y)
	ld	AL,@(H'001A,Y)
	bsr	$_VmGetHandleFromPointer
	st	X,@H'ffff
	ld	X,@(H'001D,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L163)
?L158:
	ld	AL,@(H'001B,Y)
	add	AL,#H'0005
	st	AL,@(H'001E,Y)
	ld	AL,#H'0000
	bsr	$_connectionConvertLinkKeyType_t
	st	X,@H'ffff
	ld	X,@(H'001E,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L164)
?L157:
	ld	AL,@(H'001B,Y)
	add	AL,#H'0005
	st	AL,@(H'001F,Y)
	ld	AL,@(H'0016,Y)
	bsr	$_connectionConvertLinkKeyType_t
	ld	X,@(H'001F,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'001A,Y)
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
	ld	AL,@(H'001B,Y)
	add	AL,#H'0006
	st	AL,@(H'0020,Y)
	ld	AL,@(H'001A,Y)
	bsr	$_VmGetHandleFromPointer
	st	X,@H'ffff
	ld	X,@(H'0020,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L163:
	bsr	$dostore_AL
	ld	AL,#H'0001
	bra	(?L162)
?L155:
	ld	AL,@(H'001B,Y)
	add	AL,#H'0005
	st	AL,@(H'0021,Y)
	ld	AL,#H'0000
	bsr	$_connectionConvertLinkKeyType_t
	st	X,@H'ffff
	ld	X,@(H'0021,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L164:
	bsr	$dostore_AL
	ld	AL,@(H'001B,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L162:
	st	AL,@(H'0019,Y)
	ld	AL,@(H'001B,Y)
	bsr	$_VmSendDmPrim
?LBE20:
	ld	AL,@(H'0019,Y)
?LBE_connectionAuthSendSspLinkKey:
	leavel	#36
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthPutAttribute:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthPutAttribute ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthPutAttribute:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
?LBB21:
	bsr	_find_trusted_device
	cmp	AL,#H'0000
	beq	?L169
	add	AL,#-H'0001
	ld	AH,@(H'0001,Y)
	add	AL,@$XAP_AH
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_PsStore
?L169:
?LBE21:
?LBE_connectionAuthPutAttribute:
	leavel	#4
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionAuthGetAttribute:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthGetAttribute ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthGetAttribute:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB22:
	ld	AL,@(H'0007,Y)
	bsr	_find_trusted_device
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L172
	ld	AL,@(H'0008,Y)
?LBB23:
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
	add	AH,#H'0001
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0007,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L174
	add	AL,#-H'0001
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0008,Y)
	cmp	AH,#H'0000
	beq	?L174
	ld	AL,@(H'0002,Y)
	add	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@H'fff8
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L174
	st	X,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L174:
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7041
	bsr	$_MessageSend
?L172:
?LBE23:
?LBE22:
?LBE_connectionAuthGetAttribute:
	leavel	#7
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthGetAttributeNow:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthGetAttributeNow ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthGetAttributeNow:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
?LBB24:
	bsr	_find_trusted_device
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L182
	add	AL,#-H'0001
	ld	AH,@(H'0005,Y)
	cmp	AH,#H'0000
	beq	?L182
	ld	AH,@(H'0001,Y)
	add	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L182
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L182:
?LBE24:
	ld	AL,@(H'0002,Y)
?LBE_connectionAuthGetAttributeNow:
	leavel	#5
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthGetIndexedAttribute:
	enterl	#38
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthGetIndexedAttribute ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthGetIndexedAttribute:
	st	AL,@(H'001F,Y)
	st	AH,@(H'0020,Y)
	ld	AL,@(H'0027,Y)
?LBB25:
?LBB26:
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0021,Y)
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0027,Y)
	bsr	$dostore_AL
	ld	X,@(H'0021,Y)
	add	X,#H'0006
	st	X,@(H'0022,Y)
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,@(H'0026,Y)
	cmp	AL,#(H'0001+H'0007)
	bcc	?L189
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L189
	ld	AH,@(H'0026,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,@$XAP_AL
	st	AH,@(H'0023,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L189
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L189
	ld	AL,@(H'0009,Y)
	ld	X,@(H'0021,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'000A,Y)
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'0021,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'000C,Y)
	ld	X,@(H'0021,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0027,Y)
	cmp	AH,#H'0000
	beq	?L191
	ld	X,@(H'0023,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0020,Y)
	add	AL,@$XAP_UXL
	add	AL,#-H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0022,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L189
	st	X,@H'ffff
	ld	X,@(H'0021,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bra	(?L189)
?L191:
	st	X,@H'ffff
	ld	X,@(H'0021,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L189:
	ld	X,@(H'0021,Y)
	st	X,@(0,Y)
	ld	AL,@(H'001F,Y)
	ld	AH,#H'7042
	bsr	$_MessageSend
?LBE26:
?LBE25:
?LBE_connectionAuthGetIndexedAttribute:
	leavel	#38
;.stabn	192,0,0,?LBB25
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;.stabn	224,0,0,?LBE25
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthGetIndexedAttributeNow:
	enterl	#37
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthGetIndexedAttributeNow ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthGetIndexedAttributeNow:
	st	AL,@(H'001F,Y)
	st	AH,@(H'0020,Y)
?LBB27:
	ld	AH,#H'0000
	st	AH,@(H'0021,Y)
	ld	AL,@(H'0020,Y)
	cmp	AL,#(H'0001+H'0007)
	bcc	?L200
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L200
	ld	AH,@(H'0020,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,@$XAP_AL
	st	AH,@(H'0022,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L200
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L200
	ld	AL,@(H'0009,Y)
	ld	X,@(H'0027,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'000A,Y)
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'000B,Y)
	ld	X,@(H'0027,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'000C,Y)
	ld	AH,@(H'0027,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0025,Y)
	cmp	AL,#H'0000
	beq	?L202
	ld	X,@(H'0022,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'001F,Y)
	add	AL,@$XAP_UXL
	add	AL,#-H'0001
	ld	AH,@(H'0025,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0026,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L200
	ld	AL,#H'0001
	st	AL,@(H'0021,Y)
	bra	(?L200)
?L202:
	ld	X,#H'0001
	st	X,@(H'0021,Y)
?L200:
?LBE27:
	ld	AL,@(H'0021,Y)
?LBE_connectionAuthGetIndexedAttributeNow:
	leavel	#37
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 47 used[1] = 7 total = 54
;# Function pattern *movqi_fetch_general used[0] = 11 total = 11
;# Function pattern *movqi_store_y_relative used[0] = 116 used[1] = 21 total = 137
;# Function pattern *movqi_fetch_y_relative used[0] = 127 used[1] = 1 total = 128
;# Function pattern *movhi_store_y_relative used[2] = 8 total = 8
;# Function pattern *movhi_store_general used[1] = 8 total = 8
;# Function pattern *movqi_store_general used[0] = 38 total = 38
;# Function pattern *movqi2 used[0] = 89 total = 89
;# Function pattern *movqi2b used[0] = 38 used[1] = 6 total = 44
;# Function pattern *addqi4-withytranslation used[1] = 1 total = 1
;# Function pattern *addqi0-framep used[0] = 43 total = 43
;# Function pattern *addqi2-withytranslation-framep used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 88 used[2] = 9 used[3] = 3 total = 100
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 15 total = 15
;# Function pattern *call1 used[0] = 19 total = 19
;# Function pattern *call_value1 used[0] = 76 total = 76
;# Function pattern addsi3+1 used[0] = 4 total = 4
;# Function pattern addsi3+2 used[0] = 6 total = 6
;# Function pattern addhi3-1 used[0] = 17 total = 17
;# Function pattern subhi3+1 used[0] = 5 total = 5
;# Function pattern addqi3-2 used[0] = 2 total = 2
;# Function pattern extendhfsf2+2 used[1] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 63 total = 63
;# Function pattern extendhfsf2+6 used[0] = 2 total = 2
	MODULE	dm_security_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSetSecurityMode 0 ; (Non-const ref)
.IMPORT $_connectionAuthInit 0 ; (Non-const ref)
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionSmInit:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSmInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSmInit:
	st	AL,@(H'0001,Y)
?LBB2:
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_ConnectionSmSetSecurityMode
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionAuthInit
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L2
	ld	AL,#H'0080
	bsr	$_connectionSendInternalInitCfm
?L2:
?LBE2:
	ld	AL,@(H'0002,Y)
?LBE_connectionSmInit:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 2 used[1] = 1 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	dm_security_mode
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionSmSetSecurityMode:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmSetSecurityMode ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmSetSecurityMode:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0012
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSmSetSecurityMode:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionSmSecModeConfig:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmSecModeConfig ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmSecModeConfig:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
?LBB5:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0014
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionSmSecModeConfig:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 5 total = 5
;# Function pattern *movqi_store_y_relative used[0] = 8 total = 8
;# Function pattern *movqi_fetch_y_relative used[0] = 12 total = 12
;# Function pattern *movqi_store_general used[0] = 7 total = 7
;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 3 used[3] = 2 total = 5
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 4 total = 4
	MODULE	l2cap_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionL2capInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionL2capInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionL2capInit:
	ld	AL,#H'0004
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionL2capInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	rfc_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_VmSendRfcommPrim 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionRfcInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionRfcInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionRfcInit:
?LBB2:
?LBB3:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0006
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'03E8
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000A
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	bsr	$_VmSendRfcommPrim
?LBE3:
?LBE2:
?LBE_connectionRfcInit:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movhi_store_general used[1] = 3 total = 3
;# Function pattern *movqi_store_general used[0] = 5 total = 5
;# Function pattern *movqi2 used[0] = 6 total = 6
;# Function pattern *addqi2 used[3] = 7 total = 7
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 1 total = 1
	MODULE	sdp_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_BdaddrSetZero 0 ; (Non-const ref)
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionSdpInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSdpInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSdpInit:
	add	AL,#H'0002
	bsr	$_BdaddrSetZero
	ld	AL,#H'0020
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionSdpInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
	MODULE	tcp_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionTcpInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionTcpInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionTcpInit:
	ld	AL,#H'0010
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionTcpInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	udp_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionUdpInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionUdpInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionUdpInit:
	ld	AL,#H'0008
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionUdpInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	common
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_connectionConvertHciStatus:
; leaf function with empty stack frame
?LBB_connectionConvertHciStatus:
	cmp	AL,#H'0035
	bcz	?L1
?L5:
	ld	AL,#H'0036
?L1:
?LBE_connectionConvertHciStatus:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertAuthStatus:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertAuthStatus ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertAuthStatus:
	ld	AH,@$XAP_AL
	cmp	AL,#(H'0001+H'0038)
	bcc	?L193
	add	AL,#(?L194)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L194:
	.CODE
?JT194:
	.SEG	CONST
	dc	lwrd(?L173-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L176-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L179-?JT194)
	dc	lwrd(?L182-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L185-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L188-?JT194)
	dc	lwrd(?L191-?JT194)
	.CODE
?L176:
	ld	AL,#H'0001
	bra	(?L169)
?L179:
	ld	AL,#H'0003
	bra	(?L169)
?L182:
	ld	AL,#H'0004
	bra	(?L169)
?L185:
	ld	AL,#H'0005
	bra	(?L169)
?L188:
	ld	AL,#H'0006
	bra	(?L169)
?L191:
	ld	AL,#H'0007
	bra	(?L169)
?L173:
	ld	AL,@$XAP_AH
	bra	(?L169)
?L193:
	ld	AL,#H'0002
?L169:
?LBE_connectionConvertAuthStatus:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertHciVersion:
; leaf function with empty stack frame
?LBB_connectionConvertHciVersion:
	cmp	AL,#H'0004
	bcz	?L195
?L199:
	ld	AL,#H'0005
?L195:
?LBE_connectionConvertHciVersion:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertInquiryMode_t:
; leaf function with empty stack frame
?LBB_connectionConvertInquiryMode_t:
	cmp	AL,#H'0002
	bcz	?L216
?L220:
	ld	AL,#H'0000
?L216:
?LBE_connectionConvertInquiryMode_t:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertInquiryMode:
; leaf function with empty stack frame
?LBB_connectionConvertInquiryMode:
	cmp	AL,#H'0002
	bcz	?L231
?L235:
	ld	AL,#H'0000
?L231:
?LBE_connectionConvertInquiryMode:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertSdpOpenStatus:
; leaf function with empty stack frame
?LBB_connectionConvertSdpOpenStatus:
	cmp	AL,#H'0009
	bcz	?L246
?L250:
	ld	AL,#H'000A
?L246:
?LBE_connectionConvertSdpOpenStatus:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertSdpSearchStatus:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertSdpSearchStatus ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertSdpSearchStatus:
	ld	AH,@$XAP_AL
	cmp	AL,#(H'0001+H'0022)
	bcc	?L345
	add	AL,#(?L346)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L346:
	.CODE
?JT346:
	.SEG	CONST
	dc	lwrd(?L286-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L289-?JT346)
	dc	lwrd(?L292-?JT346)
	dc	lwrd(?L295-?JT346)
	dc	lwrd(?L298-?JT346)
	dc	lwrd(?L301-?JT346)
	dc	lwrd(?L304-?JT346)
	dc	lwrd(?L307-?JT346)
	dc	lwrd(?L310-?JT346)
	dc	lwrd(?L313-?JT346)
	dc	lwrd(?L316-?JT346)
	dc	lwrd(?L319-?JT346)
	dc	lwrd(?L322-?JT346)
	dc	lwrd(?L325-?JT346)
	dc	lwrd(?L328-?JT346)
	dc	lwrd(?L331-?JT346)
	dc	lwrd(?L334-?JT346)
	dc	lwrd(?L337-?JT346)
	dc	lwrd(?L340-?JT346)
	dc	lwrd(?L343-?JT346)
	.CODE
?L289:
	ld	AL,#H'0001
	bra	(?L282)
?L292:
	ld	AL,#H'0002
	bra	(?L282)
?L295:
	ld	AL,#H'0003
	bra	(?L282)
?L298:
	ld	AL,#H'0004
	bra	(?L282)
?L301:
	ld	AL,#H'0005
	bra	(?L282)
?L304:
	ld	AL,#H'0006
	bra	(?L282)
?L307:
	ld	AL,#H'0007
	bra	(?L282)
?L310:
	ld	AL,#H'0008
	bra	(?L282)
?L313:
	ld	AL,#H'0009
	bra	(?L282)
?L316:
	ld	AL,#H'000A
	bra	(?L282)
?L319:
	ld	AL,#H'000B
	bra	(?L282)
?L322:
	ld	AL,#H'000C
	bra	(?L282)
?L325:
	ld	AL,#H'000D
	bra	(?L282)
?L328:
	ld	AL,#H'000E
	bra	(?L282)
?L331:
	ld	AL,#H'000F
	bra	(?L282)
?L334:
	ld	AL,#H'0010
	bra	(?L282)
?L337:
	ld	AL,#H'0011
	bra	(?L282)
?L340:
	ld	AL,#H'0012
	bra	(?L282)
?L343:
	ld	AL,#H'0013
	bra	(?L282)
?L286:
	ld	AL,@$XAP_AH
	bra	(?L282)
?L345:
	ld	AL,#H'0014
?L282:
?LBE_connectionConvertSdpSearchStatus:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertRfcommDisconnectStatus:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertRfcommDisconnectStatus ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertRfcommDisconnectStatus:
	ld	AH,@$XAP_AL
	cmp	AL,#(H'0001+H'0030)
	bcc	?L449
	add	AL,#(?L450)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L450:
	.CODE
?JT450:
	.SEG	CONST
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L351-?JT450)
	.CODE
?L351:
	ld	AL,@$XAP_AH
	bra	(?L347)
?L449:
	ld	AL,#H'0031
?L347:
?LBE_connectionConvertRfcommDisconnectStatus:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertBdaddr_t:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertBdaddr_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertBdaddr_t:
	st	AL,@H'fff8
	st	AH,@H'fff9
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fff8
	ld	X,@H'fff9
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@H'fff9
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
?LBE_connectionConvertBdaddr_t:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertBdaddr:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertBdaddr ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertBdaddr:
	st	AL,@H'fff8
	st	AH,@H'fff9
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fff8
	ld	X,@H'fff9
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@H'fff9
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
?LBE_connectionConvertBdaddr:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertPageScanRepMode_t:
; leaf function with empty stack frame
?LBB_connectionConvertPageScanRepMode_t:
	cmp	AL,#H'0002
	bcz	?L453
?L457:
	ld	AL,#H'0003
?L453:
?LBE_connectionConvertPageScanRepMode_t:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertPageScanRepMode:
; leaf function with empty stack frame
?LBB_connectionConvertPageScanRepMode:
	cmp	AL,#H'0002
	bcz	?L468
?L472:
	ld	AL,#H'0002
?L468:
?LBE_connectionConvertPageScanRepMode:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertPageScanMode_t:
; leaf function with empty stack frame
?LBB_connectionConvertPageScanMode_t:
	cmp	AL,#H'0003
	bcz	?L484
?L488:
	ld	AL,#H'0004
?L484:
?LBE_connectionConvertPageScanMode_t:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertPageScanMode:
; leaf function with empty stack frame
?LBB_connectionConvertPageScanMode:
	cmp	AL,#H'0003
	bcz	?L502
?L506:
	ld	AL,#H'0000
?L502:
?LBE_connectionConvertPageScanMode:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertProtocolId_t:
; leaf function with empty stack frame
?LBB_connectionConvertProtocolId_t:
	cmp	AH,#H'0000
	bne	?L522
	cmp	AL,#H'0000
	bne	?L522
	ld	AL,#H'0000
	bra	(?L521)
?L522:
	cmp	AH,#H'0000
	bne	?L524
	cmp	AL,#H'0001
	bne	?L524
	ld	AL,#H'0001
	bra	(?L521)
?L524:
	cmp	AH,#hwrd(H'0001+H'7FFF)
	bcs	?L530
	bne	?L521
	cmp	AL,#lwrd(H'0001+H'7FFF)
	bcc	?L521
?L530:
	ld	AL,#H'0002
?L521:
?LBE_connectionConvertProtocolId_t:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertProtocolId:
; leaf function with empty stack frame
?LBB_connectionConvertProtocolId:
	cmp	AL,#H'0000
	bne	?L532
	ld	AL,#H'0000
	bra	(?L536)
?L532:
	cmp	AL,#H'0001
	bne	?L534
	ld	AL,#H'0001
?L536:
	ld	AH,#H'0000
	bra	(?L531)
?L534:
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
?L531:
?LBE_connectionConvertProtocolId:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertHciScanEnable:
; leaf function with empty stack frame
?LBB_connectionConvertHciScanEnable:
	cmp	AL,#H'0003
	bcz	?L539
?L543:
	ld	AL,#H'0003
?L539:
?LBE_connectionConvertHciScanEnable:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertSecurityMode_t:
; leaf function with empty stack frame
?LBB_connectionConvertSecurityMode_t:
	cmp	AL,#H'0005
	beq	?L576
	cmp	AL,#H'0005
	bcs	?L557
	bra	(?L579)
?L576:
	ld	AL,#H'0080
	bra	(?L557)
?L561:
?L579:
	ld	AL,#H'0000
?L557:
?LBE_connectionConvertSecurityMode_t:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertSecurityLevel_t:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertSecurityLevel_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertSecurityLevel_t:
	ld	AH,@$XAP_AL
	cmp	AL,#(H'0001+H'0008)
	bcc	?L611
	add	AL,#(?L612)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L612:
	.CODE
?JT612:
	.SEG	CONST
	dc	lwrd(?L587-?JT612)
	dc	lwrd(?L587-?JT612)
	dc	lwrd(?L587-?JT612)
	dc	lwrd(?L596-?JT612)
	dc	lwrd(?L599-?JT612)
	dc	lwrd(?L602-?JT612)
	dc	lwrd(?L605-?JT612)
	dc	lwrd(?L608-?JT612)
	dc	lwrd(?L611-?JT612)
	.CODE
?L596:
	ld	AL,#H'0004
	bra	(?L583)
?L599:
	ld	AL,#H'0008
	bra	(?L583)
?L602:
	ld	AL,#H'0010
	bra	(?L583)
?L605:
	ld	AL,#H'0020
	bra	(?L583)
?L608:
	ld	AL,#H'0040
	bra	(?L583)
?L587:
	ld	AL,@$XAP_AH
	bra	(?L583)
?L611:
	ld	AL,#H'0000
?L583:
?LBE_connectionConvertSecurityLevel_t:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertSspSecurityLevel_t:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertSspSecurityLevel_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertSspSecurityLevel_t:
?LBB2:
	cmp	AH,#H'0000
	beq	?L614
	cmp	AL,#(H'0001+H'0004)
	bcc	?L621
	add	AL,#(?L622)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L622:
	.CODE
?JT622:
	.SEG	CONST
	dc	lwrd(?L616-?JT622)
	dc	lwrd(?L617-?JT622)
	dc	lwrd(?L621-?JT622)
	dc	lwrd(?L619-?JT622)
	dc	lwrd(?L621-?JT622)
	.CODE
?L616:
	ld	AL,#H'0000
	bra	(?L615)
?L617:
	ld	AL,#H'0900
	bra	(?L615)
?L619:
	ld	AL,#H'1B36
	bra	(?L615)
?L621:
	ld	AL,#H'0936
?L615:
	ld	AH,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L623
	or	AL,#H'0009
?L623:
	ld	X,@(H'0003,Y)
	cmp	X,#H'0000
	beq	?L625
	or	AL,#H'2400
	bra	(?L625)
?L614:
	cmp	AL,#(H'0001+H'0004)
	bcc	?L632
	add	AL,#(?L633)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L633:
	.CODE
?JT633:
	.SEG	CONST
	dc	lwrd(?L627-?JT633)
	dc	lwrd(?L628-?JT633)
	dc	lwrd(?L632-?JT633)
	dc	lwrd(?L630-?JT633)
	dc	lwrd(?L632-?JT633)
	.CODE
?L627:
	ld	AL,#H'0000
	bra	(?L626)
?L628:
	ld	AL,#H'0100
	bra	(?L626)
?L630:
	ld	AL,#H'0306
	bra	(?L626)
?L632:
	ld	AL,#H'0106
?L626:
	ld	AH,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L634
	or	AL,#H'0001
?L634:
	ld	X,@(H'0003,Y)
	cmp	X,#H'0000
	beq	?L625
	or	AL,#H'0400
?L625:
?LBE2:
?LBE_connectionConvertSspSecurityLevel_t:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertWriteAuthEnable_t:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertWriteAuthEnable_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertWriteAuthEnable_t:
	ld	AH,@$XAP_AL
	cmp	AL,#(H'0001+H'0005)
	bcc	?L662
	add	AL,#(?L663)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L663:
	.CODE
?JT663:
	.SEG	CONST
	dc	lwrd(?L645-?JT663)
	dc	lwrd(?L645-?JT663)
	dc	lwrd(?L645-?JT663)
	dc	lwrd(?L654-?JT663)
	dc	lwrd(?L657-?JT663)
	dc	lwrd(?L660-?JT663)
	.CODE
?L654:
	ld	AL,#H'0004
	bra	(?L641)
?L657:
	ld	AL,#H'0008
	bra	(?L641)
?L660:
	ld	AL,#H'000F
	bra	(?L641)
?L645:
	ld	AL,@$XAP_AH
	bra	(?L641)
?L662:
	ld	AL,#H'0001
?L641:
?LBE_connectionConvertWriteAuthEnable_t:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertAuthenticationRequirements:
; leaf function with empty stack frame
?LBB_connectionConvertAuthenticationRequirements:
	cmp	AL,#H'0005
	bcz	?L664
?L668:
	ld	AL,#H'0006
?L664:
?LBE_connectionConvertAuthenticationRequirements:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertLinkKeyType_t:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertLinkKeyType_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertLinkKeyType_t:
	cmp	AL,#(H'0001+H'0005)
	bcc	?L709
	add	AL,#(?L710)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L710:
	.CODE
?JT710:
	.SEG	CONST
	dc	lwrd(?L709-?JT710)
	dc	lwrd(?L695-?JT710)
	dc	lwrd(?L698-?JT710)
	dc	lwrd(?L701-?JT710)
	dc	lwrd(?L704-?JT710)
	dc	lwrd(?L707-?JT710)
	.CODE
?L695:
	ld	AL,#H'0000
	bra	(?L688)
?L698:
	ld	AL,#H'0003
	bra	(?L688)
?L701:
	ld	AL,#H'0004
	bra	(?L688)
?L704:
	ld	AL,#H'0005
	bra	(?L688)
?L707:
	ld	AL,#H'0006
	bra	(?L688)
?L692:
?L709:
	ld	AL,#H'00FE
?L688:
?LBE_connectionConvertLinkKeyType_t:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertLinkKeyType:
; leaf function with empty stack frame
?LBB_connectionConvertLinkKeyType:
	cmp	AL,#H'0004
	beq	?L724
	cmp	AL,#(H'0001+H'0004)
	bcc	?L734
	cmp	AL,#H'0000
	beq	?L718
	cmp	AL,#H'0003
	beq	?L721
	bra	(?L732)
?L734:
	cmp	AL,#H'0006
	beq	?L730
	cmp	AL,#H'0006
	bcs	?L727
	bra	(?L732)
?L718:
	ld	AL,#H'0001
	bra	(?L711)
?L721:
	ld	AL,#H'0002
	bra	(?L711)
?L724:
	ld	AL,#H'0003
	bra	(?L711)
?L727:
	ld	AL,#H'0004
	bra	(?L711)
?L730:
	ld	AL,#H'0005
	bra	(?L711)
?L715:
?L732:
	ld	AL,#H'0000
?L711:
?LBE_connectionConvertLinkKeyType:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertIoCapability_t:
; leaf function with empty stack frame
?LBB_connectionConvertIoCapability_t:
	cmp	AL,#H'0003
	bcz	?L740
?L744:
	ld	AL,#H'0003
?L740:
?LBE_connectionConvertIoCapability_t:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertIoCapability:
; leaf function with empty stack frame
?LBB_connectionConvertIoCapability:
	cmp	AL,#H'0003
	bcz	?L758
?L762:
	ld	AL,#H'0003
?L758:
?LBE_connectionConvertIoCapability:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertKeypressType_t:
; leaf function with empty stack frame
?LBB_connectionConvertKeypressType_t:
	cmp	AL,#H'0004
	bcz	?L776
?L780:
	ld	AL,#H'0001
?L776:
?LBE_connectionConvertKeypressType_t:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertKeypressType:
; leaf function with empty stack frame
?LBB_connectionConvertKeypressType:
	cmp	AL,#H'0004
	bcz	?L797
?L801:
	ld	AL,#H'0001
?L797:
?LBE_connectionConvertKeypressType:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertHciRole:
; leaf function with empty stack frame
?LBB_connectionConvertHciRole:
	cmp	AL,#H'0001
	bcz	?L818
?L822:
	ld	AL,#H'0002
?L818:
?LBE_connectionConvertHciRole:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertHciRole_t:
; leaf function with empty stack frame
?LBB_connectionConvertHciRole_t:
	cmp	AL,#H'0001
	bcz	?L830
?L834:
	ld	AL,#H'0002
?L830:
?LBE_connectionConvertHciRole_t:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertBtVersion:
; leaf function with empty stack frame
?LBB_connectionConvertBtVersion:
	cmp	AL,#H'0000
	beq	?L853
	cmp	AL,#H'0002
	bcz	?L843
?L847:
?L853:
	ld	AL,#H'0000
?L843:
?LBE_connectionConvertBtVersion:
	bra	0,X
;# begin scan referenced symbols
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
$_createTaskInstance:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_createTaskInstance ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_createTaskInstance:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_malloc
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L858
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_MessageSend
?L858:
?LBE3:
	ld	AL,@(H'0003,Y)
?LBE_createTaskInstance:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 8 total = 8
;# Function pattern *movqi_fetch_general used[0] = 2 total = 2
;# Function pattern *movqi_store_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_fetch_y_relative used[0] = 7 total = 7
;# Function pattern *movhi_fetch_general used[0] = 3 total = 3
;# Function pattern *movqi_store_general used[0] = 3 total = 3
;# Function pattern *movqi2 used[0] = 11 total = 11
;# Function pattern *movqi2b used[0] = 94 used[1] = 4 total = 98
;# Function pattern *addqi2 used[0] = 2 used[2] = 2 total = 4
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 63 total = 63
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Single pattern tablejump used = 8
;# Function pattern addhi3-2 used[0] = 3 total = 3
;# Function pattern subhi3+1 used[0] = 12 total = 12
;# Function pattern addqi3-2 used[0] = 2 total = 2
;# Function pattern extendhfsf2+2 used[1] = 9 total = 9
;# Function pattern extendhfsf2+3 used[0] = 34 total = 34
;# Function pattern extendhfsf2+4 used[0] = 1 total = 1
;# Function pattern extendhfsf2+5 used[0] = 2 total = 2
	MODULE	dm_acl_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionHandleDmEnAclDetachReq:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmEnAclDetachReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmEnAclDetachReq:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'3006
	bsr	$dostore_AH
	add	AL,#H'0002
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE2:
?LBE_connectionHandleDmEnAclDetachReq:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 3 total = 3
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	dm_baseband_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionHandleReadClassOfDeviceRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadClassOfDeviceRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadClassOfDeviceRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L2
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBB3:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0C23
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE3:
	bra	(?L1)
?L2:
?LBB4:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0025
	bsr	$_MessageSendConditionallyOnTask
?L1:
?LBE4:
?LBE2:
?LBE_connectionHandleReadClassOfDeviceRequest:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadClassOfDeviceComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadClassOfDeviceComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadClassOfDeviceComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB5:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L5
?LBB6:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7009
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L5:
?LBE6:
?LBE5:
?LBE_connectionHandleReadClassOfDeviceComplete:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWritePageScanActivityRequset:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWritePageScanActivityRequset ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWritePageScanActivityRequset:
	st	AL,@(0,Y)
?LBB7:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'0C1C
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0004
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendDmPrim
?LBE7:
?LBE_connectionHandleWritePageScanActivityRequset:
	leavel	#3
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteInquiryScanActivityRequest:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteInquiryScanActivityRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteInquiryScanActivityRequest:
	st	AL,@(0,Y)
?LBB8:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'0C1E
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0004
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendDmPrim
?LBE8:
?LBE_connectionHandleWriteInquiryScanActivityRequest:
	leavel	#3
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciScanEnable 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteScanEnableRequest:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteScanEnableRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteScanEnableRequest:
	st	AL,@(0,Y)
?LBB9:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'0C1A
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0003
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionConvertHciScanEnable
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE9:
?LBE_connectionHandleWriteScanEnableRequest:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteCodRequset:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteCodRequset ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteCodRequset:
	st	AL,@(0,Y)
?LBB10:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'0C24
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0004
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?LBE10:
?LBE_connectionHandleWriteCodRequset:
	leavel	#3
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT $_connectionConvertPageScanMode 0 ; (Non-const ref)
.IMPORT $_connectionConvertPageScanRepMode 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteCachedPageModeRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteCachedPageModeRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteCachedPageModeRequest:
	st	AL,@(0,Y)
?LBB11:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2801
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertPageScanMode
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0001,Y)
	add	AL,#H'0006
	st	AL,@(H'0003,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertPageScanRepMode
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE11:
?LBE_connectionHandleWriteCachedPageModeRequest:
	leavel	#6
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteCachedClkOffsetRequest:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteCachedClkOffsetRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteCachedClkOffsetRequest:
	st	AL,@(0,Y)
?LBB12:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'2802
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE12:
?LBE_connectionHandleWriteCachedClkOffsetRequest:
	leavel	#4
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleClearParamCacheRequest:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleClearParamCacheRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleClearParamCacheRequest:
	st	AL,@(0,Y)
?LBB13:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2803
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE13:
?LBE_connectionHandleClearParamCacheRequest:
	leavel	#4
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteFlushTimeoutRequest:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteFlushTimeoutRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteFlushTimeoutRequest:
	st	AL,@(H'0004,Y)
?LBB14:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L15
?LBB15:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AH,#H'0C28
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0008
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr_t
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	bsr	$_VmSendDmPrim
?L15:
?LBE15:
?LBE14:
?LBE_connectionHandleWriteFlushTimeoutRequest:
	leavel	#8
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleChangeLocalName:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleChangeLocalName ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleChangeLocalName:
	st	AL,@(0,Y)
?LBB16:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'0C13
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'000A
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'000A
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L19
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L28)
?L19:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,#H'0000
?L28:
	bsr	$dostore_AL
	ld	AH,#H'0001
?L25:
	ld	AL,@(H'0001,Y)
	add	AL,@$XAP_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	add	AH,#H'0001
	cmp	AH,#H'0007
	bcz	?L25
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE16:
?LBE_connectionHandleChangeLocalName:
	leavel	#5
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 26 used[1] = 2 total = 28
;# Function pattern *movqi_fetch_general used[0] = 11 total = 11
;# Function pattern *movqi_store_y_relative used[0] = 28 total = 28
;# Function pattern *movqi_fetch_y_relative used[0] = 21 total = 21
;# Function pattern *movhi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 24 total = 24
;# Function pattern *movqi1-framep used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 47 total = 47
;# Function pattern *movqi2b used[0] = 3 used[1] = 1 total = 4
;# Function pattern *addqi2 used[0] = 21 used[2] = 2 used[3] = 10 total = 33
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 16 total = 16
;# Function pattern *call_value1 used[0] = 19 total = 19
;# Function pattern addsi3+1 used[0] = 7 total = 7
;# Function pattern addsi3+2 used[0] = 6 total = 6
;# Function pattern addsi3+3 used[0] = 1 total = 1
;# Function pattern addhi3-2 used[0] = 1 total = 1
;# Function pattern subhi3+1 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 4 total = 4
;# Function pattern addqi3-1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 5 total = 5
	MODULE	dm_dut_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionSendDutCfmToClient:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSendDutCfmToClient ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSendDutCfmToClient:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'703B
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_connectionSendDutCfmToClient:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_ConnectionWriteScanEnable 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSetSecurityMode 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleEnterDutModeReq:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleEnterDutModeReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleEnterDutModeReq:
	st	AL,@(H'0001,Y)
?LBB4:
	ld	AL,#H'0003
	bsr	$_ConnectionWriteScanEnable
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0001)
	bcc	?L5
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_ConnectionSmSetSecurityMode
	bra	(?L4)
?L5:
?LBB5:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'1803
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?L4:
?LBE5:
?LBE4:
?LBE_connectionHandleEnterDutModeReq:
	leavel	#4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_connectionSendDutCfmToClient 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDutSecurityDisabled:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDutSecurityDisabled ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDutSecurityDisabled:
	st	AL,@H'fff8
?LBB6:
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L8
?LBB7:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'1803
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE7:
	bra	(?L7)
?L8:
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	$_connectionSendDutCfmToClient
?L7:
?LBE6:
?LBE_connectionHandleDutSecurityDisabled:
	leavel	#2
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleDutCfm:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDutCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDutCfm:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L12
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bra	(?L14)
?L12:
	ld	AL,@H'fff8
	ld	AH,#H'0001
?L14:
	bsr	$_connectionSendDutCfmToClient
?LBE_connectionHandleDutCfm:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 4 total = 4
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 4 used[1] = 1 total = 5
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 5 total = 5
;# Function pattern *movqi2 used[0] = 17 total = 17
;# Function pattern *movqi2b used[1] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 used[3] = 2 total = 3
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern subhi3+1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 3 total = 3
	MODULE	dm_info_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sendLinkQualityCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendLinkQualityCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendLinkQualityCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7011
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendLinkQualityCfm:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
_sendRssiCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRssiCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRssiCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	cmp	AL,#H'0000
	beq	?L4
?LBB5:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7012
	bsr	$_MessageSend
?L4:
?LBE5:
?LBE4:
?LBE_sendRssiCfm:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
;# end scan referenced symbols
_sendClockOffsetCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendClockOffsetCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendClockOffsetCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	cmp	AL,#H'0000
	beq	?L7
?LBB7:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7016
	bsr	$_MessageSend
?L7:
?LBE7:
?LBE6:
?LBE_sendClockOffsetCfm:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
.IMPORT $_memmove 0 ; (Non-const ref)
;# end scan referenced symbols
_sendRemoteSupportedFeaturesCfm:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRemoteSupportedFeaturesCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRemoteSupportedFeaturesCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	cmp	AL,#H'0000
	beq	?L10
?LBB9:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L12
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'ffff
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	bra	(?L13)
?L12:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L13:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7013
	bsr	$_MessageSend
?L10:
?LBE9:
?LBE8:
?LBE_sendRemoteSupportedFeaturesCfm:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadAddrRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadAddrRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadAddrRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB10:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L17
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBB11:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'1009
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE11:
	bra	(?L16)
?L17:
?LBB12:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0031
	bsr	$_MessageSendConditionallyOnTask
?L16:
?LBE12:
?LBE10:
?LBE_connectionHandleReadAddrRequest:
	leavel	#7
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadBdAddrComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadBdAddrComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadBdAddrComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB13:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L20
?LBB14:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7010
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L20:
?LBE14:
?LBE13:
?LBE_connectionHandleReadBdAddrComplete:
	leavel	#6
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
.IMPORT _sendLinkQualityCfm 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadLinkQualityRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLinkQualityRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLinkQualityRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB15:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L24
?LBB16:
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L25
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendLinkQualityCfm
	bra	(?L23)
?L25:
?LBB17:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AH,#H'1403
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE17:
?LBE16:
	bra	(?L23)
?L24:
?LBB18:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0032
	bsr	$_MessageSendConditionallyOnTask
?L23:
?LBE18:
?LBE15:
?LBE_connectionHandleReadLinkQualityRequest:
	leavel	#13
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadLinkQualityComplete:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLinkQualityComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLinkQualityComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	_sendLinkQualityCfm
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE_connectionHandleReadLinkQualityComplete:
	leavel	#7
;# begin scan referenced symbols
.IMPORT _sendRssiCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadRssiRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRssiRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRssiRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB19:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L32
?LBB20:
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L33
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendRssiCfm
	bra	(?L31)
?L33:
?LBB21:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AH,#H'1405
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE21:
?LBE20:
	bra	(?L31)
?L32:
?LBB22:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0033
	bsr	$_MessageSendConditionallyOnTask
?L31:
?LBE22:
?LBE19:
?LBE_connectionHandleReadRssiRequest:
	leavel	#13
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadRssiComplete:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRssiComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRssiComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	_sendRssiCfm
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE_connectionHandleReadRssiComplete:
	leavel	#7
;# begin scan referenced symbols
.IMPORT _sendClockOffsetCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadclkOffsetRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadclkOffsetRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadclkOffsetRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB23:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L40
?LBB24:
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L41
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendClockOffsetCfm
	bra	(?L39)
?L41:
?LBB25:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AH,#H'041F
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE25:
?LBE24:
	bra	(?L39)
?L40:
?LBB26:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0034
	bsr	$_MessageSendConditionallyOnTask
?L39:
?LBE26:
?LBE23:
?LBE_connectionHandleReadclkOffsetRequest:
	leavel	#13
;.stabn	192,0,0,?LBB24
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;.stabn	224,0,0,?LBE24
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadClkOffsetComplete:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadClkOffsetComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadClkOffsetComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	_sendClockOffsetCfm
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE_connectionHandleReadClkOffsetComplete:
	leavel	#7
;# begin scan referenced symbols
.IMPORT _sendRemoteSupportedFeaturesCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadRemoteSupportedFeaturesRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRemoteSupportedFeaturesRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRemoteSupportedFeaturesRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB27:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L48
?LBB28:
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L49
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendRemoteSupportedFeaturesCfm
	bra	(?L47)
?L49:
?LBB29:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AH,#H'041B
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE29:
?LBE28:
	bra	(?L47)
?L48:
?LBB30:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0036
	bsr	$_MessageSendConditionallyOnTask
?L47:
?LBE30:
?LBE27:
?LBE_connectionHandleReadRemoteSupportedFeaturesRequest:
	leavel	#13
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	224,0,0,?LBE28
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadRemoteSupportedFeaturesCfm:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRemoteSupportedFeaturesCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRemoteSupportedFeaturesCfm:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L55
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	_sendRemoteSupportedFeaturesCfm
?L55:
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
?LBE_connectionHandleReadRemoteSupportedFeaturesCfm:
	leavel	#6
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadLocalVersionRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLocalVersionRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLocalVersionRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB31:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L58
?LBB32:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'1001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE32:
	bra	(?L57)
?L58:
?LBB33:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0037
	bsr	$_MessageSendConditionallyOnTask
?L57:
?LBE33:
?LBE31:
?LBE_connectionHandleReadLocalVersionRequest:
	leavel	#7
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
;# begin scan referenced symbols
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
.IMPORT $_connectionConvertHciVersion 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadLocalVersionCfm:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLocalVersionCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLocalVersionCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB34:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L62
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0003
	bcz	?L63
?LBB35:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0002
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0035
	bra	(?L66)
?L63:
	ld	AL,@(H'0001,Y)
?LBE35:
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,#H'0040
	bsr	$_connectionSendInternalInitCfm
	bra	(?L65)
?L62:
?LBB36:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciVersion
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0003
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7014
?L66:
	bsr	$_MessageSend
?L65:
?LBE36:
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
?LBE34:
?LBE_connectionHandleReadLocalVersionCfm:
	leavel	#8
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadRemoteVersionRequest:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRemoteVersionRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRemoteVersionRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB37:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L70
?LBB38:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L71
?LBB39:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0002
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7015
	bsr	$_MessageSend
?LBE39:
	bra	(?L69)
?L71:
?LBB40:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	st	AL,@H'fffc
	ld	AL,#H'041D
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0007
	bsr	$dostore_AH
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0008,Y)
	bsr	$_VmSendDmPrim
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE40:
?LBE38:
	bra	(?L69)
?L70:
?LBB41:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0038
	bsr	$_MessageSendConditionallyOnTask
?L69:
?LBE41:
?LBE37:
?LBE_connectionHandleReadRemoteVersionRequest:
	leavel	#12
;.stabn	192,0,0,?LBB38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;.stabn	224,0,0,?LBE38
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadRemoteVersionCfm:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRemoteVersionCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRemoteVersionCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB42:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7015
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
?LBE42:
?LBE_connectionHandleReadRemoteVersionCfm:
	leavel	#6
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSetBtVersionReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetBtVersionReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetBtVersionReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB43:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L78
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB44:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0002
	bsr	$dostore_AH
	ld	AH,#H'0001
	add	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?LBE44:
	bra	(?L77)
?L78:
?LBB45:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0035
	bsr	$_MessageSendConditionallyOnTask
?L77:
?LBE45:
?LBE43:
?LBE_connectionHandleSetBtVersionReq:
	leavel	#7
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;# begin scan referenced symbols
.IMPORT $_connectionConvertBtVersion 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSetBtVersionCfm:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetBtVersionCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetBtVersionCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB46:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L82
	bsr	$_connectionGetCmTask
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L83
	ld	AL,#H'0040
	bsr	$_connectionSendInternalInitCfm
	bra	(?L82)
?L83:
?LBB47:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertBtVersion
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7017
	bsr	$_MessageSend
?L82:
?LBE47:
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE46:
?LBE_connectionHandleSetBtVersionCfm:
	leavel	#7
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
;# begin scan referenced symbols
.IMPORT $_connectionGetMsgFilter 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDmHciModeChangeEvent:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmHciModeChangeEvent ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmHciModeChangeEvent:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB48:
	bsr	$_connectionGetMsgFilter
	ld	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L87
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L87
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L87
	ld	AH,@(H'0002,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L90
	cmp	AL,#H'0002
	bne	?L87
?L90:
?LBB49:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L92
	cmp	AL,#H'0002
	beq	?L93
	bra	(?L94)
?L92:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	ld	AL,#H'0000
	bra	(?L96)
?L93:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	ld	AL,#H'0001
?L96:
	bsr	$dostore_AL
	bra	(?L91)
?L94:
	bsr	$_Panic
?L91:
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'703C
	bsr	$_MessageSend
?L87:
?LBE49:
?LBE48:
?LBE_connectionHandleDmHciModeChangeEvent:
	leavel	#6
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	224,0,0,?LBE48
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 85 used[1] = 8 total = 93
;# Function pattern *movqi_fetch_general used[0] = 54 total = 54
;# Function pattern *movqi_store_y_relative used[0] = 110 used[1] = 5 total = 115
;# Function pattern *movqi_fetch_y_relative used[0] = 86 total = 86
;# Function pattern *movqi_store_general used[0] = 55 total = 55
;# Function pattern *movqi2 used[0] = 99 total = 99
;# Function pattern *movqi2b used[0] = 4 used[1] = 1 total = 5
;# Function pattern *addqi0-framep used[0] = 10 total = 10
;# Function pattern *addqi2 used[0] = 60 used[2] = 10 used[3] = 17 total = 87
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 20 total = 20
;# Function pattern *call1 used[0] = 44 total = 44
;# Function pattern *call_value1 used[0] = 56 total = 56
;# Function pattern addsi3+1 used[0] = 27 total = 27
;# Function pattern addsi3+2 used[0] = 20 total = 20
;# Function pattern addsi3+3 used[0] = 6 total = 6
;# Function pattern addhi3-2 used[0] = 6 total = 6
;# Function pattern addqi3-2 used[0] = 5 total = 5
;# Function pattern extendhfsf2+3 used[0] = 31 total = 31
	MODULE	dm_info_local_version
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionReadLocalVersion:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionReadLocalVersion ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionReadLocalVersion:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0037
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionReadLocalVersion:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	dm_inquiry_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_BdaddrSetZero 0 ; (Non-const ref)
.IMPORT $_connectionConvertPageScanRepMode_t 0 ; (Non-const ref)
.IMPORT $_connectionConvertPageScanMode_t 0 ; (Non-const ref)
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_inquirySendResult:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_inquirySendResult ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_inquirySendResult:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,@(H'000F,Y)
?LBB3:
	add	AL,#H'000D
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L3
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0008,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0008,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	bra	(?L4)
?L3:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	bsr	$_BdaddrSetZero
?L4:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	bsr	$dostore32_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'000B,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@(H'0004,Y)
	ld	AL,@(H'000C,Y)
	bsr	$_connectionConvertPageScanRepMode_t
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_connectionConvertPageScanMode_t
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	ld	AL,@(H'000E,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	ld	AH,@(H'000F,Y)
	bsr	$dostore_AH
	cmp	AH,#H'0000
	beq	?L5
	ld	AL,@(H'0003,Y)
	add	AL,#H'000C
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_memmove
	bra	(?L6)
?L5:
	ld	AL,@(H'0003,Y)
	add	AL,#H'000C
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L6:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7005
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_inquirySendResult:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_realloc 0 ; (Non-const ref)
;# end scan referenced symbols
_inquiryAddEirData:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_inquiryAddEirData ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_inquiryAddEirData:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
?LBB4:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@(H'0005,Y)
	add	AH,@$XAP_UXL
	bsr	$_realloc
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AL,@$XAP_AH
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0005,Y)
	add	AH,@$XAP_AL
	bsr	$dostore_AH
?LBE4:
	ld	AL,@(H'0002,Y)
?LBE_inquiryAddEirData:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_VmGetPointerFromHandle 0 ; (Non-const ref)
.IMPORT _inquiryAddEirData 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
;# end scan referenced symbols
_inquiryParseEir:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_inquiryParseEir ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_inquiryParseEir:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB5:
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AH,@(H'000A,Y)
	st	AL,@H'fffc
	bsr	$dostore_AH
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L11
	ld	AH,#H'0020
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0007,Y)
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AH,#H'0000
	st	AH,@(H'0009,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0008,Y)
	add	AL,@$XAP_AH
	cmp	AL,#H'0028
	bcz	?L13
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
?L13:
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L15
?L28:
	ld	AH,@(H'0008,Y)
	cmp	AH,@(H'0005,Y)
	bcc	?L17
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'0000
	beq	?L19
	ld	AH,@(H'0009,Y)
	cmp	AH,#H'0000
	bne	?L18
?L19:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'000A,Y)
	bsr	_inquiryAddEirData
	st	AL,@(H'000A,Y)
?L18:
	ld	AL,@(H'0005,Y)
	sub	AL,@(H'0008,Y)
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0006,Y)
	add	AH,@(H'0008,Y)
	st	AH,@(H'0006,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AH,#H'0000
	st	AH,@(H'0009,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0008,Y)
	add	AL,@$XAP_AH
	cmp	AL,#H'0028
	bcz	?L14
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
	bra	(?L14)
?L17:
	ld	AH,@(H'000E,Y)
	cmp	AH,#H'0000
	beq	?L23
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	bne	?L22
?L23:
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'000A,Y)
	bsr	_inquiryAddEirData
	st	AL,@(H'000A,Y)
?L22:
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	add	AL,@$XAP_AH
	st	AL,@(H'000B,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L15
	ld	AL,@(H'0007,Y)
	bsr	$_free
	ld	AH,@(H'0008,Y)
	sub	AH,@(H'0005,Y)
	st	AH,@(H'0008,Y)
	ld	AL,#H'0020
	st	AL,@(H'0005,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0007,Y)
	ld	AH,@$XAP_AL
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	bne	?L14
	st	AH,@H'fffc
	bsr	$dofetch_AH
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,@$XAP_AH
	cmp	AL,#H'0028
	bcz	?L14
	ld	AH,#H'0001
	st	AH,@(H'0009,Y)
?L14:
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L28
?L15:
	ld	AL,@(H'0007,Y)
	bsr	$_free
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,@(H'000A,Y)
	bsr	$dofetch_AH
	bsr	$_realloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'000A,Y)
	add	AL,@$XAP_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#-H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,@(H'000A,Y)
?L11:
?LBE5:
	ld	AL,@$XAP_AH
?LBE_inquiryParseEir:
	leavel	#14
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleInquiryStart:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInquiryStart ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInquiryStart:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB6:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L44
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	add	AH,#H'0005
	st	AH,@(H'0004,Y)
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L48
	cmp	AL,#H'0000
	beq	?L45
?L48:
?LBB7:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0C05
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0009
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0006
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?L45:
?LBE7:
?LBB8:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0401
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0006
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?LBE8:
	bra	(?L43)
?L44:
?LBB9:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0005,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0002,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0003
	bsr	$_MessageSendConditionallyOnTask
?L43:
?LBE9:
?LBE6:
?LBE_connectionHandleInquiryStart:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
.IMPORT _inquirySendResult 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleInquiryResult:
	enterl	#23
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInquiryResult ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInquiryResult:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
?LBB10:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	st	AH,@(H'0011,Y)
	ld	AL,#H'0000
	st	AL,@(H'000F,Y)
	bsr	$dofetch_AL
	add	AL,#H'0002
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,#H'0000
	cmp	AH,@$XAP_AL
	bcc	?L62
?L60:
?LBB11:
	ld	AL,#H'0003
	st	AL,@(H'0012,Y)
	ld	AL,@(H'000E,Y)
	add	AL,@(H'000F,Y)
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0013,Y)
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0003
	bcc	?L54
	st	AH,@(H'0012,Y)
?L54:
	ld	AH,#H'0000
	st	AH,@(H'0010,Y)
	cmp	AH,@(H'0012,Y)
	bcc	?L64
?L59:
?LBB12:
	ld	AL,@(H'0010,Y)
	smult	#H'000A
	ld	AH,@(H'0013,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0014,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'0014,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0014,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0014,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0014,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	st	AL,@H'ffff
	ld	AL,#H'7FFF
	st	AL,@(H'0006,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@H'ffff
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_inquirySendResult
	ld	AL,@(H'0010,Y)
?LBE12:
	add	AL,#H'0001
	st	AL,@(H'0010,Y)
	cmp	AL,@(H'0012,Y)
	bcs	?L59
?L64:
	ld	AL,@(H'0013,Y)
	bsr	$_free
	ld	AH,@(H'000F,Y)
?LBE11:
	add	AH,#H'0001
	st	AH,@(H'000F,Y)
	ld	AL,@(H'000E,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0002
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,@(H'000F,Y)
	cmp	AH,@$XAP_AL
	bcs	?L60
?L62:
?LBE10:
?LBE_connectionHandleInquiryResult:
	leavel	#23
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleInquiryResultWithRssi:
	enterl	#23
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInquiryResultWithRssi ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInquiryResultWithRssi:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
?LBB13:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	st	AH,@(H'0011,Y)
	ld	AL,#H'0000
	st	AL,@(H'000F,Y)
	bsr	$dofetch_AL
	add	AL,#H'0002
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,#H'0000
	cmp	AH,@$XAP_AL
	bcc	?L83
?L81:
?LBB14:
	ld	AL,#H'0003
	st	AL,@(H'0012,Y)
	ld	AL,@(H'000E,Y)
	add	AL,@(H'000F,Y)
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0013,Y)
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0003
	bcc	?L75
	st	AH,@(H'0012,Y)
?L75:
	ld	AH,#H'0000
	st	AH,@(H'0010,Y)
	cmp	AH,@(H'0012,Y)
	bcc	?L85
?L80:
?LBB15:
	ld	AL,@(H'0010,Y)
	smult	#H'000A
	ld	AH,@(H'0013,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0014,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'0014,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0014,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0014,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0014,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0006,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@H'ffff
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_inquirySendResult
	ld	AL,@(H'0010,Y)
?LBE15:
	add	AL,#H'0001
	st	AL,@(H'0010,Y)
	cmp	AL,@(H'0012,Y)
	bcs	?L80
?L85:
	ld	AL,@(H'0013,Y)
	bsr	$_free
	ld	AH,@(H'000F,Y)
?LBE14:
	add	AH,#H'0001
	st	AH,@(H'000F,Y)
	ld	AL,@(H'000E,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0002
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,@(H'000F,Y)
	cmp	AH,@$XAP_AL
	bcs	?L81
?L83:
?LBE13:
?LBE_connectionHandleInquiryResultWithRssi:
	leavel	#23
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
.IMPORT _inquiryParseEir 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleExtendedInquiryResult:
	enterl	#19
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleExtendedInquiryResult ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleExtendedInquiryResult:
	st	AL,@(H'000E,Y)
	st	AH,@(H'000F,Y)
?LBB16:
	add	AH,#H'000D
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_inquiryParseEir
	st	AL,@(H'0010,Y)
	ld	AH,@(H'000F,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'000A+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'000A+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000F,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000F,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000F,Y); movqi2b+1 peephole
	add	AL,#H'000C
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0008,Y)
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_inquirySendResult
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L91
	ld	AL,@(H'0010,Y)
	bsr	$_free
?L91:
?LBE16:
?LBE_connectionHandleExtendedInquiryResult:
	leavel	#19
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleInquiryComplete:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInquiryComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInquiryComplete:
	st	AL,@(H'0009,Y)
?LBB17:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'7FFF
	st	AL,@(H'0006,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@H'ffff
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0000
	bsr	_inquirySendResult
	st	X,@H'ffff
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBB18:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0C05
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0009
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE18:
?LBE17:
?LBE_connectionHandleInquiryComplete:
	leavel	#12
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleInquiryCancel:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInquiryCancel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInquiryCancel:
	st	AH,@H'fff8
?LBB19:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L96
	ld	AH,@$XAP_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L95
?LBB20:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0402
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE20:
	bra	(?L95)
?L96:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'7FFF
	st	AL,@(H'0006,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0000
	bsr	_inquirySendResult
?L95:
?LBE19:
?LBE_connectionHandleInquiryCancel:
	leavel	#11
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadRemoteName:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRemoteName ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRemoteName:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@$XAP_AL
?LBB21:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L102
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB22:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AH,#H'0419
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0009
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
?LBE22:
	bra	(?L101)
?L102:
?LBB23:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'0005
	bsr	$_MessageSendConditionallyOnTask
?L101:
?LBE23:
?LBE21:
?LBE_connectionHandleReadRemoteName:
	leavel	#8
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;# begin scan referenced symbols
;# end scan referenced symbols
_remoteNameComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_remoteNameComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_remoteNameComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB24:
	cmp	AL,#H'0000
	beq	?L106
	ld	AL,@(H'0008,Y)
?LBB25:
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L107
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	bra	(?L108)
?L107:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	bsr	$_BdaddrSetZero
?L108:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	cmp	AL,#H'0000
	beq	?L109
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_memmove
	ld	AL,@(H'0007,Y)
	bsr	$_free
	bra	(?L110)
?L109:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L110:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7006
	bsr	$_MessageSend
?LBE25:
	bra	(?L105)
?L106:
	ld	AH,@(H'0008,Y)
	cmp	AH,#H'0000
	beq	?L105
	ld	AL,@(H'0007,Y)
	bsr	$_free
?L105:
?LBE24:
?LBE_remoteNameComplete:
	leavel	#6
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
.IMPORT _remoteNameComplete 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRemoteNameComplete:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRemoteNameComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRemoteNameComplete:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB26:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0008,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L118
	ld	AL,@(H'0008,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L118
?LBB27:
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'000B,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
?L124:
	ld	AL,@(H'000B,Y)
	add	AL,@(H'0009,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L120
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@(H'0009,Y)
	cmp	AL,#H'001E
	bcz	?L124
?L120:
	ld	AL,@(H'000B,Y)
	add	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
?L130:
	ld	AL,@(H'0008,Y)
	add	AL,@(H'000A,Y)
	add	AL,#H'0007
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L127
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L127:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0001
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0007
	bcz	?L130
	ld	AL,@(H'0008,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y)
	bra	(?L135)
?L118:
	ld	AL,@(H'0008,Y)
?LBE27:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
?L135:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_remoteNameComplete
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE26:
?LBE_connectionHandleRemoteNameComplete:
	leavel	#14
;.stabn	192,0,0,?LBB26
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;.stabn	224,0,0,?LBE26
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadLocalName:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLocalName ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLocalName:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@$XAP_AL
?LBB28:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L143
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB29:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0C14
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE29:
	bra	(?L142)
?L143:
?LBB30:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'0006
	bsr	$_MessageSendConditionallyOnTask
?L142:
?LBE30:
?LBE28:
?LBE_connectionHandleReadLocalName:
	leavel	#7
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;# begin scan referenced symbols
;# end scan referenced symbols
_localNameComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_localNameComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_localNameComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB31:
	cmp	AL,#H'0000
	beq	?L147
	ld	AL,@(H'0007,Y)
?LBB32:
	add	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	cmp	AL,#H'0000
	beq	?L148
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	bsr	$_free
	bra	(?L149)
?L148:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L149:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7007
	bsr	$_MessageSend
?LBE32:
	bra	(?L146)
?L147:
	ld	AH,@(H'0007,Y)
	cmp	AH,#H'0000
	beq	?L146
	ld	AL,@(H'0006,Y)
	bsr	$_free
?L146:
?LBE31:
?LBE_localNameComplete:
	leavel	#6
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;# begin scan referenced symbols
.IMPORT _localNameComplete 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleLocalNameComplete:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleLocalNameComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleLocalNameComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
?LBB33:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L156
	ld	AL,@$XAP_AH
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L156
?LBB34:
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L162:
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L158
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'001E
	bcz	?L162
?L158:
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
?L168:
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L165
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L165:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0007
	bcz	?L168
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0001,Y)
	bra	(?L173)
?L156:
	ld	AL,@(H'0003,Y)
?LBE34:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
?L173:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_localNameComplete
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE33:
?LBE_connectionHandleLocalNameComplete:
	leavel	#9
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteInquiryTx:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteInquiryTx ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteInquiryTx:
?LBB35:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L180
?LBB36:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'7021
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0003
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendDmPrim
?L180:
?LBE36:
?LBE35:
?LBE_connectionHandleWriteInquiryTx:
	leavel	#2
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadInquiryTx:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadInquiryTx ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadInquiryTx:
	st	AH,@(H'0002,Y)
?LBB37:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L184
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L185
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB38:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'7020
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE38:
	bra	(?L183)
?L185:
?LBB39:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_MessageSendConditionallyOnTask
?LBE39:
	bra	(?L183)
?L184:
?LBB40:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0011
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7008
	bsr	$_MessageSend
?L183:
?LBE40:
?LBE37:
?LBE_connectionHandleReadInquiryTx:
	leavel	#6
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadInquiryTxComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadInquiryTxComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadInquiryTxComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB41:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L191
?LBB42:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7008
	bsr	$_MessageSend
?L191:
?LBE42:
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE41:
?LBE_connectionHandleReadInquiryTxComplete:
	leavel	#6
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;# begin scan referenced symbols
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteIacLapRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteIacLapRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteIacLapRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB43:
	add	AL,#H'0002
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L194
?LBB44:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AH,#H'0C3A
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0009
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,@$XAP_AL
	bsr	$_malloc
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'fffb
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@H'fff9
	cmp	AH,@$XAP_AL
	bcc	?L202
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffa
?L199:
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,@H'fff9
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,@H'fff8
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,@H'fffb
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@H'fff9
	cmp	AH,@$XAP_AL
	bcs	?L199
?L202:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@(H'0008,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0005,Y)
	bsr	$_VmSendDmPrim
?LBE44:
	bra	(?L193)
?L194:
	ld	AH,@(H'0003,Y)
?LBB45:
	add	AH,#H'0001
	st	AH,@(H'000A,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,@$XAP_AL
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,@$XAP_AL
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_memmove
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,#H'002F
	bsr	$_MessageSendConditionallyOnTask
?L193:
?LBE45:
?LBE43:
?LBE_connectionHandleWriteIacLapRequest:
	leavel	#13
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteIacLapComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteIacLapComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteIacLapComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB46:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L207
	st	AH,@H'fffc
	ld	AL,#H'0000
	bra	(?L209)
?L207:
	st	AH,@H'fffc
	ld	AL,#H'0001
?L209:
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'703D
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE46:
?LBE_connectionHandleWriteIacLapComplete:
	leavel	#6
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;# begin scan referenced symbols
.IMPORT $_connectionConvertInquiryMode_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteInquiryModeRequest:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteInquiryModeRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteInquiryModeRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB47:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L212
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB48:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AH,#H'700B
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0003
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertInquiryMode_t
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
?LBE48:
	bra	(?L211)
?L212:
?LBB49:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0009
	bsr	$_MessageSendConditionallyOnTask
?L211:
?LBE49:
?LBE47:
?LBE_connectionHandleWriteInquiryModeRequest:
	leavel	#9
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteInquiryModeComplete:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteInquiryModeComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteInquiryModeComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB50:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fff8
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L216
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L216:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_fff9; movqi_fetch_general+2 peephole
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'703E
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE50:
?LBE_connectionHandleWriteInquiryModeComplete:
	leavel	#5
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadInquiryModeRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadInquiryModeRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadInquiryModeRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB51:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L219
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB52:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'700A
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE52:
	bra	(?L218)
?L219:
?LBB53:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'000A
	bsr	$_MessageSendConditionallyOnTask
?L218:
?LBE53:
?LBE51:
?LBE_connectionHandleReadInquiryModeRequest:
	leavel	#7
;.stabn	192,0,0,?LBB52
;.stabn	224,0,0,?LBE52
;.stabn	192,0,0,?LBB53
;.stabn	224,0,0,?LBE53
;# begin scan referenced symbols
.IMPORT $_connectionConvertInquiryMode 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadInquiryModeComplete:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadInquiryModeComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadInquiryModeComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB54:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L223
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L223:
	st	AH,@H'fffc
	bsr	$dostore_fff8
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertInquiryMode
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'703F
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE54:
?LBE_connectionHandleReadInquiryModeComplete:
	leavel	#7
;.stabn	192,0,0,?LBB54
;.stabn	224,0,0,?LBE54
;# begin scan referenced symbols
.IMPORT $_memset 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteEirDataRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteEirDataRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteEirDataRequest:
	st	AH,@(H'0001,Y)
?LBB55:
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L226
?LBB56:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AL,#H'7018
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'000B
	bsr	$dostore_AH
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AH
	st	AH,@(H'0005,Y)
	cmp	AH,#H'00F0
	bcz	?L227
	ld	AL,#H'00F0
	st	AL,@(H'0005,Y)
?L227:
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	lsr	#H'0005
	ld	AL,#H'0000
	cmp	AL,@$XAP_AH
	bcc	?L241
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@(H'0007,Y)
?L232:
	ld	AL,#H'0020
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	AL,@(H'0004,Y)
	add	AH,@$XAP_AL
	ld	AL,#H'0020
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y); movqi2b+1 peephole
	bsr	$_memmove
	ld	AH,@(H'0004,Y)
	add	AH,#H'0020
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	lsr	#H'0005
	ld	AL,@(H'0002,Y)
	cmp	AL,@$XAP_AH
	bcs	?L232
?L241:
	ld	AH,@(H'0005,Y)
	and	AH,#H'001F
	st	AH,@(H'0009,Y)
	cmp	AH,#H'0000
	beq	?L233
	ld	AL,#H'0020
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,@(H'0004,Y)
	add	AH,@$XAP_AL
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_memmove
	ld	AH,#H'0020
	sub	AH,@(H'0009,Y)
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0002,Y)
?L233:
	ld	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'0007)
	bcc	?L243
?L238:
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0002,Y)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0007
	bcz	?L238
?L243:
	ld	AL,@(H'0006,Y)
	bsr	$_VmSendDmPrim
?L226:
	ld	AH,@(H'0001,Y)
?LBE56:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L225
	bsr	$_free
?L225:
?LBE55:
?LBE_connectionHandleWriteEirDataRequest:
	leavel	#13
;.stabn	192,0,0,?LBB55
;.stabn	192,0,0,?LBB56
;.stabn	224,0,0,?LBE56
;.stabn	224,0,0,?LBE55
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadEirDataRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadEirDataRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadEirDataRequest:
	st	AH,@(H'0002,Y)
?LBB57:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L252
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L253
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB58:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'7017
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE58:
	bra	(?L251)
?L253:
?LBB59:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'000C
	bsr	$_MessageSendConditionallyOnTask
?LBE59:
	bra	(?L251)
?L252:
?LBB60:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0011
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7040
	bsr	$_MessageSend
?L251:
?LBE60:
?LBE57:
?LBE_connectionHandleReadEirDataRequest:
	leavel	#6
;.stabn	192,0,0,?LBB58
;.stabn	224,0,0,?LBE58
;.stabn	192,0,0,?LBB59
;.stabn	224,0,0,?LBE59
;.stabn	192,0,0,?LBB60
;.stabn	224,0,0,?LBE60
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadEirDataComplete:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadEirDataComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadEirDataComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB61:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L259
?LBB62:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	add	AH,#H'0004
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_inquiryParseEir
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'0003
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0004,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7040
	bsr	$_MessageSend
	ld	AL,@(H'0004,Y)
	bsr	$_free
?L259:
?LBE62:
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBE61:
?LBE_connectionHandleReadEirDataComplete:
	leavel	#8
;.stabn	192,0,0,?LBB62
;.stabn	224,0,0,?LBE62
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 133 used[1] = 6 total = 139
;# Function pattern *movqi_fetch_general used[0] = 78 total = 78
;# Function pattern *movqi_store_y_relative used[0] = 202 used[1] = 27 total = 229
;# Function pattern *movqi_fetch_y_relative used[0] = 197 total = 197
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[0] = 3 used[2] = 2 total = 5
;# Function pattern *movhi_fetch_general used[0] = 8 total = 8
;# Function pattern *movhi_store_general used[0] = 2 used[1] = 3 total = 5
;# Function pattern *movqi_store_general used[0] = 74 total = 74
;# Function pattern *movqi2 used[0] = 152 total = 152
;# Function pattern *movqi2b used[0] = 32 used[1] = 11 total = 43
;# Function pattern *addqi0-framep used[0] = 10 total = 10
;# Function pattern *addqi2 used[0] = 149 used[2] = 13 used[3] = 28 total = 190
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 3 total = 3
;# Function pattern *udivqi3_const used[0] = 4 total = 4
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 4 total = 4
;# Function pattern jump used[0] = 22 total = 22
;# Function pattern *call1 used[0] = 58 total = 58
;# Function pattern *call_value1 used[0] = 78 total = 78
;# Function pattern addsi3+1 used[0] = 36 total = 36
;# Function pattern addsi3+2 used[0] = 21 total = 21
;# Function pattern addsi3+3 used[0] = 5 total = 5
;# Function pattern addhi3-2 used[0] = 5 total = 5
;# Function pattern addhi3-1 used[0] = 2 total = 2
;# Function pattern subhi3+1 used[0] = 9 total = 9
;# Function pattern subhi3+2 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 10 total = 10
;# Function pattern addqi3-1 used[0] = 4 total = 4
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 73 total = 73
;# Function pattern extendhfsf2+4 used[0] = 1 total = 1
	MODULE	dm_link_policy_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sendRoleCfmToClient:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRoleCfmToClient ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRoleCfmToClient:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@H'fffc
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7001
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendRoleCfmToClient:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT $_connectionConvertHciRole_t 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
_sendSetRoleRequest:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendSetRoleRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendSetRoleRequest:
	st	AH,@(H'0004,Y)
?LBB4:
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L5
?LBB5:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AL,#H'080B
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0002
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0004,Y)
	bsr	$_connectionConvertHciRole_t
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0005,Y)
	bsr	$_VmSendDmPrim
	ld	AL,#H'0001
	bra	(?L4)
?L5:
?LBE5:
	ld	AL,#H'0000
?L4:
?LBE4:
?LBE_sendSetRoleRequest:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
_sendGetRoleRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendGetRoleRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendGetRoleRequest:
?LBB6:
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L9
?LBB7:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'0809
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
	ld	AL,#H'0001
	bra	(?L8)
?L9:
?LBE7:
	ld	AL,#H'0000
?L8:
?LBE6:
?LBE_sendGetRoleRequest:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
;# end scan referenced symbols
_setLinkSupervisionTimeout:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_setLinkSupervisionTimeout ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_setLinkSupervisionTimeout:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB8:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AL,#H'0C37
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0008
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	bsr	$_VmSendDmPrim
?LBE8:
?LBE_setLinkSupervisionTimeout:
	leavel	#5
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
_processPowerTable:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_processPowerTable ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_processPowerTable:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB9:
	ld	AL,@$XAP_AH
	smult	#H'0006
	st	AL,@(H'0004,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_memmove
?LBB10:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AL,#H'7900
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0005,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0005,Y)
	bsr	$_VmSendDmPrim
?LBE10:
?LBE9:
?LBE_processPowerTable:
	leavel	#9
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT _sendSetRoleRequest 0 ; (Non-const ref)
.IMPORT $_connectionGetAppTask 0 ; (Non-const ref)
.IMPORT _sendRoleCfmToClient 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleLinkPolicySetRoleReq:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleLinkPolicySetRoleReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleLinkPolicySetRoleReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB11:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L15
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendSetRoleRequest
	cmp	AL,#H'0000
	bne	?L16
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_AL
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0002
	bsr	_sendRoleCfmToClient
	bra	(?L14)
?L16:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L14)
?L15:
?LBB12:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0059
	bsr	$_MessageSendConditionallyOnTask
?L14:
?LBE12:
?LBE11:
?LBE_connectionHandleLinkPolicySetRoleReq:
	leavel	#9
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
.IMPORT _sendGetRoleRequest 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleLinkPolicyGetRoleReq:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleLinkPolicyGetRoleReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleLinkPolicyGetRoleReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB13:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L22
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_sendGetRoleRequest
	cmp	AL,#H'0000
	bne	?L23
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0002
	bsr	_sendRoleCfmToClient
	bra	(?L21)
?L23:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L21)
?L22:
?LBB14:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'005A
	bsr	$_MessageSendConditionallyOnTask
?L21:
?LBE14:
?LBE13:
?LBE_connectionHandleLinkPolicyGetRoleReq:
	leavel	#8
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
.IMPORT $_connectionConvertHciRole 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDmSwitchRoleComplete:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmSwitchRoleComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmSwitchRoleComplete:
	st	AH,@(H'0006,Y)
?LBB15:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L29
	bsr	$_connectionGetAppTask
	st	AL,@(H'0007,Y)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0008,Y)
	ld	AL,@(H'000E,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciRole
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0008,Y)
	bsr	_sendRoleCfmToClient
	st	X,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bra	(?L28)
?L29:
?LBB16:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	ld	AL,@(H'000E,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0009,Y)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciRole
	st	AL,@(H'000A,Y)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'000B,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0009,Y)
	bsr	$dostore_AH
	ld	AL,@(H'000B,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,@(H'000A,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0002,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetAppTask
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	ld	AH,#H'7002
	bsr	$_MessageSend
?L28:
?LBE16:
?LBE15:
?LBE_connectionHandleDmSwitchRoleComplete:
	leavel	#14
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRoleDiscoveryComplete:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRoleDiscoveryComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRoleDiscoveryComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L32
	bsr	$_connectionGetAppTask
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciRole
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	_sendRoleCfmToClient
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L32:
?LBE_connectionHandleRoleDiscoveryComplete:
	leavel	#8
;# begin scan referenced symbols
.IMPORT _setLinkSupervisionTimeout 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSetLinkSupervisionTimeoutReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetLinkSupervisionTimeoutReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetLinkSupervisionTimeoutReq:
	st	AL,@(H'0004,Y)
?LBB17:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L35
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_setLinkSupervisionTimeout
?L35:
?LBE17:
?LBE_connectionHandleSetLinkSupervisionTimeoutReq:
	leavel	#7
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleLinkSupervisionTimeoutInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleLinkSupervisionTimeoutInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleLinkSupervisionTimeoutInd:
	st	AL,@(H'0001,Y)
?LBB18:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'0001,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetAppTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'7003
	bsr	$_MessageSend
?LBE18:
?LBE_connectionHandleLinkSupervisionTimeoutInd:
	leavel	#5
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
.IMPORT _processPowerTable 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSetLinkPolicyReq:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetLinkPolicyReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetLinkPolicyReq:
	st	AL,@(H'0005,Y)
?LBB19:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L39
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'0005,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_processPowerTable
?L39:
?LBE19:
?LBE_connectionHandleSetLinkPolicyReq:
	leavel	#8
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionLinkPolicyHandleWritePowerStatesCfm:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionLinkPolicyHandleWritePowerStatesCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionLinkPolicyHandleWritePowerStatesCfm:
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L42
	cmp	AL,#H'0002
	beq	?L42
	bsr	$_Panic
?L42:
?LBE_connectionLinkPolicyHandleWritePowerStatesCfm:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSetSniffSubRatePolicyReq:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetSniffSubRatePolicyReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetSniffSubRatePolicyReq:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB20:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L46
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L46
?LBB21:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AL,#H'7016
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'000A
	bsr	$dostore_AH
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	bsr	$_VmSendDmPrim
?L46:
?LBE21:
?LBE20:
?LBE_connectionHandleSetSniffSubRatePolicyReq:
	leavel	#9
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSniffSubRatingInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSniffSubRatingInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSniffSubRatingInd:
	st	AL,@(H'0001,Y)
?LBB22:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0001,Y)
	add	AH,#H'0003
	ld	AL,@(H'0002,Y)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0001,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetAppTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'7004
	bsr	$_MessageSend
?LBE22:
?LBE_connectionHandleSniffSubRatingInd:
	leavel	#6
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 54 used[1] = 2 total = 56
;# Function pattern *movqi_fetch_general used[0] = 34 total = 34
;# Function pattern *movqi_store_y_relative used[0] = 61 used[1] = 1 total = 62
;# Function pattern *movqi_fetch_y_relative used[0] = 64 total = 64
;# Function pattern *movqi_store_general used[0] = 31 total = 31
;# Function pattern *movqi1-framep used[0] = 8 total = 8
;# Function pattern *movqi2 used[0] = 50 total = 50
;# Function pattern *movqi2b used[0] = 6 total = 6
;# Function pattern *addqi4-withytranslation used[1] = 3 total = 3
;# Function pattern *addqi0-framep used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 50 used[2] = 3 used[3] = 6 total = 59
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 26 total = 26
;# Function pattern *call_value1 used[0] = 38 total = 38
;# Function pattern addsi3+1 used[0] = 6 total = 6
;# Function pattern addsi3+2 used[0] = 6 total = 6
;# Function pattern addsi3+3 used[0] = 2 total = 2
;# Function pattern addhi3-2 used[0] = 2 total = 2
;# Function pattern subhi3+1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 15 total = 15
	MODULE	dm_security_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_aclOpen:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_aclOpen ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_aclOpen:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2805
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE2:
?LBE_aclOpen:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
;# end scan referenced symbols
_aclClose:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_aclClose ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_aclClose:
	st	AL,@(0,Y)
?LBB3:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2806
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE3:
?LBE_aclClose:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
_startBonding:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_startBonding ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_startBonding:
	st	AL,@(0,Y)
?LBB4:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2E12
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE4:
?LBE_startBonding:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
_cancelBonding:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_cancelBonding ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_cancelBonding:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB5:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AL,#H'2E13
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	bsr	$_VmSendDmPrim
?LBE5:
?LBE_cancelBonding:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
_connectionSendAuthenticateCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSendAuthenticateCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSendAuthenticateCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	cmp	AL,#H'0000
	beq	?L5
?LBB7:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'701B
	bsr	$_MessageSend
?L5:
?LBE7:
?LBE6:
?LBE_connectionSendAuthenticateCfm:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
.IMPORT $_BdaddrIsZero 0 ; (Non-const ref)
.IMPORT _aclOpen 0 ; (Non-const ref)
;# end scan referenced symbols
_handleInternalSetSecurityModeCfm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleInternalSetSecurityModeCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleInternalSetSecurityModeCfm:
	st	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L8
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L8
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@(H'0001,Y)
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L11
	ld	AL,@(H'0001,Y)
	bsr	_aclOpen
	bra	(?L8)
?L11:
	ld	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L8:
?LBE_handleInternalSetSecurityModeCfm:
	leavel	#4
;# begin scan referenced symbols
.IMPORT _connectionSendAuthenticateCfm 0 ; (Non-const ref)
.IMPORT _aclClose 0 ; (Non-const ref)
.IMPORT _cancelBonding 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
.IMPORT $_BdaddrSetZero 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSetSecurityMode 0 ; (Non-const ref)
;# end scan referenced symbols
_endAuthentication:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_endAuthentication ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_endAuthentication:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	cmp	AH,#H'0000
	beq	?L17
	ld	AH,@$XAP_AL
	add	AH,#H'0006
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y); movqi2b+1 peephole
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_connectionSendAuthenticateCfm
?L17:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bne	?L18
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L19
	ld	AL,#H'0006
	add	AL,@H'fffc
	bsr	_aclClose
	bra	(?L21)
?L19:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	ld	AH,#H'0000
	bsr	_cancelBonding
	bra	(?L21)
?L18:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0011
	bsr	$_MessageCancelFirst
?L21:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	bsr	$_BdaddrSetZero
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L22
	bsr	$_connectionGetCmTask
	st	AL,@H'fff9
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	and	AL,#H'00FF
	st	AL,@H'fff8
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	$_ConnectionSmSetSecurityMode
	bra	(?L16)
?L22:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L16:
?LBE_endAuthentication:
	leavel	#7
;# begin scan referenced symbols
;# end scan referenced symbols
_sendEncryptionChangeInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendEncryptionChangeInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendEncryptionChangeInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	cmp	AL,#H'0000
	beq	?L28
?LBB9:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7028
	bsr	$_MessageSend
?L28:
?LBE9:
?LBE8:
?LBE_sendEncryptionChangeInd:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_connectionGetMsgFilter 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
;# end scan referenced symbols
_sendAclOpenedIndToClient:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendAclOpenedIndToClient ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendAclOpenedIndToClient:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB10:
	bsr	$_connectionGetMsgFilter
	ld	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L31
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L31
?LBB11:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	bsr	$dostore32_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'0009,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7018
	bsr	$_MessageSend
?L31:
?LBE11:
?LBE10:
?LBE_sendAclOpenedIndToClient:
	leavel	#6
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
.IMPORT $_BdaddrIsSame 0 ; (Non-const ref)
.IMPORT _endAuthentication 0 ; (Non-const ref)
;# end scan referenced symbols
_handleGenericAclClosedInd:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleGenericAclClosedInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleGenericAclClosedInd:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB12:
	bsr	$_connectionGetMsgFilter
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'000A,Y)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L36
	ld	AL,@(H'0006,Y)
	add	AL,#H'0006
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L36
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L36
	ld	AL,@H'fffc
	ld	AH,#H'0000
	bsr	_endAuthentication
?L36:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L35
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L35
?LBB13:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'000B,Y)
	bsr	$dostore_AL
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y); movqi2b+1 peephole
	ld	AH,#H'7019
	bsr	$_MessageSend
?L35:
?LBE13:
?LBE12:
?LBE_handleGenericAclClosedInd:
	leavel	#10
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmAddDeviceCfm:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmAddDeviceCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmAddDeviceCfm:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	add	X,#H'0006
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L45
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	add	AL,#H'0001
	ld	AH,@$XAP_AL
	and	AH,#H'000F
	st	AH,@(0,Y)
	and	AL,#H'000F
	asl	#H'0008
	bsr	$dofetch_AH
	and	AH,#-H'0F01
	or	AH,@$XAP_AL
	bsr	$dostore_AH
	lsr	#H'000C
	ld	AL,@(0,Y)
	cmp	AL,@$XAP_AH
	bne	?L45
	ld	AL,#H'0080
	bsr	$_connectionSendInternalInitCfm
?L45:
?LBE_connectionHandleSmAddDeviceCfm:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmAddDeviceCfmReady:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmAddDeviceCfmReady ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmAddDeviceCfmReady:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB14:
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L51
?LBB15:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
?LBB16:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@(H'0006,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L52
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L52:
	st	AH,@H'fffc
	bsr	$dostore_fff9
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y); movqi2b+1 peephole
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'7043
	bsr	$_MessageSend
?L51:
	ld	AL,@(H'0005,Y)
?LBE16:
?LBE15:
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE14:
?LBE_connectionHandleSmAddDeviceCfmReady:
	leavel	#9
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
.IMPORT $_ConnectionSdpCloseSearchRequest 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmAccessInd:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmAccessInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmAccessInd:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB17:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L57
	cmp	AL,#H'0000
	bne	?L57
	ld	AL,@(H'0005,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L63
	cmp	AL,#H'0001
	beq	?L55
?L63:
?L57:
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L55
	bsr	$_connectionGetCmTask
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L55
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0006,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L61
	bsr	$_connectionGetCmTask
	ld	AH,#H'003F
	bsr	$_MessageCancelFirst
?L61:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	bsr	$_ConnectionSdpCloseSearchRequest
?L55:
?LBE17:
?LBE_connectionHandleSmAccessInd:
	leavel	#9
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
.IMPORT $_connectionAuthSendLinkKey 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmLinkKeyReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmLinkKeyReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmLinkKeyReqInd:
	ld	AH,@$XAP_AL
?LBB18:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionAuthSendLinkKey
?LBE18:
?LBE_connectionHandleSmLinkKeyReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
.IMPORT $_connectionAuthSendSspLinkKey 0 ; (Non-const ref)
.IMPORT $_ConnectionSdpOpenSearchRequest 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmSspLinkKeyReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmSspLinkKeyReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmSspLinkKeyReqInd:
	ld	AH,@(H'0006,Y)
?LBB19:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_connectionAuthSendSspLinkKey
	cmp	AL,#H'0000
	bne	?L68
	ld	AL,@(H'0006,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L68
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L68
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_ConnectionSdpOpenSearchRequest
?L68:
?LBE19:
?LBE_connectionHandleSmSspLinkKeyReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT $_connectionConvertLinkKeyType 0 ; (Non-const ref)
.IMPORT $_connectionAuthAddDevice 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmLinkKeyInd:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmLinkKeyInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmLinkKeyInd:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB20:
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0010,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertLinkKeyType
	st	AL,@(H'000B,Y)
	ld	AL,@(H'000F,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000E
	st	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L75
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
?L75:
	ld	AH,@(H'0010,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0001
	beq	?L77
	ld	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L76
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0002
	beq	?L76
?L77:
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y)
	add	AL,#H'0007
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionAuthAddDevice
	st	AL,@(H'000A,Y)
	bra	(?L78)
?L76:
	ld	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	bne	?L78
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0002
	beq	?L78
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y)
	add	AL,#H'0007
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionAuthAddDevice
?L78:
	ld	X,@(H'000F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	bne	?L80
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0001
	bne	?L80
	ld	AL,@H'fffc
	ld	AH,#H'0000
	bsr	_endAuthentication
?L80:
	ld	AL,@(H'000F,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#-H'00F1
	or	AL,#H'0080
	bsr	$dostore_AL
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y); movqi2b+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_connectionSendAuthenticateCfm
?LBE20:
?LBE_connectionHandleSmLinkKeyInd:
	leavel	#15
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
.IMPORT $_connectionConvertAuthStatus 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmBondingCfm:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmBondingCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmBondingCfm:
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
?LBB21:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L89
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	bne	?L89
	ld	AL,@(H'0008,Y)
?LBB22:
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertAuthStatus
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	_endAuthentication
?L89:
?LBE22:
?LBE21:
?LBE_connectionHandleSmBondingCfm:
	leavel	#8
;.stabn	192,0,0,?LBB21
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmPinReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmPinReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmPinReqInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB23:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'701E
	bsr	$_MessageSend
?LBE23:
?LBE_connectionHandleSmPinReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmIoCapReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmIoCapReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmIoCapReqInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB24:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'701F
	bsr	$_MessageSend
?LBE24:
?LBE_connectionHandleSmIoCapReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;# begin scan referenced symbols
.IMPORT $_connectionConvertAuthenticationRequirements 0 ; (Non-const ref)
.IMPORT $_connectionConvertIoCapability 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmIoCapResInd:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmIoCapResInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmIoCapResInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB25:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	add	AL,#H'0008
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertAuthenticationRequirements
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0002,Y)
?LBB26:
	add	AH,#H'0001
	st	AH,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'0004
	and	AH,#H'000F
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L100
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'000F
	asl	#H'0004
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	and	AH,#-H'00F1
	or	AH,@$XAP_AL
	bsr	$dostore_AH
?L100:
	ld	AL,@(H'0003,Y)
?LBE26:
	add	AL,#H'0005
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertIoCapability
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0009,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7020
	bsr	$_MessageSend
?LBE25:
?LBE_connectionHandleSmIoCapResInd:
	leavel	#9
;.stabn	192,0,0,?LBB25
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;.stabn	224,0,0,?LBE25
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmUserConfirmationReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmUserConfirmationReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmUserConfirmationReqInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB27:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0002,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7021
	bsr	$_MessageSend
?LBE27:
?LBE_connectionHandleSmUserConfirmationReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmUserPasskeyReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmUserPasskeyReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmUserPasskeyReqInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB28:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7022
	bsr	$_MessageSend
?LBE28:
?LBE_connectionHandleSmUserPasskeyReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmUserPasskeyNotificationInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmUserPasskeyNotificationInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmUserPasskeyNotificationInd:
	st	AL,@(H'0001,Y)
?LBB29:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0002,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7023
	bsr	$_MessageSend
?LBE29:
?LBE_connectionHandleSmUserPasskeyNotificationInd:
	leavel	#5
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;# begin scan referenced symbols
.IMPORT $_connectionConvertKeypressType 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmKeypressNotificationInd:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmKeypressNotificationInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmKeypressNotificationInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB30:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertKeypressType
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7024
	bsr	$_MessageSend
?LBE30:
?LBE_connectionHandleSmKeypressNotificationInd:
	leavel	#7
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;# begin scan referenced symbols
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmChangeLinkKeyReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmChangeLinkKeyReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmChangeLinkKeyReq:
?LBB31:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L106
?LBB32:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'0415
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
?L106:
?LBE32:
?LBE31:
?LBE_connectionHandleSmChangeLinkKeyReq:
	leavel	#7
;.stabn	192,0,0,?LBB31
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	224,0,0,?LBE31
;# begin scan referenced symbols
.IMPORT $_connectionConvertProtocolId_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmAuthoriseInd:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmAuthoriseInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmAuthoriseInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB33:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	bsr	$_connectionConvertProtocolId_t
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	X,@(H'0002,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0002,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7025
	bsr	$_MessageSend
?LBE33:
?LBE_connectionHandleSmAuthoriseInd:
	leavel	#7
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmSimplePairingCompleteInd:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmSimplePairingCompleteInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmSimplePairingCompleteInd:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
?LBB34:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'000B,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L111
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L112
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertAuthStatus
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,Y); movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_connectionSendAuthenticateCfm
?L112:
	ld	AL,@(H'0008,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#-H'00F1
	or	AL,#H'0080
	bsr	$dostore_AL
?L111:
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L110
	ld	AL,@(H'000B,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertAuthStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0008,Y)
	bsr	_endAuthentication
?L110:
?LBE34:
?LBE_connectionHandleSmSimplePairingCompleteInd:
	leavel	#11
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleDmAclOpenCfm:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmAclOpenCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmAclOpenCfm:
	st	AL,@(H'0004,Y)
?LBB35:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L117
	ld	X,@$XAP_AH
	add	X,#H'0006
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L119
?LBB36:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	st	AL,@(H'0005,Y)
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L117
	ld	AL,@(H'0005,Y)
	bsr	_aclClose
?LBE36:
	bra	(?L117)
?L119:
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0002
	bsr	_endAuthentication
?L117:
?LBE35:
?LBE_connectionHandleDmAclOpenCfm:
	leavel	#8
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;# begin scan referenced symbols
.IMPORT _sendAclOpenedIndToClient 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDmAclOpenInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmAclOpenInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmAclOpenInd:
	st	AL,@H'fff8
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@$XAP_AH
	add	X,#H'0006
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	add	AH,#H'0007
	st	AH,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0036
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8; movqi2b+1 peephole
	ld	AH,@H'fff9
	bsr	_sendAclOpenedIndToClient
?LBE_connectionHandleDmAclOpenInd:
	leavel	#6
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDmEnAclOpenInd:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmEnAclOpenInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmEnAclOpenInd:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0009,Y)
?LBB37:
	add	AL,#H'0009
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@H'fff8
	ld	AL,@(H'0009,Y)
	add	AL,#H'0002
	st	AL,@H'fff9
	ld	AL,@(H'0009,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y); movqi2b+1 peephole
	ld	AH,@H'fff9
	bsr	_sendAclOpenedIndToClient
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L126
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	bne	?L126
?LBB38:
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionConvertAuthStatus
	cmp	AL,#H'0001
	bne	?L126
	bsr	$_connectionGetCmTask
	ld	AH,#H'0011
	bsr	$_MessageCancelFirst
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0001
	bsr	_endAuthentication
?L126:
?LBE38:
?LBE37:
?LBE_connectionHandleDmEnAclOpenInd:
	leavel	#9
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;# begin scan referenced symbols
.IMPORT _handleGenericAclClosedInd 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDmAclClosedInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmAclClosedInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmAclClosedInd:
	ld	X,@(H'0004,Y)
	add	X,#H'0002
	st	X,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0036
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	bsr	_handleGenericAclClosedInd
?LBE_connectionHandleDmAclClosedInd:
	leavel	#4
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleDmEnAclClosedInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmEnAclClosedInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmEnAclClosedInd:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0006,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_handleGenericAclClosedInd
?LBE_connectionHandleDmEnAclClosedInd:
	leavel	#6
;# begin scan referenced symbols
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadLocalOobDataReq:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLocalOobDataReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLocalOobDataReq:
	st	AH,@(H'0002,Y)
?LBB39:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L135
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L136
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB40:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'701E
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE40:
	bra	(?L134)
?L136:
?LBB41:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'000E
	bsr	$_MessageSendConditionallyOnTask
?LBE41:
	bra	(?L134)
?L135:
?LBB42:
	ld	AL,#H'0021
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0011
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0011
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'701A
	bsr	$_MessageSend
?L134:
?LBE42:
?LBE39:
?LBE_connectionHandleReadLocalOobDataReq:
	leavel	#6
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;# begin scan referenced symbols
.IMPORT $_VmGetPointerFromHandle 0 ; (Non-const ref)
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadLocalOobDataCfm:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLocalOobDataCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLocalOobDataCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB43:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L142
?LBB44:
	ld	AL,#H'0021
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L143
	ld	AL,@(H'0002,Y)
?LBB45:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	bsr	$_free
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0011
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	bsr	$_free
?LBE45:
	bra	(?L144)
?L143:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'000D
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'000F
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0011
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0015
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0017
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0019
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'001B
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'001D
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'001F
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
?L144:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'701A
	bsr	$_MessageSend
?L142:
	ld	AL,@(H'0001,Y)
?LBE44:
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE43:
?LBE_connectionHandleReadLocalOobDataCfm:
	leavel	#8
;.stabn	192,0,0,?LBB44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;.stabn	224,0,0,?LBE44
;# begin scan referenced symbols
.IMPORT $_ConnectionSmDeleteAuthDevice 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
.IMPORT _startBonding 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleAuthenticationReq:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleAuthenticationReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleAuthenticationReq:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AH,@$XAP_AL
?LBB46:
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L148
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	ld	AL,@$XAP_AH
	bsr	$_ConnectionSmDeleteAuthDevice
?LBB47:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0011
	bsr	$_MessageSendLater
?LBE47:
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	add	AH,#H'0001
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L149
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0003
	bsr	$_ConnectionSmSetSecurityMode
	bra	(?L147)
?L149:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#-H'00F1
	or	AL,#H'0020
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	bsr	_startBonding
	bra	(?L147)
?L148:
?LBB48:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0004,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'000F
	bsr	$_MessageSendConditionallyOnTask
?L147:
?LBE48:
?LBE46:
?LBE_connectionHandleAuthenticationReq:
	leavel	#10
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleCancelAuthenticationReq:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleCancelAuthenticationReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleCancelAuthenticationReq:
	st	AL,@H'fffa
	st	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	st	AL,@H'fff9
	ld	AL,@H'ffff
	add	AH,#H'0003
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L154
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L156
	ld	AL,#H'0006
	add	AL,@H'fff8
	ld	X,@H'fff9
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_cancelBonding
	bra	(?L154)
?L156:
	ld	X,@H'fff9
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L154
	ld	AL,#H'0006
	add	AL,@H'fff8
	bsr	_aclClose
?L154:
?LBE_connectionHandleCancelAuthenticationReq:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleAuthenticationTimeout:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleAuthenticationTimeout ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleAuthenticationTimeout:
	ld	AH,#H'0001
	bsr	_endAuthentication
?LBE_connectionHandleAuthenticationTimeout:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionConvertSecurityMode_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleSetSecurityModeReq:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleSetSecurityModeReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleSetSecurityModeReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB49:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L164
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L165
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AH
	and	AH,#H'00FF
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0008
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	bsr	$dostore_AH
?L165:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB50:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C07
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSecurityMode_t
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
?LBE50:
	bra	(?L163)
?L164:
?LBB51:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,#H'0012
	bsr	$_MessageSendConditionallyOnTask
?L163:
?LBE51:
?LBE49:
?LBE_handleSetSecurityModeReq:
	leavel	#9
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;.stabn	192,0,0,?LBB51
;.stabn	224,0,0,?LBE51
;# begin scan referenced symbols
.IMPORT $_connectionConvertSspSecurityLevel_t 0 ; (Non-const ref)
.IMPORT $_connectionConvertProtocolId 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleSetSspSecurityLevelReq:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleSetSspSecurityLevelReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleSetSspSecurityLevelReq:
	ld	AH,@(H'000A,Y)
?LBB52:
	add	AH,#H'0005
	st	AH,@(H'0002,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0003)
	bcc	?L169
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0002
	bne	?L171
?LBB53:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C01
	bsr	$dostore_AL
	ld	X,#H'0001
	add	X,@H'fffc
	st	X,@(H'0004,Y)
	ld	AH,@(H'000A,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	$_connectionConvertSspSecurityLevel_t
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	bra	(?L173)
?L171:
?LBE53:
?LBB54:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AH,#H'2C02
	bsr	$dostore_AH
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(H'000A,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0005,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@(H'0007,Y)
	ld	X,@(H'000A,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'000A,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_connectionConvertSspSecurityLevel_t
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'000A,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
?L173:
	bsr	$_VmSendDmPrim
?L169:
?LBE54:
?LBE52:
?LBE_handleSetSspSecurityLevelReq:
	leavel	#10
;.stabn	192,0,0,?LBB53
;.stabn	224,0,0,?LBE53
;.stabn	192,0,0,?LBB54
;.stabn	224,0,0,?LBE54
;# begin scan referenced symbols
.IMPORT $_connectionConvertWriteAuthEnable_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleSecModeConfigReq:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleSecModeConfigReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleSecModeConfigReq:
	st	AL,@(H'0002,Y)
?LBB55:
	add	AH,#H'0002
	st	AH,@(H'0003,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L176
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L177
?LBB56:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'2E10
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertWriteAuthEnable_t
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0002
	bne	?L178
	st	AH,@H'fffc
	ld	AL,#H'0000
	or	AL,#H'0001
	bsr	$dostore_AL
?L178:
	ld	AH,@(H'0009,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L179
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	or	AL,#H'0002
	bsr	$dostore_AL
?L179:
	ld	AH,@(H'0009,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L180
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	or	AL,#H'0004
	bsr	$dostore_AL
?L180:
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
?LBE56:
	bra	(?L175)
?L177:
?LBB57:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0009,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,#H'0014
	bsr	$_MessageSendConditionallyOnTask
?LBE57:
	bra	(?L175)
?L176:
?LBB58:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'701D
	bsr	$_MessageSend
?L175:
?LBE58:
?LBE55:
?LBE_handleSecModeConfigReq:
	leavel	#9
;.stabn	192,0,0,?LBB56
;.stabn	224,0,0,?LBE56
;.stabn	192,0,0,?LBB57
;.stabn	224,0,0,?LBE57
;.stabn	192,0,0,?LBB58
;.stabn	224,0,0,?LBE58
;# begin scan referenced symbols
.IMPORT _handleInternalSetSecurityModeCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSetSecurityModeCfm:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetSecurityModeCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetSecurityModeCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB59:
	add	AL,#H'0002
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L189
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_handleInternalSetSecurityModeCfm
	bra	(?L190)
?L189:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L190
?LBB60:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AH,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'701C
	bsr	$_MessageSend
?L190:
	ld	AL,@(H'0001,Y)
?LBE60:
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE59:
?LBE_connectionHandleSetSecurityModeCfm:
	leavel	#7
;.stabn	192,0,0,?LBB60
;.stabn	224,0,0,?LBE60
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleConfigureSecurityCfm:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleConfigureSecurityCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleConfigureSecurityCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB61:
	add	AL,#H'0002
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L195
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L195
?LBB62:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L197
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L197:
	st	AH,@H'fffc
	bsr	$dostore_fff9
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'0001
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'0001
	and	AH,#H'0001
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'701D
	bsr	$_MessageSend
?L195:
	ld	AL,@(H'0001,Y)
?LBE62:
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE61:
?LBE_connectionHandleConfigureSecurityCfm:
	leavel	#6
;.stabn	192,0,0,?LBB62
;.stabn	224,0,0,?LBE62
;# begin scan referenced symbols
.IMPORT $_connectionConvertSecurityLevel_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleRegisterReq:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleRegisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleRegisterReq:
	st	AL,@(0,Y)
?LBB63:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'2C02
	bsr	$dostore_AH
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(0,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(0,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0006
	st	AH,@(H'0003,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSecurityLevel_t
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	X,@(0,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE63:
?LBE_handleRegisterReq:
	leavel	#6
;.stabn	192,0,0,?LBB63
;.stabn	224,0,0,?LBE63
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleUnRegisterReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleUnRegisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleUnRegisterReq:
	st	AL,@(0,Y)
?LBB64:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C03
	bsr	$dostore_AL
	ld	X,#H'0001
	add	X,@H'fffc
	st	X,@(H'0002,Y)
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE64:
?LBE_handleUnRegisterReq:
	leavel	#5
;.stabn	192,0,0,?LBB64
;.stabn	224,0,0,?LBE64
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleRegisterOutgoingReq:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleRegisterOutgoingReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleRegisterOutgoingReq:
	st	AL,@(0,Y)
?LBB65:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'2C04
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AH,@(H'0003,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSecurityLevel_t
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	X,@(0,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE65:
?LBE_handleRegisterOutgoingReq:
	leavel	#6
;.stabn	192,0,0,?LBB65
;.stabn	224,0,0,?LBE65
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleUnRegisterOutgoingReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleUnRegisterOutgoingReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleUnRegisterOutgoingReq:
	st	AL,@(0,Y)
?LBB66:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C05
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	X,@(H'0001,Y)
	add	X,#H'0005
	st	X,@(H'0002,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(0,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE66:
?LBE_handleUnRegisterOutgoingReq:
	leavel	#5
;.stabn	192,0,0,?LBB66
;.stabn	224,0,0,?LBE66
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleEncryptReq:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleEncryptReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleEncryptReq:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	AH,@$XAP_AL
?LBB67:
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L206
?LBB68:
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB69:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C0E
	bsr	$dostore_AL
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L207
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
?L207:
	ld	AH,@(H'0007,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0009,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
?LBE69:
?LBE68:
	bra	(?L205)
?L206:
?LBB70:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0004
	st	AH,@(H'0001,Y)
	ld	AH,#H'0019
	bsr	$_MessageSendConditionallyOnTask
?L205:
?LBE70:
?LBE67:
?LBE_handleEncryptReq:
	leavel	#13
;.stabn	192,0,0,?LBB68
;.stabn	192,0,0,?LBB69
;.stabn	224,0,0,?LBE69
;.stabn	224,0,0,?LBE68
;.stabn	192,0,0,?LBB70
;.stabn	224,0,0,?LBE70
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleEncryptCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleEncryptCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleEncryptCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB71:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L212
?LBB72:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L213
	st	AH,@H'fffc
	ld	AL,#H'0000
	bra	(?L215)
?L213:
	st	AH,@H'fffc
	ld	AL,#H'0001
?L215:
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'7026
	bsr	$_MessageSend
?L212:
	ld	AL,@(H'0001,Y)
?LBE72:
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE71:
?LBE_connectionHandleEncryptCfm:
	leavel	#5
;.stabn	192,0,0,?LBB72
;.stabn	224,0,0,?LBE72
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleEncryptionKeyRefreshReq:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleEncryptionKeyRefreshReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleEncryptionKeyRefreshReq:
	st	AH,@(0,Y)
?LBB73:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L218
?LBB74:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'7022
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?L218:
?LBE74:
?LBE73:
?LBE_handleEncryptionKeyRefreshReq:
	leavel	#4
;.stabn	192,0,0,?LBB74
;.stabn	224,0,0,?LBE74
;# begin scan referenced symbols
.IMPORT $_calloc 0 ; (Non-const ref)
.IMPORT $_PanicNull 0 ; (Non-const ref)
.IMPORT $_StreamSinksFromBdAddr 0 ; (Non-const ref)
.IMPORT $_MessageSinkGetTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleEncryptionKeyRefreshInd:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleEncryptionKeyRefreshInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleEncryptionKeyRefreshInd:
	st	AL,@(H'0006,Y)
?LBB75:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0006,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0009,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'0009,Y)
	bsr	$_StreamSinksFromBdAddr
	cmp	AL,#H'0000
	beq	?L222
	ld	AL,@(H'0007,Y)
	cmp	AL,@(H'0001,Y)
	bcc	?L222
?L229:
	ld	AL,@(H'0009,Y)
	add	AL,@(H'0007,Y)
	st	AL,@(H'000A,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L225
?LBB76:
	bsr	$_MessageSinkGetTask
	st	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	beq	?L225
?LBB77:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y); movqi2b+1 peephole
	ld	AH,#H'7027
	bsr	$_MessageSend
?L225:
	ld	AL,@(H'0007,Y)
?LBE77:
?LBE76:
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	cmp	AL,@(H'0001,Y)
	bcs	?L229
?L222:
	ld	AL,@(H'0009,Y)
	bsr	$_free
?LBE75:
?LBE_connectionHandleEncryptionKeyRefreshInd:
	leavel	#14
;.stabn	192,0,0,?LBB75
;.stabn	192,0,0,?LBB76
;.stabn	192,0,0,?LBB77
;.stabn	224,0,0,?LBE77
;.stabn	224,0,0,?LBE76
;.stabn	224,0,0,?LBE75
;# begin scan referenced symbols
;# end scan referenced symbols
$_handlePinRequestRes:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handlePinRequestRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handlePinRequestRes:
	st	AL,@(H'0001,Y)
?LBB78:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,#H'2C0B
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(H'0001,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fff9
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'000F)
	bcc	?L237
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fff8
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_memmove
	bra	(?L238)
?L237:
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L238:
	ld	AL,@(H'0002,Y)
	bsr	$_VmSendDmPrim
?LBE78:
?LBE_handlePinRequestRes:
	leavel	#5
;.stabn	192,0,0,?LBB78
;.stabn	224,0,0,?LBE78
;# begin scan referenced symbols
.IMPORT $_connectionConvertIoCapability_t 0 ; (Non-const ref)
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleIoCapabilityRequestRes:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleIoCapabilityRequestRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleIoCapabilityRequestRes:
	st	AL,@H'fff8
	st	AH,@(0,Y)
	ld	AL,@$XAP_AH
?LBB79:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0004
	and	AH,#H'000F
	lsr	#H'0001
	and	AH,#H'0001
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L240
	cmp	AH,#H'0000
	beq	?L241
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L242
	ld	AL,#H'0003
	bra	(?L250)
?L242:
	ld	AL,#H'0002
	bra	(?L250)
?L241:
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L245
	ld	AL,#H'0005
	bra	(?L250)
?L245:
	ld	AL,#H'0004
	bra	(?L250)
?L240:
	cmp	AH,#H'0000
	beq	?L248
	ld	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#H'0008
	bra	(?L250)
?L248:
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L250
	ld	AL,#H'0001
?L250:
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0002,Y)
	and	AL,#H'000F
	asl	#H'0004
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	and	AH,#-H'00F1
	or	AH,@$XAP_AL
	bsr	$dostore_AH
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0004
	beq	?L251
?LBB80:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,#H'2E11
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_connectionConvertIoCapability_t
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L252
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	st	AL,@(H'0005,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@(H'0006,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	st	X,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L255)
?L252:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	ld	AL,#H'0000
?L255:
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	bra	(?L256)
?L251:
?LBE80:
?LBB81:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	ld	AL,#H'2E15
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0007,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,#H'0018
	bsr	$dostore_AL
	ld	AL,@(H'0007,Y)
?L256:
	bsr	$_VmSendDmPrim
?LBE81:
?LBE79:
?LBE_handleIoCapabilityRequestRes:
	leavel	#10
;.stabn	192,0,0,?LBB79
;.stabn	192,0,0,?LBB80
;.stabn	224,0,0,?LBE80
;.stabn	192,0,0,?LBB81
;.stabn	224,0,0,?LBE81
;.stabn	224,0,0,?LBE79
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleUserConfirmationRequestRes:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleUserConfirmationRequestRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleUserConfirmationRequestRes:
	st	AL,@(0,Y)
?LBB82:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L266
?LBB83:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'701A
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bra	(?L268)
?L266:
?LBE83:
?LBB84:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AL,#H'701B
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0002,Y)
?L268:
	bsr	$_VmSendDmPrim
?LBE84:
?LBE82:
?LBE_handleUserConfirmationRequestRes:
	leavel	#5
;.stabn	192,0,0,?LBB83
;.stabn	224,0,0,?LBE83
;.stabn	192,0,0,?LBB84
;.stabn	224,0,0,?LBE84
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleUserPasskeyRequestRes:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleUserPasskeyRequestRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleUserPasskeyRequestRes:
	st	AL,@(0,Y)
?LBB85:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L271
?LBB86:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'701C
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	X,@(0,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0001,Y)
	bra	(?L273)
?L271:
?LBE86:
?LBB87:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AL,#H'701D
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0002,Y)
?L273:
	bsr	$_VmSendDmPrim
?LBE87:
?LBE85:
?LBE_handleUserPasskeyRequestRes:
	leavel	#5
;.stabn	192,0,0,?LBB86
;.stabn	224,0,0,?LBE86
;.stabn	192,0,0,?LBB87
;.stabn	224,0,0,?LBE87
;# begin scan referenced symbols
.IMPORT $_connectionConvertKeypressType_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleSendKeypressNotificationReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleSendKeypressNotificationReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleSendKeypressNotificationReq:
	st	AL,@(0,Y)
?LBB88:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'701F
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	add	AL,#H'0006
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertKeypressType_t
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE88:
?LBE_handleSendKeypressNotificationReq:
	leavel	#5
;.stabn	192,0,0,?LBB88
;.stabn	224,0,0,?LBE88
;# begin scan referenced symbols
.IMPORT $_connectionAuthSetTrustLevel 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleSetTrustLevelReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleSetTrustLevelReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleSetTrustLevelReq:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionAuthSetTrustLevel
?LBE_handleSetTrustLevelReq:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleAuthoriseRes:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleAuthoriseRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleAuthoriseRes:
	st	AL,@(0,Y)
?LBB89:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'2C0C
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(0,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(0,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE89:
?LBE_handleAuthoriseRes:
	leavel	#5
;.stabn	192,0,0,?LBB89
;.stabn	224,0,0,?LBE89
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleAddAuthDeviceReq:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleAddAuthDeviceReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleAddAuthDeviceReq:
	st	AL,@H'fff8
	st	AH,@(H'0004,Y)
?LBB90:
	add	AH,#H'0005
	st	AH,@(H'0005,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L279
?LBB91:
	ld	AL,#H'0018
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'000A,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'000A,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0010
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0012
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0014
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0016
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore32_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0005,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0022
	bsr	$_MessageSendConditionallyOnTask
?LBE91:
	bra	(?L278)
?L279:
	ld	AH,@(H'000A,Y)
	add	AH,#H'0001
	st	AH,@(H'0007,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	X,@(H'000A,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000A,Y)
	add	AH,#H'0017
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@(H'0007,Y)
	bsr	$_connectionAuthAddDevice
	cmp	AL,#H'0000
	bne	?L281
?LBB92:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'000A,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'000A,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'000A,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,@H'fff8
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7043
	bsr	$_MessageSend
?LBE92:
	bra	(?L278)
?L281:
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore_AL
?L278:
?LBE90:
?LBE_handleAddAuthDeviceReq:
	leavel	#10
;.stabn	192,0,0,?LBB91
;.stabn	224,0,0,?LBE91
;.stabn	192,0,0,?LBB92
;.stabn	224,0,0,?LBE92
;# begin scan referenced symbols
.IMPORT $_connectionAuthGetDevice 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleGetAuthDeviceReq:
	enterl	#26
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleGetAuthDeviceReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleGetAuthDeviceReq:
	st	AH,@(H'0014,Y)
?LBB93:
	add	AL,#H'0005
	st	AL,@(H'0015,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L286
?LBB94:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0016,Y)
	ld	X,@(H'0014,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0016,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0014,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0014,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0016,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0016,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0015,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0023
	bsr	$_MessageSendConditionallyOnTask
?LBE94:
	bra	(?L285)
?L286:
?LBB95:
	ld	AL,#H'0019
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0017,Y)
	ld	AH,@(H'0014,Y)
	add	AH,#H'0001
	st	AH,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0017,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0014,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0014,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0017,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0014,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0017,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0012+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0013+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionAuthGetDevice
	cmp	AL,#H'0000
	beq	?L288
	st	X,@H'ffff
	ld	X,@(H'0017,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,#H'0005
	add	AH,@H'fffc
	ld	AL,@(H'0012,Y)
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0013,Y)
	ld	X,@(H'0017,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0017,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0010
	bsr	$dostore_AL
	ld	AL,@(H'0017,Y)
	add	AL,#H'0008
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
	bra	(?L289)
?L288:
	st	X,@H'ffff
	ld	X,@(H'0017,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L289:
	ld	X,@(H'0017,Y)
	st	X,@(0,Y)
	ld	X,@(H'0014,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7044
	bsr	$_MessageSend
?L285:
?LBE95:
?LBE93:
?LBE_handleGetAuthDeviceReq:
	leavel	#26
;.stabn	192,0,0,?LBB94
;.stabn	224,0,0,?LBE94
;.stabn	192,0,0,?LBB95
;.stabn	224,0,0,?LBE95
;# begin scan referenced symbols
.IMPORT _sendEncryptionChangeInd 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleEncryptionChange:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleEncryptionChange ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleEncryptionChange:
	st	AL,@(H'0006,Y)
?LBB96:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,#H'0006
	bsr	$dostore_AL
	ld	AH,#H'0001
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0008,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'0008,Y)
	bsr	$_StreamSinksFromBdAddr
	cmp	AL,#H'0000
	beq	?L293
	ld	AL,@(H'0007,Y)
	cmp	AL,@(H'0001,Y)
	bcc	?L293
	ld	AL,@(H'0006,Y)
	add	AL,#H'0006
	st	AL,@(H'000A,Y)
?L300:
	ld	AL,@(H'0008,Y)
	add	AL,@(H'0007,Y)
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L296
?LBB97:
	bsr	$_MessageSinkGetTask
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L296
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendEncryptionChangeInd
?L296:
	ld	AL,@(H'0007,Y)
?LBE97:
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	cmp	AL,@(H'0001,Y)
	bcs	?L300
?L293:
	ld	AL,@(H'0008,Y)
	bsr	$_free
?LBE96:
?LBE_connectionHandleEncryptionChange:
	leavel	#13
;.stabn	192,0,0,?LBB96
;.stabn	192,0,0,?LBB97
;.stabn	224,0,0,?LBE97
;.stabn	224,0,0,?LBE96
;# begin scan referenced symbols
.IMPORT $_connectionAuthGetAttribute 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionSmHandleGetAttributeReq:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSmHandleGetAttributeReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSmHandleGetAttributeReq:
	st	AL,@H'fff8
	st	AH,@(0,Y)
	ld	X,@$XAP_AH
	add	X,#H'0005
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	add	AH,#H'0004
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	$_connectionAuthGetAttribute
?LBE_connectionSmHandleGetAttributeReq:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_connectionAuthGetIndexedAttribute 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionSmHandleGetIndexedAttributeReq:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSmHandleGetIndexedAttributeReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSmHandleGetIndexedAttributeReq:
	st	AL,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	add	AH,#H'0001
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	$_connectionAuthGetIndexedAttribute
?LBE_connectionSmHandleGetIndexedAttributeReq:
	leavel	#4
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 296 used[1] = 4 total = 300
;# Function pattern *movqi_fetch_general used[0] = 141 total = 141
;# Function pattern *movqi_store_y_relative used[0] = 246 used[1] = 9 total = 255
;# Function pattern *movqi_fetch_y_relative used[0] = 334 used[1] = 1 total = 335
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movhi_fetch_general used[0] = 29 total = 29
;# Function pattern *movhi_store_general used[0] = 22 used[1] = 16 total = 38
;# Function pattern *movqi_store_general used[0] = 120 total = 120
;# Function pattern *movqi1-framep used[0] = 13 total = 13
;# Function pattern *movqi2 used[0] = 251 total = 251
;# Function pattern *movqi2b used[0] = 20 used[1] = 28 total = 48
;# Function pattern *addqi4-withytranslation used[1] = 6 total = 6
;# Function pattern *addqi0-framep used[0] = 22 total = 22
;# Function pattern *addqi2 used[0] = 314 used[2] = 29 used[3] = 18 total = 361
;# Function pattern *andqi3 used[0] = 31 total = 31
;# Function pattern *iorqi3 used[0] = 11 total = 11
;# Function pattern *lshrqi3 used[0] = 10 total = 10
;# Function pattern *ashlqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 33 total = 33
;# Function pattern *call1 used[0] = 126 total = 126
;# Function pattern *call_value1 used[0] = 135 total = 135
;# Function pattern addsi3+1 used[0] = 49 total = 49
;# Function pattern addsi3+2 used[0] = 19 total = 19
;# Function pattern addsi3+3 used[0] = 5 total = 5
;# Function pattern addhi3-2 used[0] = 14 total = 14
;# Function pattern addhi3-1 used[0] = 12 total = 12
;# Function pattern subhi3+1 used[0] = 20 total = 20
;# Function pattern subhi3+2 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 19 total = 19
;# Function pattern extendhfsf2+2 used[1] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 100 total = 100
;# Function pattern extendhfsf2+4 used[0] = 1 total = 1
;# Function pattern extendhfsf2+5 used[0] = 1 total = 1
	MODULE	dm_sync_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $___udivhi3 0 ; (Non-const ref)
.IMPORT $_connectionGetMsgFilter 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sendSyncConnectCfmToClient:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendSyncConnectCfmToClient ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendSyncConnectCfmToClient:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	cmp	AH,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@H'fffa
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fff8
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0004,Y)
	add	AL,#H'0005
	st	AL,@H'fff9
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	bne	?L3
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	beq	?L3
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L4
	st	X,@H'ffff
	ld	X,@H'fffa
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,@H'fff8
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'1F40
	bsr	$dostore32_AH
	st	X,@H'ffff
	ld	X,@H'fff9
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L10)
?L4:
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0002
	bne	?L3
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	ld	AL,#H'0002
	bsr	$dostore_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@(H'0006,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	umult	#H'0640
	st	AH,@H'fff9
	st	AL,@H'fffa
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff9
	ld	AL,@H'fffa
	bsr	$___udivhi3
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0004,Y)
	add	AL,#H'0005
	st	AL,@(H'0007,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	umult	#H'0640
	st	AH,@H'fff9
	st	AL,@H'fffa
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff9
	ld	AL,@H'fffa
	bsr	$___udivhi3
	st	X,@H'ffff
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L10:
	bsr	$dostore32_AH
?L3:
	st	X,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'000A,Y)
	bsr	$dostore_AL
	cmp	AL,#H'0000
	bne	?L8
	ld	AH,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L8
?LBB4:
	bsr	$_connectionGetMsgFilter
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L8
?LBB5:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff9
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0004,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff9
	add	X,#H'0004
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff9
	add	X,#H'0006
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y); movqi2b+1 peephole
	ld	AH,#H'700C
	bsr	$_MessageSend
?L8:
	ld	AH,@(H'0004,Y)
?LBE5:
?LBE4:
	st	AH,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'700C
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendSyncConnectCfmToClient:
	leavel	#10
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSyncRegisterReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRegisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRegisterReq:
	st	AL,@(H'0003,Y)
?LBB6:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffa
	st	AL,@H'fffc
	ld	AH,#H'7C01
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fffa
	bsr	$_VmSendDmPrim
?LBB7:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'03E8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0057
	bsr	$_MessageSendLater
?LBE7:
?LBE6:
?LBE_connectionHandleSyncRegisterReq:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSyncRegisterCfm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRegisterCfm:
	st	AL,@(H'0001,Y)
?LBB8:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0057
	bsr	$_MessageCancelFirst
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L23
	cmp	AL,#H'0000
	beq	?L21
?L23:
?LBB9:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700A
	bsr	$_MessageSend
?L21:
?LBE9:
?LBE8:
?LBE_connectionHandleSyncRegisterCfm:
	leavel	#4
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncRegisterTimeoutInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRegisterTimeoutInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRegisterTimeoutInd:
	st	AL,@(H'0001,Y)
?LBB10:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'700A
	bsr	$_MessageSend
?LBE10:
?LBE_connectionHandleSyncRegisterTimeoutInd:
	leavel	#4
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncUnregisterReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncUnregisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncUnregisterReq:
	st	AL,@(H'0003,Y)
?LBB11:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffa
	st	AL,@H'fffc
	ld	AH,#H'7C02
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fffa
	bsr	$_VmSendDmPrim
?LBB12:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'03E8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0058
	bsr	$_MessageSendLater
?LBE12:
?LBE11:
?LBE_connectionHandleSyncUnregisterReq:
	leavel	#7
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncUnregisterCfm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncUnregisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncUnregisterCfm:
	st	AL,@(H'0001,Y)
?LBB13:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0058
	bsr	$_MessageCancelFirst
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L28
	cmp	AL,#H'0000
	beq	?L26
?L28:
?LBB14:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700B
	bsr	$_MessageSend
?L26:
?LBE14:
?LBE13:
?LBE_connectionHandleSyncUnregisterCfm:
	leavel	#4
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncUnregisterTimeoutInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncUnregisterTimeoutInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncUnregisterTimeoutInd:
	st	AL,@(H'0001,Y)
?LBB15:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'700B
	bsr	$_MessageSend
?LBE15:
?LBE_connectionHandleSyncUnregisterTimeoutInd:
	leavel	#4
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
.IMPORT _sendSyncConnectCfmToClient 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSyncConnectReq:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncConnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncConnectReq:
	st	AL,@(H'0006,Y)
?LBB16:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L31
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendSyncConnectCfmToClient
	bra	(?L30)
?L31:
?LBB17:
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	ld	AH,#H'7C03
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	ld	X,@(H'0007,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0007,Y)
	add	AL,#H'0004
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0006,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0006,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'000D
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'000F
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0007,Y)
	bsr	$_VmSendDmPrim
?L30:
?LBE17:
?LBE16:
?LBE_connectionHandleSyncConnectReq:
	leavel	#10
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSyncConnectCfm:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncConnectCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncConnectCfm:
	st	AL,@H'fff8
	st	AH,@(H'000C,Y)
?LBB18:
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'000E
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'000F
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0007,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0006,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'000C,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendSyncConnectCfmToClient
	ld	AH,@(H'000C,Y)
	add	AH,#H'0007
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0008+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
?LBE18:
?LBE_connectionHandleSyncConnectCfm:
	leavel	#15
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncConnectInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncConnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncConnectInd:
	st	AL,@(H'0001,Y)
?LBB19:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L37
	cmp	AL,#H'0000
	beq	?L35
?L37:
?LBB20:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0004
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700D
	bsr	$_MessageSend
?L35:
?LBE20:
?LBE19:
?LBE_connectionHandleSyncConnectInd:
	leavel	#5
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncConnectCompleteInd:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncConnectCompleteInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncConnectCompleteInd:
	st	AL,@H'fff8
	st	AH,@(H'000C,Y)
?LBB21:
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'000E
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'000F
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0007,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0006,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'000C,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendSyncConnectCfmToClient
	ld	AH,@(H'000C,Y)
	add	AH,#H'0007
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0008+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
?LBE21:
?LBE_connectionHandleSyncConnectCompleteInd:
	leavel	#15
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncConnectRes:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncConnectRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncConnectRes:
	st	AL,@(0,Y)
?LBB22:
	ld	AL,#H'000F
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'7C07
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(0,Y)
	add	AH,#H'0001
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(0,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(0,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(0,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'000B
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(0,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(0,Y)
	add	AH,#H'000D
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'000D
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L40
	ld	AH,@(H'0001,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	bra	(?L41)
?L40:
	ld	X,@(H'0001,Y)
	add	X,#H'000E
	st	X,@H'fffc
	ld	AH,#H'000D
	bsr	$dostore_AH
?L41:
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE22:
?LBE_connectionHandleSyncConnectRes:
	leavel	#4
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncDisconnectReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncDisconnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncDisconnectReq:
	st	AL,@(0,Y)
?LBB23:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'7C22
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendDmPrim
?LBE23:
?LBE_connectionHandleSyncDisconnectReq:
	leavel	#3
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSyncDisconnectInd:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncDisconnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncDisconnectInd:
	st	AL,@(H'0005,Y)
?LBB24:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L46
	cmp	AL,#H'0000
	beq	?L45
?L46:
?LBB25:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700E
	bsr	$_MessageSend
?L45:
	ld	AH,@(H'0005,Y)
?LBE25:
	add	AH,#H'0007
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
?LBE24:
?LBE_connectionHandleSyncDisconnectInd:
	leavel	#10
;.stabn	192,0,0,?LBB24
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;.stabn	224,0,0,?LBE24
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncDisconnectCfm:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncDisconnectCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncDisconnectCfm:
	st	AL,@(H'0005,Y)
?LBB26:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L49
	cmp	AL,#H'0000
	beq	?L48
?L49:
?LBB27:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700E
	bsr	$_MessageSend
?L48:
	ld	AH,@(H'0005,Y)
?LBE27:
	add	AH,#H'0006
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
?LBE26:
?LBE_connectionHandleSyncDisconnectCfm:
	leavel	#9
;.stabn	192,0,0,?LBB26
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;.stabn	224,0,0,?LBE26
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncRenegotiateReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRenegotiateReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRenegotiateReq:
	st	AL,@(H'0002,Y)
?LBB28:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L51
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendSyncConnectCfmToClient
	bra	(?L50)
?L51:
?LBB29:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'7C25
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?L50:
?LBE29:
?LBE28:
?LBE_connectionHandleSyncRenegotiateReq:
	leavel	#5
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncRenegotiateInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRenegotiateInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRenegotiateInd:
	st	AL,@(H'0001,Y)
?LBB30:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L56
	cmp	AL,#H'0000
	beq	?L54
?L56:
?LBB31:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700F
	bsr	$_MessageSend
?L54:
?LBE31:
?LBE30:
?LBE_connectionHandleSyncRenegotiateInd:
	leavel	#5
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncRenegotiateCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRenegotiateCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRenegotiateCfm:
	st	AL,@(H'0001,Y)
?LBB32:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L59
	cmp	AL,#H'0000
	beq	?L57
?L59:
?LBB33:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700F
	bsr	$_MessageSend
?L57:
?LBE33:
?LBE32:
?LBE_connectionHandleSyncRenegotiateCfm:
	leavel	#5
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 107 used[1] = 5 total = 112
;# Function pattern *movqi_fetch_general used[0] = 55 total = 55
;# Function pattern *movqi_store_y_relative used[0] = 61 used[1] = 2 total = 63
;# Function pattern *movqi_fetch_y_relative used[0] = 103 total = 103
;# Function pattern *movhi_store_y_relative used[0] = 2 used[2] = 2 total = 4
;# Function pattern *movhi_fetch_general used[0] = 14 total = 14
;# Function pattern *movhi_store_general used[0] = 7 used[1] = 2 total = 9
;# Function pattern *movqi_store_general used[0] = 37 total = 37
;# Function pattern *movqi2 used[0] = 63 total = 63
;# Function pattern *movqi2b used[0] = 1 used[1] = 9 total = 10
;# Function pattern *movhi used[2] = 3 used[3] = 2 total = 5
;# Function pattern *addqi0-framep used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 103 used[2] = 2 used[3] = 6 total = 111
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *umulqihi3_const used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 5 total = 5
;# Function pattern jump used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 30 total = 30
;# Function pattern *call_value1 used[0] = 34 total = 34
;# Function pattern addsi3+1 used[0] = 14 total = 14
;# Function pattern addsi3+2 used[0] = 8 total = 8
;# Function pattern addsi3+3 used[0] = 1 total = 1
;# Function pattern addhi3-2 used[0] = 3 total = 3
;# Function pattern addhi3-1 used[0] = 3 total = 3
;# Function pattern addqi3-2 used[0] = 4 total = 4
;# Function pattern addqi3-1 used[0] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 12 total = 12
;# Function pattern extendhfsf2+4 used[0] = 7 total = 7
	MODULE	l2cap_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_getNextQosOpt:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_getNextQosOpt ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_getNextQosOpt:
	st	AL,@H'fffa
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/1 peephole
	bsr	$dofetch_X
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	asl	#H'0018
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@H'fffa
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	asl	#H'0008
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
?LBE_getNextQosOpt:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_setQosToDefault:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_setQosToDefault ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_setQosToDefault:
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0007
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'FFFF
	ld	AL,#H'FFFF
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0009
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'FFFF
	ld	AL,#H'FFFF
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
?LBE_setQosToDefault:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_isQosDefault:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_isQosDefault ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_isQosDefault:
	st	AL,@H'fffb
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fffa
	ld	AL,@H'ffff
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L4
	ld	X,@H'fffb
	add	X,#H'0001
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	bne	?L4
	ld	X,@H'fffb
	add	X,#H'0003
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff9
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	bne	?L4
	ld	X,@H'fffb
	add	X,#H'0005
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	bne	?L4
	ld	X,@H'fffb
	add	X,#H'0007
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	xor	AL,#H'FFFF
	xor	AH,#H'FFFF
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	bne	?L4
	ld	X,@H'fffb
	add	X,#H'0009
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	xor	AL,#H'FFFF
	xor	AH,#H'FFFF
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	bne	?L4
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L4:
	ld	AL,@H'fffa
?LBE_isQosDefault:
	leavel	#10
;# begin scan referenced symbols
;# end scan referenced symbols
_convertToQosFlow_t:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_convertToQosFlow_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_convertToQosFlow_t:
	st	AL,@H'fff8
	st	AH,@H'fffa
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fffa
	add	X,#H'0003
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	X,@H'fff8
	add	X,#H'0005
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fffa
	add	X,#H'0005
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	X,@H'fff8
	add	X,#H'0007
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fffa
	add	X,#H'0007
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	X,@H'fff8
	add	X,#H'0009
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fffa
	add	X,#H'0009
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
?LBE_convertToQosFlow_t:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionGetTaskFromMap 0 ; (Non-const ref)
;# end scan referenced symbols
_getTask:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_getTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_getTask:
	ld	AH,@$XAP_AL
?LBB2:
	ld	AL,#H'0000
	bsr	$_connectionGetTaskFromMap
?LBE2:
?LBE_getTask:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionDeleteTaskMap 0 ; (Non-const ref)
;# end scan referenced symbols
_deleteTaskMap:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_deleteTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_deleteTaskMap:
	ld	AH,@$XAP_AL
?LBB3:
	ld	AL,#H'0000
	bsr	$_connectionDeleteTaskMap
?LBE3:
?LBE_deleteTaskMap:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT _setQosToDefault 0 ; (Non-const ref)
.IMPORT $_connectionAddInstance 0 ; (Non-const ref)
;# end scan referenced symbols
_addConnection:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_addConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_addConnection:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y); subreg eliminated automatically
	ld	X,@(H'000A,Y)
	st	X,@(H'0003,Y); subreg eliminated automatically
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0004,Y); subreg eliminated automatically
	ld	X,@(H'000C,Y)
	st	X,@(H'0005,Y); subreg eliminated automatically
?LBB4:
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0002
	st	X,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0022
	st	X,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'000D,Y)
	cmp	X,#H'0000
	beq	?L15
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'000D,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(H'000D,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'000C
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'000E
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'0010
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0018
	st	X,@H'fffc
	bsr	$dostore32_AH
	bra	(?L16)
?L15:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,#H'0030
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'000A
	st	X,@H'fffc
	ld	AL,#-H'0001
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'000B
	st	X,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'000C
	bsr	_setQosToDefault
	ld	X,@(H'0006,Y)
	add	X,#H'0017
	st	X,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
?L16:
	ld	X,@(H'0006,Y)
	add	X,#H'001D
	st	X,@H'fffc
	ld	AL,@(H'000F,Y)
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'001E
	st	X,@H'fffc
	ld	AL,@(H'0002,Y); subreg fetch eliminated automatically
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y); subreg fetch eliminated automatically
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0020
	st	X,@H'fffc
	ld	AL,@(H'0004,Y); subreg fetch eliminated automatically
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0021
	st	X,@H'fffc
	ld	AL,@(H'0005,Y); subreg fetch eliminated automatically
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'001A
	st	X,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'001C
	st	X,@H'fffc
	ld	AL,@(H'000E,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'000F,Y)
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'001B
	st	X,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0022
	st	X,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	bsr	$_connectionAddInstance
?LBE4:
?LBE_addConnection:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_connectionDeleteInstance 0 ; (Non-const ref)
;# end scan referenced symbols
_deleteConnection:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_deleteConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_deleteConnection:
	ld	X,@(H'000F,Y)
?LBB5:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	st	X,@(H'0006,Y)
	ld	AL,#H'0000
	bsr	$_connectionDeleteInstance
?LBE5:
?LBE_deleteConnection:
	leavel	#15
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_connectionGetInstance 0 ; (Non-const ref)
;# end scan referenced symbols
_getConnection:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_getConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_getConnection:
	ld	X,@(H'000F,Y)
?LBB6:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	st	X,@(H'0006,Y)
	ld	AL,#H'0000
	bsr	$_connectionGetInstance
?LBE6:
?LBE_getConnection:
	leavel	#15
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
_sendL2capRegisterCfmToTask:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capRegisterCfmToTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capRegisterCfmToTask:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7030
	bsr	$_MessageSend
?LBE7:
?LBE_sendL2capRegisterCfmToTask:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
;# end scan referenced symbols
_sendL2capConnectCfmToTask:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capConnectCfmToTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capConnectCfmToTask:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0048
	bsr	$_MessageCancelFirst
?LBB9:
	ld	AL,#H'0011
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0003
	st	X,@H'fffc
	ld	AL,@(H'000B,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0009,Y)
	bsr	$dostore_AL
	ld	X,@(H'000A,Y)
	cmp	X,#H'0000
	beq	?L22
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'000A,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'000A,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore_AL
	bra	(?L23)
?L22:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	bsr	_setQosToDefault
?L23:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7032
	bsr	$_MessageSend
?LBE9:
?LBE8:
?LBE_sendL2capConnectCfmToTask:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
;# end scan referenced symbols
_sendL2capDisconnectIndToTask:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capDisconnectIndToTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capDisconnectIndToTask:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB10:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7034
	bsr	$_MessageSend
?LBE10:
?LBE_sendL2capDisconnectIndToTask:
	leavel	#5
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
.IMPORT $_VmSendL2capPrim 0 ; (Non-const ref)
;# end scan referenced symbols
_sendL2capConnectRes:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capConnectRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capConnectRes:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB11:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0004
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0004,Y)
	bsr	$dostore_AH
	bsr	$_VmSendL2capPrim
?LBE11:
?LBE_sendL2capConnectRes:
	leavel	#4
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
.IMPORT _isQosDefault 0 ; (Non-const ref)
.IMPORT _convertToQosFlow_t 0 ; (Non-const ref)
;# end scan referenced symbols
_sendL2capConfigReq:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capConfigReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capConfigReq:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB12:
	ld	AL,#H'0011
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,#H'0007
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(0,Y)
	bsr	$dostore_AL
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'02A0
	beq	?L28
	ld	AH,#H'0001
	st	AH,@(H'0002,Y)
?L28:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#-H'0001
	beq	?L29
	ld	AH,@(H'0002,Y)
	or	AH,#H'0002
	st	AH,@(H'0002,Y)
?L29:
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'000F
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'000C
	bsr	_isQosDefault
	cmp	AL,#H'0000
	bne	?L30
	ld	AL,@(H'0002,Y)
	or	AL,#H'0004
	st	AL,@(H'0002,Y)
?L30:
	ld	AL,@(H'0001,Y)
	add	AL,#H'000C
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	bsr	_convertToQosFlow_t
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0010
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	bsr	$_VmSendL2capPrim
?LBE12:
?LBE_sendL2capConfigReq:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
_sendL2capConfigRes:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capConfigRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capConfigRes:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB13:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AL,#H'0008
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	cmp	AL,#H'0000
	beq	?L35
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_VmGetHandleFromPointer
	st	X,@H'ffff
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L37)
?L35:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,#H'0000
?L37:
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	bsr	$_VmSendL2capPrim
?LBE13:
?LBE_sendL2capConfigRes:
	leavel	#6
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
_sendL2capDisconnectReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capDisconnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capDisconnectReq:
	st	AL,@(0,Y)
?LBB14:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0080
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	bsr	$_VmSendL2capPrim
?LBE14:
?LBE_sendL2capDisconnectReq:
	leavel	#3
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
;# end scan referenced symbols
_sendInterlockL2capDisconnectRsp:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendInterlockL2capDisconnectRsp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendInterlockL2capDisconnectRsp:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB15:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0049
	bsr	$_MessageSend
?LBE15:
?LBE_sendInterlockL2capDisconnectRsp:
	leavel	#6
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
.IMPORT _getConnection 0 ; (Non-const ref)
.IMPORT $_StreamL2capSink 0 ; (Non-const ref)
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
.IMPORT _sendL2capConnectCfmToTask 0 ; (Non-const ref)
.IMPORT $_MessageSinkTask 0 ; (Non-const ref)
.IMPORT _deleteConnection 0 ; (Non-const ref)
.IMPORT $_connectionStoreCompletedConnection 0 ; (Non-const ref)
;# end scan referenced symbols
_configDanceCompleted:
	enterl	#17
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_configDanceCompleted ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_configDanceCompleted:
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
?LBB16:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bsr	_getConnection
	st	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L41
	add	AL,#H'001A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L43
	ld	AL,#H'0001
	bsr	$dostore_AL
	bra	(?L41)
?L43:
?LBB17:
	ld	AL,@(H'000B,Y)
	bsr	$_StreamL2capSink
	st	AL,@(H'000E,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	ld	AL,@(H'000C,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'000D,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'000C
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,#H'0000
	bsr	_sendL2capConnectCfmToTask
	ld	AL,@(H'000E,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_MessageSinkTask
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'000B,Y)
	bsr	_deleteConnection
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_connectionStoreCompletedConnection
?L41:
?LBE17:
?LBE16:
?LBE_configDanceCompleted:
	leavel	#17
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
.IMPORT _sendL2capDisconnectReq 0 ; (Non-const ref)
;# end scan referenced symbols
_configMoreFlagSet:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_configMoreFlagSet ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_configMoreFlagSet:
	st	AH,@(H'0001,Y)
?LBB18:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bsr	_getConnection
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'001B
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0002
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_StreamL2capSink
	bsr	_sendL2capDisconnectReq
?LBE18:
?LBE_configMoreFlagSet:
	leavel	#4
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
.IMPORT _getNextQosOpt 0 ; (Non-const ref)
;# end scan referenced symbols
_extractConfigOptions:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_extractConfigOptions ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_extractConfigOptions:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB19:
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	X,@H'ffff
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'02A0
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#-H'0001
	bsr	$dostore_AH
	ld	AL,@(H'000E,Y)
	bsr	_setQosToDefault
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0004
	bne	?L49
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0001
	bne	?L49
	ld	X,@H'fffc
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	asl	#H'0008
	ld	AH,@(0,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	or	AL,@$XAP_AH
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L50)
?L49:
?LBB20:
	ld	AL,@(0,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L50
	ld	AL,@(H'000E,Y)
	add	AL,#H'0003
	st	AL,@(H'0006,Y)
?L65:
?LBB21:
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#-H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	and	AL,#H'0080
	cmp	AL,#H'0000
	bne	?L54
	cmp	AH,#(H'0001+H'0004)
	bcc	?L68
	ld	AL,@$XAP_AH
	and	AL,#H'007F
	cmp	AL,#H'0001
	bne	?L57
	ld	AH,@(0,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0008
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	or	AL,@$XAP_AH
	st	X,@H'ffff
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L67)
?L57:
	ld	AL,@$XAP_AH
	and	AL,#H'007F
	cmp	AL,#H'0002
	bne	?L59
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0008
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	or	AL,@$XAP_AH
	st	X,@H'ffff
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L67:
	bsr	$dostore_AL
	bra	(?L54)
?L59:
	ld	AL,@$XAP_AH
	and	AL,#H'007F
	cmp	AL,#H'0003
	bne	?L61
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(H'0005,Y)
	ld	AL,@(0,Y)
	bsr	_getNextQosOpt
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0004
	bsr	_getNextQosOpt
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'000E,Y)
	add	AL,#H'0005
	st	AL,@(H'0007,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0008
	bsr	_getNextQosOpt
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'000E,Y)
	add	AH,#H'0007
	st	AH,@(H'0008,Y)
	ld	AL,@(0,Y)
	add	AL,#H'000C
	bsr	_getNextQosOpt
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'000E,Y)
	add	AL,#H'0009
	st	AL,@(H'0009,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0010
	bsr	_getNextQosOpt
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bra	(?L54)
?L61:
	ld	AL,@$XAP_AH
	and	AL,#H'007F
	cmp	AL,#H'0004
	beq	?L54
?L68:
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0002,Y)
	st	AL,@H'fffc
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
?L54:
	ld	AH,@(0,Y)
	add	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	sub	AL,@(H'0004,Y)
	st	AL,@(H'0001,Y)
?LBE21:
	cmp	AL,#H'0000
	bne	?L65
?L50:
?LBE20:
?LBE19:
	ld	AL,@(H'0002,Y)
?LBE_extractConfigOptions:
	leavel	#12
;.stabn	192,0,0,?LBB19
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT $_MessageSinkGetTask 0 ; (Non-const ref)
.IMPORT _sendL2capDisconnectIndToTask 0 ; (Non-const ref)
.IMPORT $_connectionRemoveCompletedConnection 0 ; (Non-const ref)
;# end scan referenced symbols
_handleDisconnect:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleDisconnect ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleDisconnect:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB22:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,@(H'0006,Y)
	bsr	_getConnection
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L79
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y); movqi2b+1 peephole
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AH
	add	X,#H'0007
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AH,#H'001B
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_sendL2capConnectCfmToTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0006,Y)
	bsr	_deleteConnection
	bra	(?L78)
?L79:
?LBB23:
	ld	AL,@(H'0006,Y)
	bsr	$_StreamL2capSink
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L78
	ld	AH,@(H'0007,Y)
?LBB24:
	cmp	AH,#H'0000
	beq	?L83
	cmp	AH,#-H'1112
	beq	?L86
	bra	(?L87)
?L83:
	ld	AL,@(H'000D,Y)
	cmp	AL,#H'0000
	beq	?L84
	ld	AH,#H'0004
	bra	(?L90)
?L84:
	ld	AL,#H'0000
	bra	(?L89)
?L86:
	ld	AH,#H'0001
?L90:
	st	AH,@(H'000A,Y)
	bra	(?L82)
?L87:
	ld	AL,#H'0002
?L89:
	st	AL,@(H'000A,Y)
?L82:
	ld	AL,@(H'0009,Y)
	bsr	$_MessageSinkGetTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	_sendL2capDisconnectIndToTask
	ld	AL,@(H'0006,Y)
	bsr	$_connectionRemoveCompletedConnection
?L78:
?LBE24:
?LBE23:
?LBE22:
?LBE_handleDisconnect:
	leavel	#13
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
.IMPORT $_connectionAddTaskMap 0 ; (Non-const ref)
.IMPORT _sendL2capRegisterCfmToTask 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capRegisterReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capRegisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capRegisterReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB25:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L97
?LBB26:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_X
	st	X,@H'fff8
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L98
	ld	AH,@$XAP_AL
	bra	(?L99)
?L98:
	ld	AH,#H'0000
?L99:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,@H'fff8
	bsr	$_connectionAddTaskMap
	cmp	AL,#H'0000
	beq	?L100
?LBB27:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendL2capPrim
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE27:
	bra	(?L96)
?L100:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_sendL2capRegisterCfmToTask
?LBE26:
	bra	(?L96)
?L97:
?LBB28:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0043
	bsr	$_MessageSendConditionallyOnTask
?L96:
?LBE28:
?LBE25:
?LBE_connectionHandleL2capRegisterReq:
	leavel	#7
;.stabn	192,0,0,?LBB26
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;.stabn	224,0,0,?LBE26
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleL2capRegisterCfm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capRegisterCfm:
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L106
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0000
	bsr	_sendL2capRegisterCfmToTask
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L106:
?LBE_connectionHandleL2capRegisterCfm:
	leavel	#4
;# begin scan referenced symbols
.IMPORT _deleteTaskMap 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capUnregisterReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capUnregisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capUnregisterReq:
	st	AL,@(H'0001,Y)
?LBB29:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_deleteTaskMap
	cmp	AL,#H'0000
	beq	?L110
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bra	(?L112)
?L110:
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0001
?L112:
	bsr	$dostore_AL
	ld	X,@(H'0002,Y)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7031
	bsr	$_MessageSend
?LBE29:
?LBE_connectionHandleL2capUnregisterReq:
	leavel	#5
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;# begin scan referenced symbols
.IMPORT $_connectionFindTaskMap 0 ; (Non-const ref)
.IMPORT $_connectionGetPsmTaskMatch 0 ; (Non-const ref)
.IMPORT $_connectionCompletedConnectionsGetPsmTaskMatch 0 ; (Non-const ref)
.IMPORT $_connectionGetPsmBdaddrMatch 0 ; (Non-const ref)
.IMPORT $_connectionCompletedConnectionsGetPsmBdaddrMatch 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT _addConnection 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capConnectReq:
	enterl	#23
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConnectReq:
	st	AL,@(H'0008,Y)
?LBB30:
	add	AL,#H'0005
	st	AL,@(H'000B,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,#H'0000
	bsr	$_connectionFindTaskMap
	st	AL,@(H'0009,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_connectionGetPsmTaskMatch
	st	AL,@(H'000A,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_connectionCompletedConnectionsGetPsmTaskMatch
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'000A,Y)
	add	X,@$XAP_AL
	st	X,@(H'000A,Y)
	ld	AH,@(H'0009,Y)
	cmp	AH,#H'0000
	beq	?L115
	add	AH,#H'0003
	st	AH,@(H'000C,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L115
	ld	AL,@(H'0008,Y)
?LBB31:
	add	AL,#H'0001
	st	AL,@(H'000E,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	add	X,#H'0002
	st	X,@(H'000F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0008,Y)
	add	AH,#H'0003
	st	AH,@(H'0010,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0004
	st	AL,@(H'0011,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0004,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionGetPsmBdaddrMatch
	st	AL,@(H'000D,Y)
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	X,@(H'000F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0010,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
	ld	X,@(H'0011,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0004,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionCompletedConnectionsGetPsmBdaddrMatch
	ld	AH,@$XAP_AL
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0004
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@(H'000A,Y)
	cmp	X,@$XAP_AL
	beq	?L117
	ld	AL,@(H'000D,Y)
	cmp	AL,#H'0000
	beq	?L118
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'000D,Y)
	cmp	X,@$XAP_AL
	bne	?L117
?L118:
	cmp	AH,#H'0000
	beq	?L115
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L115
?L117:
	ld	AH,@(H'0008,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0009
	bsr	_sendL2capConnectCfmToTask
	bra	(?L114)
?L115:
?LBE31:
?LBB32:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0012,Y)
	st	AL,@H'fffc
	ld	AL,#H'0003
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	X,@(H'0008,Y)
	add	X,#H'0005
	st	X,@(H'0013,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0012,Y)
	add	AL,#H'0002
	ld	AH,@(H'0008,Y)
	add	AH,#H'0001
	st	AH,@(H'0014,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0008,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0012,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0012,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0012,Y)
	bsr	$_VmSendL2capPrim
?LBE32:
	ld	X,@(H'0014,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0008,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0007
	st	AL,@(H'0004,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0006,Y)
	ld	X,@(H'0013,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0000
	bsr	_addConnection
?L114:
?LBE30:
?LBE_connectionHandleL2capConnectReq:
	leavel	#23
;.stabn	192,0,0,?LBB30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	224,0,0,?LBE30
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
.IMPORT _getTask 0 ; (Non-const ref)
.IMPORT _sendL2capConfigReq 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capConnectCfm:
	enterl	#22
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConnectCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConnectCfm:
	st	AL,@(H'000A,Y)
	ld	AH,@$XAP_AL
?LBB33:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'000A,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L127
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bra	(?L139)
?L127:
	ld	AH,@(H'000A,Y)
	add	AH,#H'0007
	st	AH,@(H'000C,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getConnection
	st	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	bne	?L128
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	st	X,@H'ffff
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L139:
	bsr	$dofetch_AL
	ld	AH,#H'0000
	bsr	_getConnection
	st	AL,@(H'000B,Y)
?L128:
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	bne	?L130
	ld	AH,@(H'000A,Y)
?LBB34:
	add	AH,#H'0006
	st	AH,@(H'000E,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_StreamL2capSink
	st	AL,@(H'000D,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0007
	st	AL,@(H'000F,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_getTask
	ld	AH,@$XAP_AL
	ld	X,@(H'000F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@H'ffff
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0003
	bsr	_sendL2capConnectCfmToTask
	ld	AH,@(H'000D,Y)
	cmp	AH,#H'0000
	beq	?L126
	ld	AL,@$XAP_AH
	bsr	_sendL2capDisconnectReq
?LBE34:
	bra	(?L126)
?L130:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0006
	st	AL,@(H'0010,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'000A,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L133
	ld	X,@(H'0010,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'000B,Y)
	bsr	_sendL2capConfigReq
?LBB35:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0011,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0011,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'000A,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0010,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0011,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	st	AL,@H'fffa
	ld	AL,@(H'0011,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0018
	st	AH,@H'fffc
	bsr	$dofetch32_fff8
	ld	AL,@H'fff8
	smult	#H'03E8
	ld	X,@$XAP_AL
	ld	AL,@H'fff9
	umult	#H'03E8
	add	AH,@$XAP_UXL
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fffa
	ld	AH,#H'0048
	bsr	$_MessageSendLater
?LBE35:
	bra	(?L126)
?L133:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L135
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	bra	(?L126)
?L135:
	ld	AL,@(H'000A,Y)
?LBB36:
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#-H'2222
	bne	?L137
	ld	AH,#H'0006
	bra	(?L138)
?L137:
	ld	AH,#H'0004
?L138:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0007
	st	AL,@(H'0012,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	add	AL,#H'0006
	st	AL,@(H'0013,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000B,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_sendL2capConnectCfmToTask
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	X,@(H'0012,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0013,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_deleteConnection
?L126:
?LBE36:
?LBE33:
?LBE_connectionHandleL2capConnectCfm:
	leavel	#22
;.stabn	192,0,0,?LBB33
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;.stabn	224,0,0,?LBE33
;# begin scan referenced symbols
.IMPORT _configDanceCompleted 0 ; (Non-const ref)
.IMPORT _configMoreFlagSet 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capConfigCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConfigCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConfigCfm:
	st	AL,@(H'0001,Y)
?LBB37:
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_getConnection
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L147
	add	AL,#H'001B
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L147
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L149
	ld	AL,@(H'0001,Y)
	add	AL,#H'0012
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L150
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_configDanceCompleted
	bra	(?L147)
?L150:
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_configMoreFlagSet
	bra	(?L147)
?L149:
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'001B
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0005
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_StreamL2capSink
	bsr	_sendL2capDisconnectReq
?L147:
?LBE37:
?LBE_connectionHandleL2capConfigCfm:
	leavel	#5
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
;# begin scan referenced symbols
.IMPORT $_VmGetPointerFromHandle 0 ; (Non-const ref)
.IMPORT _extractConfigOptions 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_realloc 0 ; (Non-const ref)
.IMPORT _sendL2capConfigRes 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capConfigInd:
	enterl	#16
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConfigInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConfigInd:
	st	AL,@(H'0005,Y)
?LBB38:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getConnection
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L157
	add	AL,#H'001B
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L157
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L159
?LBB39:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0005,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0001,Y)
	ld	AH,@(H'000A,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0005,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_extractConfigOptions
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L160
	ld	AH,#H'0003
	st	AH,@(H'0009,Y)
	bra	(?L161)
?L160:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L162
	ld	AL,@(H'0007,Y)
	bsr	$_free
?L162:
	ld	X,#H'0000
	st	X,@(H'0008,Y)
	st	X,@(H'0007,Y)
	st	X,@(H'0009,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@(H'000B,Y)
	ld	AH,@(H'0003,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bcc	?L163
?LBB40:
	ld	AL,#H'0004
	bsr	$_malloc
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L164
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0002
	bsr	$dostore_AL
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	ld	X,@(H'0007,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	lsr	#H'0008
	ld	AL,@(H'0007,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dostore_AH
	ld	X,#H'0004
	st	X,@(H'0008,Y)
	bra	(?L166)
?L164:
	ld	AH,#H'0002
	st	AH,@(H'0009,Y)
?LBE40:
	bra	(?L166)
?L163:
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dostore_AL
?L166:
	ld	AH,@(H'0006,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L167
	ld	AL,@(H'0004,Y)
	cmp	AL,#-H'0001
	beq	?L167
	ld	AL,@(H'0007,Y)
?LBB41:
	cmp	AL,#H'0000
	beq	?L168
	ld	AH,@(H'0008,Y)
	add	AH,#H'0004
	bsr	$_realloc
	bra	(?L183)
?L168:
	ld	AL,#H'0004
	bsr	$_malloc
?L183:
	st	AL,@(H'0007,Y)
	ld	X,@(H'0007,Y)
	cmp	X,#H'0000
	beq	?L170
	ld	AH,#H'0001
	st	AH,@(H'0009,Y)
	ld	AL,@$XAP_UXL
	add	AL,@(H'0008,Y)
	st	AL,@H'fffc
	ld	AH,#H'0002
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'00FF
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@(H'0008,Y)
	add	X,#H'0004
	st	X,@(H'0008,Y)
	bra	(?L172)
?L170:
	ld	AH,#H'0002
	st	AH,@(H'0009,Y)
	ld	AL,@(H'0007,Y)
	bsr	$_free
?LBE41:
	bra	(?L172)
?L167:
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0006,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
?L172:
	ld	AH,@(H'0006,Y)
	add	AH,#H'0017
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L173
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0001
	beq	?L177
	ld	AL,#H'0002
	st	AL,@(H'0009,Y)
	bra	(?L176)
?L173:
	ld	AH,@(H'000A,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'FFFF
	bne	?L198
	cmp	AL,#H'FFFF
	beq	?L178
?L198:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'FFFF
	bne	?L177
	cmp	AL,#H'FFFF
	bne	?L177
?L178:
	ld	X,#H'0002
	st	X,@(H'0009,Y)
	bra	(?L176)
?L177:
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'000A,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'000A,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore_AL
?L176:
	ld	AH,@(H'0009,Y)
	cmp	AH,#H'0000
	bne	?L161
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_configDanceCompleted
?L161:
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendL2capConfigRes
	ld	AL,@(H'000A,Y)
	bra	(?L184)
?L159:
	ld	AH,@(H'0005,Y)
?LBE39:
	add	AH,#H'0002
	st	AH,@(H'000C,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendL2capConfigRes
	ld	AH,@(H'0006,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_configMoreFlagSet
	ld	AL,@(H'0005,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L157
	ld	X,@(H'0005,Y)
	add	X,#H'0005
	st	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?L184:
	bsr	$_free
?L157:
?LBE38:
?LBE_connectionHandleL2capConfigInd:
	leavel	#16
;.stabn	192,0,0,?LBB38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	224,0,0,?LBE38
;# begin scan referenced symbols
.IMPORT $_createTaskInstance 0 ; (Non-const ref)
.IMPORT _sendL2capConnectRes 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capConnectInd:
	enterl	#29
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConnectInd:
	st	AL,@(H'000D,Y)
	ld	AH,@$XAP_AL
?LBB42:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'000D,Y)
	add	AH,#H'0008
	st	AH,@(H'000E,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'000D,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_getConnection
	cmp	AL,#H'0000
	bne	?L203
?LBB43:
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	AL,#H'0000
	bsr	$_connectionFindTaskMap
	st	AL,@(H'000F,Y)
	cmp	AL,#H'0000
	beq	?L204
	ld	AH,@$XAP_AL
?LBB44:
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L205
?LBB45:
	add	AL,#H'0004
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0001)
	bcc	?L206
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'000F,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bra	(?L219)
?L206:
	ld	AL,@(H'000D,Y)
?LBB46:
	add	AL,#H'0008
	st	AL,@(H'0012,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	X,#H'0001
	st	X,@(H'0013,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0002
	st	AH,@(H'0014,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AL,#H'0003
	st	AL,@(H'0015,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'000B+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0004,Y)
	ld	X,@(H'0012,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionGetPsmBdaddrMatch
	st	AL,@(H'0011,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0013,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0014,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
	ld	X,@(H'0015,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'000C+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0004,Y)
	ld	X,@(H'0012,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionCompletedConnectionsGetPsmBdaddrMatch
	ld	AH,@$XAP_AL
	ld	AL,@(H'000B,Y)
	add	AL,@(H'000C,Y)
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'000B+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	bsr	$dostore_AL
	cmp	AL,#H'0000
	beq	?L208
	ld	AL,@(H'0011,Y)
	cmp	AL,#H'0000
	bne	?L209
	cmp	AH,#H'0000
	beq	?L208
?L209:
	ld	X,@(H'0011,Y)
	cmp	X,#H'0000
	bne	?L210
	st	AH,@(H'0011,Y)
?L210:
	ld	AH,@(H'000F,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'000B,Y)
	add	AL,#H'0004
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	bne	?L207
	bra	(?L223)
?L208:
	ld	AH,@(H'000F,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'000F,Y)
	add	X,#H'0002
	st	X,@H'fffc
?L219:
	bsr	$dofetch_AH
	bsr	$_createTaskInstance
	st	AL,@(H'0011,Y)
?L207:
?LBE46:
	ld	AH,@(H'0011,Y)
	st	AH,@(H'0010,Y)
	cmp	AH,#H'0000
	beq	?L223
	ld	AH,@(H'000F,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L216
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@(H'0011,Y)
	bsr	$_createTaskInstance
	st	AL,@(H'0010,Y)
	cmp	AL,#H'0000
	bne	?L216
?L223:
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'000D,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bra	(?L221)
?L205:
	ld	AH,@(H'000F,Y)
?LBE45:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0010,Y)
?L216:
?LBB47:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0007,Y)
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	X,#H'0001
	st	X,@(H'0016,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0002
	st	AH,@(H'0017,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AL,#H'0003
	st	AL,@(H'0018,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@(H'000D,Y)
	add	X,#H'0008
	st	X,@(H'0019,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'000D,Y)
	add	AH,#H'0007
	st	AH,@(H'001A,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y); movqi2b+1 peephole
	ld	AH,#H'7033
	bsr	$_MessageSend
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0016,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0017,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
	ld	X,@(H'0018,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000D,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0006,Y)
	ld	X,@(H'0019,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'001A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_addConnection
?LBE47:
?LBE44:
	bra	(?L202)
?L204:
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bra	(?L220)
?L203:
?LBE43:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
?L220:
	ld	AH,@(H'000D,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
?L221:
	bsr	$dofetch_AL
	ld	X,@(H'000D,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendL2capConnectRes
?L202:
?LBE42:
?LBE_connectionHandleL2capConnectInd:
	leavel	#29
;.stabn	192,0,0,?LBB42
;.stabn	192,0,0,?LBB43
;.stabn	192,0,0,?LBB44
;.stabn	192,0,0,?LBB45
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;.stabn	224,0,0,?LBE45
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
;.stabn	224,0,0,?LBE44
;.stabn	224,0,0,?LBE43
;.stabn	224,0,0,?LBE42
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleL2capConnectRes:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConnectRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConnectRes:
	st	AL,@(H'0003,Y)
?LBB48:
	add	AL,#H'0002
	st	AL,@(H'0005,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getConnection
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L235
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L237
	ld	X,@(H'0003,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0010
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0012
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	add	AH,#H'0018
	st	AH,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0014
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@(H'0007,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y); movqi2b+1 peephole
	add	AL,#H'001C
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendL2capConnectRes
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0004,Y)
	bsr	_sendL2capConfigReq
?LBB49:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0008,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	st	AL,@H'fffa
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch32_fff8; movhi_fetch_general+1 peephole
	ld	AL,@H'fff8
	smult	#H'03E8
	ld	X,@$XAP_AL
	ld	AL,@H'fff9
	umult	#H'03E8
	add	AH,@$XAP_UXL
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fffa
	ld	AH,#H'0048
	bsr	$_MessageSendLater
?LBE49:
	bra	(?L235)
?L237:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@(H'0009,Y)
	st	AL,@H'ffff
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	add	X,#H'001C
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendL2capConnectRes
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_deleteConnection
?L235:
?LBE48:
?LBE_connectionHandleL2capConnectRes:
	leavel	#12
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	224,0,0,?LBE48
;# begin scan referenced symbols
.IMPORT $_SinkIsValid 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capDisconnectReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capDisconnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capDisconnectReq:
	st	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L242
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L242
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	_sendL2capDisconnectReq
	bra	(?L241)
?L242:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0003
	bsr	_sendL2capDisconnectIndToTask
?L241:
?LBE_connectionHandleL2capDisconnectReq:
	leavel	#5
;# begin scan referenced symbols
.IMPORT _handleDisconnect 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capDisconnectCfm:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capDisconnectCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capDisconnectCfm:
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AH,#H'0003
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_handleDisconnect
?LBE_connectionHandleL2capDisconnectCfm:
	leavel	#3
;# begin scan referenced symbols
.IMPORT _sendInterlockL2capDisconnectRsp 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capDisconnectInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capDisconnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capDisconnectInd:
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0003
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L248
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L248:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0000
	bsr	_handleDisconnect
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendInterlockL2capDisconnectRsp
?LBE_connectionHandleL2capDisconnectInd:
	leavel	#4
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleL2capConnectTimeout:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConnectTimeout ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConnectTimeout:
	st	AL,@(H'0001,Y)
?LBB50:
	add	AL,#H'0002
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_getConnection
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L250
?LBB51:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_StreamL2capSink
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'001B
	st	AL,@H'fffc
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L252
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L252
	ld	AL,@(H'0004,Y)
	bsr	_sendL2capDisconnectReq
	bra	(?L250)
?L252:
?LBB52:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'000E
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendL2capPrim
?L250:
?LBE52:
?LBE51:
?LBE50:
?LBE_connectionHandleL2capConnectTimeout:
	leavel	#7
;.stabn	192,0,0,?LBB50
;.stabn	192,0,0,?LBB51
;.stabn	192,0,0,?LBB52
;.stabn	224,0,0,?LBE52
;.stabn	224,0,0,?LBE51
;.stabn	224,0,0,?LBE50
;# begin scan referenced symbols
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleQosSetupCfm:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleQosSetupCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleQosSetupCfm:
	st	AL,@(0,Y)
?LBB53:
	add	AL,#H'000D
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#hwrd(H'0001+H'222D)
	bcs	?L259
	bne	?L257
	cmp	AL,#lwrd(H'0001+H'222D)
	bcc	?L257
?L259:
?LBB54:
	ld	AL,#H'0011
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'0807
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0011
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0006
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0008
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0009
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@(0,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'000B
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'000D
	st	AL,@H'fffc
	ld	AL,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'61A8
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	add	AL,#H'000F
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'000F
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?L257:
?LBE54:
?LBE53:
?LBE_connectionHandleQosSetupCfm:
	leavel	#3
;.stabn	192,0,0,?LBB54
;.stabn	224,0,0,?LBE54
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleL2capInterlockDisconnectRsp:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capInterlockDisconnectRsp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capInterlockDisconnectRsp:
	st	AL,@(0,Y)
?LBB55:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'000F
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendL2capPrim
?LBE55:
?LBE_connectionHandleL2capInterlockDisconnectRsp:
	leavel	#3
;.stabn	192,0,0,?LBB55
;.stabn	224,0,0,?LBE55
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 251 used[1] = 9 total = 260
;# Function pattern *movqi_fetch_general used[0] = 121 used[1] = 1 total = 122
;# Function pattern *movqi_store_y_relative used[0] = 226 used[1] = 29 total = 255
;# Function pattern *movqi_fetch_y_relative used[0] = 306 total = 306
;# Function pattern *movhi_fetch_y_relative used[0] = 6 total = 6
;# Function pattern *movhi_store_y_relative used[0] = 8 used[1] = 2 total = 10
;# Function pattern *movhi_fetch_general used[0] = 34 total = 34
;# Function pattern *movhi_store_general used[0] = 23 used[1] = 6 total = 29
;# Function pattern *movqi_subreg_fetch_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_subreg_store_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_store_general used[0] = 98 total = 98
;# Function pattern *movqi2 used[0] = 142 total = 142
;# Function pattern *movqi2b used[0] = 33 used[1] = 13 total = 46
;# Function pattern *movhi used[2] = 5 used[3] = 3 total = 8
;# Function pattern *iorhi3 used[0] = 3 total = 3
;# Function pattern *addqi4-withytranslation used[0] = 6 used[1] = 3 total = 9
;# Function pattern *addqi0-framep used[0] = 16 total = 16
;# Function pattern *addqi2 used[0] = 247 used[2] = 8 used[3] = 31 total = 286
;# Function pattern *andqi3 used[0] = 6 total = 6
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *mulqihi3_const used[0] = 2 total = 2
;# Function pattern *umulqihi3_const used[0] = 2 total = 2
;# Function pattern *ashlhi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern one_cmplhi2 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 3 total = 3
;# Function pattern jump used[0] = 42 total = 42
;# Function pattern *call1 used[0] = 64 total = 64
;# Function pattern *call_value1 used[0] = 78 total = 78
;# Function pattern addsi3+1 used[0] = 65 total = 65
;# Function pattern addsi3+2 used[0] = 10 total = 10
;# Function pattern addsi3+3 used[0] = 2 total = 2
;# Function pattern addhi3-2 used[0] = 11 total = 11
;# Function pattern addhi3-1 used[0] = 11 total = 11
;# Function pattern subhi3+1 used[0] = 17 used[1] = 1 total = 18
;# Function pattern subhi3+2 used[0] = 10 total = 10
;# Function pattern addqi3-2 used[0] = 12 total = 12
;# Function pattern addqi3-1 used[0] = 7 total = 7
;# Function pattern zero_extendqihi2+1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+2 used[1] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 80 total = 80
;# Function pattern extendhfsf2+4 used[0] = 5 total = 5
;# Function pattern extendhfsf2+5 used[0] = 3 total = 3
	MODULE	rfc_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionAddInstance 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_addRfcommConnection:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_addRfcommConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_addRfcommConnection:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff9
	st	AL,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0004,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0022
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@H'fff9
	bsr	$_connectionAddInstance
?LBE2:
?LBE_addRfcommConnection:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_connectionGetId 0 ; (Non-const ref)
.IMPORT $_connectionGetInstance 0 ; (Non-const ref)
;# end scan referenced symbols
_getRfcommConnection:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_getRfcommConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_getRfcommConnection:
?LBB3:
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fff8
	ld	AH,@(H'000F,Y)
	bsr	$_connectionGetId
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,#H'0001; movqi2b+1 peephole
	bsr	$_connectionGetInstance
?LBE3:
?LBE_getRfcommConnection:
	leavel	#15
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_connectionDeleteInstance 0 ; (Non-const ref)
;# end scan referenced symbols
_deleteRfcommConnection:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_deleteRfcommConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_deleteRfcommConnection:
?LBB4:
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fff8
	ld	AH,@(H'000F,Y)
	bsr	$_connectionGetId
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,#H'0001; movqi2b+1 peephole
	bsr	$_connectionDeleteInstance
?LBE4:
?LBE_deleteRfcommConnection:
	leavel	#15
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_connectionDeleteTaskMap 0 ; (Non-const ref)
;# end scan referenced symbols
_deleteTaskMap:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_deleteTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_deleteTaskMap:
	ld	AH,@$XAP_AL
?LBB5:
	ld	AL,#H'0001
	bsr	$_connectionDeleteTaskMap
?LBE5:
?LBE_deleteTaskMap:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
_sendRfcommConnectInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommConnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommConnectInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	ld	AH,#H'7037
	bsr	$_MessageSend
?LBE6:
?LBE_sendRfcommConnectInd:
	leavel	#5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT $_connectionFindTaskMap 0 ; (Non-const ref)
.IMPORT $_createTaskInstance 0 ; (Non-const ref)
.IMPORT _sendRfcommConnectInd 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
_sendRfcommConnectionInd:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommConnectionInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommConnectionInd:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB7:
	ld	AL,#H'0001
	bsr	$_connectionFindTaskMap
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L7
?LBB8:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L8
	ld	AH,@(H'0004,Y)
?LBB9:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_createTaskInstance
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	st	AL,@H'fff8
	bsr	$dofetch_AL
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L12
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_createTaskInstance
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L12
?L14:
	ld	AL,#H'0000
	bra	(?L6)
?L8:
	ld	AH,@(H'0004,Y)
?LBE9:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
?L12:
	ld	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
	add	X,#H'0007
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0002,Y)
	bsr	_sendRfcommConnectInd
?LBE8:
	bra	(?L13)
?L7:
	bsr	$_Panic
?L13:
	ld	AL,#H'0001
?L6:
?LBE7:
?LBE_sendRfcommConnectionInd:
	leavel	#7
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
.IMPORT $_connectionConvertRfcommDisconnectStatus 0 ; (Non-const ref)
;# end scan referenced symbols
_sendRfcommDisconnectInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommDisconnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommDisconnectInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB10:
	cmp	AL,#H'0000
	beq	?L20
?LBB11:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_connectionConvertRfcommDisconnectStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7038
	bsr	$_MessageSend
?L20:
?LBE11:
?LBE10:
?LBE_sendRfcommDisconnectInd:
	leavel	#6
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
_sendRfcommConnectionCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommConnectionCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommConnectionCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB12:
	cmp	AL,#H'0000
	beq	?L23
?LBB13:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0007,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7036
	bsr	$_MessageSend
?L23:
?LBE13:
?LBE12:
?LBE_sendRfcommConnectionCfm:
	leavel	#5
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
_sendRfcommControlInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommControlInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommControlInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB14:
	cmp	AL,#H'0000
	beq	?L26
?LBB15:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7039
	bsr	$_MessageSend
?L26:
?LBE15:
?LBE14:
?LBE_sendRfcommControlInd:
	leavel	#5
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
;# end scan referenced symbols
_sendRfcommRegisterCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommRegisterCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB16:
	cmp	AL,#H'0000
	beq	?L29
?LBB17:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7035
	bsr	$_MessageSend
?L29:
?LBE17:
?LBE16:
?LBE_sendRfcommRegisterCfm:
	leavel	#5
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
.IMPORT $_VmSendRfcommPrim 0 ; (Non-const ref)
;# end scan referenced symbols
_startParnegPhase:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_startParnegPhase ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_startParnegPhase:
	st	AL,@(0,Y)
?LBB18:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'0020
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'000C
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0001
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendRfcommPrim
?LBE18:
?LBE_startParnegPhase:
	leavel	#3
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
_startEstablishPhase:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_startEstablishPhase ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_startEstablishPhase:
	st	AL,@(0,Y)
?LBB19:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'000C
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendRfcommPrim
	ld	AL,@(0,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,#H'0003
	bsr	$dostore_AL
?LBE19:
?LBE_startEstablishPhase:
	leavel	#3
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
;# end scan referenced symbols
_startControlPhase:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_startControlPhase ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_startControlPhase:
	st	AL,@(0,Y)
?LBB20:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'001C
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0003
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendRfcommPrim
?LBE20:
?LBE_startControlPhase:
	leavel	#3
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
;# end scan referenced symbols
_sendControlSignal:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendControlSignal ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendControlSignal:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB21:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'002E
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0004,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0004
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE21:
?LBE_sendControlSignal:
	leavel	#4
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
;# end scan referenced symbols
_closeMuxSession:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_closeMuxSession ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_closeMuxSession:
	st	AL,@(0,Y)
?LBB22:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'000A
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE22:
?LBE_closeMuxSession:
	leavel	#3
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
;# end scan referenced symbols
_releaseServerChannel:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_releaseServerChannel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_releaseServerChannel:
	st	AL,@(0,Y)
?LBB23:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'002D
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE23:
?LBE_releaseServerChannel:
	leavel	#3
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;# begin scan referenced symbols
;# end scan referenced symbols
_releaseServerChannelNoSink:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_releaseServerChannelNoSink ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_releaseServerChannelNoSink:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB24:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0010
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE24:
?LBE_releaseServerChannelNoSink:
	leavel	#4
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;# begin scan referenced symbols
;# end scan referenced symbols
_sendEstablishRes:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendEstablishRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendEstablishRes:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB25:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'000D
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0004,Y)
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE25:
?LBE_sendEstablishRes:
	leavel	#4
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;# begin scan referenced symbols
.IMPORT _closeMuxSession 0 ; (Non-const ref)
.IMPORT $_StreamRfcommSink 0 ; (Non-const ref)
.IMPORT _releaseServerChannel 0 ; (Non-const ref)
.IMPORT _releaseServerChannelNoSink 0 ; (Non-const ref)
;# end scan referenced symbols
_endConnection:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_endConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_endConnection:
	st	AL,@(0,Y)
?LBB26:
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0005)
	bcc	?L40
	add	AL,#(?L50)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L50:
	.CODE
?JT50:
	.SEG	CONST
	dc	lwrd(?L46-?JT50)
	dc	lwrd(?L42-?JT50)
	dc	lwrd(?L46-?JT50)
	dc	lwrd(?L46-?JT50)
	dc	lwrd(?L46-?JT50)
	dc	lwrd(?L40-?JT50)
	.CODE
?L42:
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_closeMuxSession
	bra	(?L40)
?L46:
	ld	AL,@(0,Y)
?LBB27:
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(0,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	$_StreamRfcommSink
	cmp	AL,#H'0000
	beq	?L47
	bsr	_releaseServerChannel
	bra	(?L40)
?L47:
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(0,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_releaseServerChannelNoSink
?L40:
?LBE27:
?LBE26:
?LBE_endConnection:
	leavel	#3
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;# begin scan referenced symbols
.IMPORT $_connectionAddTaskMap 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
.IMPORT _sendRfcommRegisterCfm 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommRegisterReq:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommRegisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommRegisterReq:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB28:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L54
?LBB29:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L55
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L55
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bra	(?L56)
?L55:
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	AL,#H'0000
?L56:
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	ld	AH,#H'0021
	bsr	$_connectionAddTaskMap
	cmp	AL,#H'0000
	beq	?L57
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB30:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE30:
?LBB31:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'07D0
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'004E
	bsr	$_MessageSendLater
?LBE31:
	bra	(?L53)
?L57:
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_sendRfcommRegisterCfm
?LBE29:
	bra	(?L53)
?L54:
?LBB32:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'004A
	bsr	$_MessageSendConditionallyOnTask
?L53:
?LBE32:
?LBE28:
?LBE_connectionHandleRfcommRegisterReq:
	leavel	#9
;.stabn	192,0,0,?LBB29
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	224,0,0,?LBE29
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;# begin scan referenced symbols
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
.IMPORT $_connectionUpdateTaskMap 0 ; (Non-const ref)
.IMPORT _deleteTaskMap 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommRegisterCfm:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommRegisterCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB33:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,#H'004E
	bsr	$_MessageCancelFirst
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L64
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L66
	ld	AL,@(H'0002,Y)
?LBB34:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0021
	bsr	$_connectionUpdateTaskMap
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?LBE34:
	bra	(?L67)
?L66:
	ld	AL,#H'0021
	bsr	_deleteTaskMap
?L67:
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	bne	?L68
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bra	(?L69)
?L68:
	ld	AL,#H'0000
?L69:
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	bsr	_sendRfcommRegisterCfm
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L64:
?LBE33:
?LBE_connectionHandleRfcommRegisterCfm:
	leavel	#6
;.stabn	192,0,0,?LBB33
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;.stabn	224,0,0,?LBE33
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommRegisterTimeout:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommRegisterTimeout ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommRegisterTimeout:
	st	AL,@(H'0001,Y)
	ld	AL,#H'0021
	bsr	_deleteTaskMap
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_sendRfcommRegisterCfm
?LBE_connectionHandleRfcommRegisterTimeout:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_connectionGetIdFromTaskMap 0 ; (Non-const ref)
.IMPORT _sendRfcommConnectionCfm 0 ; (Non-const ref)
.IMPORT _addRfcommConnection 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommConnectReq:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommConnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommConnectReq:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB35:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L75
?LBB36:
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L76
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fff8
	ld	AL,#H'0001
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_connectionGetIdFromTaskMap
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0006,Y)
	bra	(?L77)
?L76:
	ld	X,@(H'0005,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dofetch_AH
	st	AH,@(H'0006,Y)
?L77:
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0021
	bne	?L78
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendRfcommConnectionCfm
	bra	(?L74)
?L78:
	ld	X,@(H'0005,Y)
?LBB37:
	add	X,#H'0001
	st	X,@(H'0008,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'00FF
	bsr	_addRfcommConnection
	st	AL,@(H'0007,Y)
	add	AL,#H'000C
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0005,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0005,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'000D
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'000F
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0011
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0013
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0018
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0015
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'001A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0007,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB38:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0005,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'000A,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	ld	AH,#H'004F
	bsr	$_MessageSendLater
?LBE38:
?LBB39:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	st	AL,@H'fffc
	ld	AH,#H'0005
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(H'0007,Y)
	add	AH,#H'0001
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'000B,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,#H'0003
	bsr	$dostore_AH
	ld	AL,@(H'000B,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'037A
	bcz	?L80
	ld	X,@(H'000B,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bra	(?L83)
?L80:
	ld	AH,@(H'000B,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'037A
?L83:
	bsr	$dostore_AL
	ld	X,@(H'000B,Y)
	add	X,#H'0006
	st	X,@H'fffc
	ld	AH,#H'00FF
	bsr	$dostore_AH
	ld	AL,@(H'000B,Y)
	bsr	$_VmSendRfcommPrim
?LBE39:
?LBE37:
?LBE36:
	bra	(?L74)
?L75:
?LBB40:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000C,Y)
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(H'0005,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0010
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0012
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0014
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000C,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'004B
	bsr	$_MessageSendConditionallyOnTask
?L74:
?LBE40:
?LBE35:
?LBE_connectionHandleRfcommConnectReq:
	leavel	#15
;.stabn	192,0,0,?LBB36
;.stabn	192,0,0,?LBB37
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	224,0,0,?LBE37
;.stabn	224,0,0,?LBE36
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;# begin scan referenced symbols
.IMPORT _getRfcommConnection 0 ; (Non-const ref)
.IMPORT _endConnection 0 ; (Non-const ref)
.IMPORT _deleteRfcommConnection 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommConnectTimeout:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommConnectTimeout ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommConnectTimeout:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_AH
?LBB41:
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0005
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'00FF
	bsr	_getRfcommConnection
	cmp	AL,#H'0000
	beq	?L89
	bsr	_endConnection
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0003
	bsr	_sendRfcommConnectionCfm
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'00FF
	bsr	_deleteRfcommConnection
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	bra	(?L88)
?L89:
	bsr	$_Panic
?L88:
?LBE41:
?LBE_connectionHandleRfcommConnectTimeout:
	leavel	#9
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;# begin scan referenced symbols
.IMPORT _sendEstablishRes 0 ; (Non-const ref)
.IMPORT _startControlPhase 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommConnectRes:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommConnectRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommConnectRes:
	st	AL,@(H'0003,Y)
?LBB42:
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,#H'0001
	bsr	$_connectionFindTaskMap
	cmp	AL,#H'0000
	bne	?L93
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendRfcommConnectionCfm
	bra	(?L92)
?L93:
	ld	AH,@(H'0003,Y)
?LBB43:
	add	AH,#H'0002
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'00FF
	bsr	_getRfcommConnection
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L95
	ld	X,@(H'0003,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'000D
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'000F
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0011
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0013
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0018
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0015
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0004,Y)
	add	X,#H'001A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L96
	ld	AL,@(H'0004,Y)
	add	AL,#H'0008
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0003
	bne	?L97
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendEstablishRes
	st	X,@H'ffff
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0004
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	_startControlPhase
	bra	(?L92)
?L97:
?LBB44:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0021
	bsr	$dostore_AH
	ld	AH,#H'0002
	add	AH,@$XAP_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fff9
	ld	AL,@(H'0004,Y)
	add	AL,#H'0009
	st	AL,@H'fffa
	st	AH,@H'fffc
	bsr	$dofetch_AH
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	beq	?L112
	bcc	?L99
?L112:
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	X,@H'ffff
	ld	X,@H'fffa
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L107)
?L99:
	ld	X,@(H'0004,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@H'ffff
?L107:
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L101
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	bra	(?L102)
?L101:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?L102:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendRfcommPrim
?LBE44:
	bra	(?L92)
?L96:
	ld	X,@(H'0004,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0003
	bne	?L104
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0004,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0004,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendEstablishRes
	bra	(?L92)
?L104:
	ld	AH,@(H'0004,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	_endConnection
	bra	(?L92)
?L95:
	bsr	$_Panic
?L92:
?LBE43:
?LBE42:
?LBE_connectionHandleRfcommConnectRes:
	leavel	#8
;.stabn	192,0,0,?LBB42
;.stabn	192,0,0,?LBB43
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
;.stabn	224,0,0,?LBE43
;.stabn	224,0,0,?LBE42
;# begin scan referenced symbols
.IMPORT $_connectionGetInstanceByState 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommDisconnectReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommDisconnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommDisconnectReq:
	st	AL,@(0,Y)
?LBB45:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L120
?LBB46:
	ld	AL,#H'0003
	bsr	$_connectionGetInstanceByState
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L118
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AH,#H'0006
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_releaseServerChannelNoSink
	bra	(?L115)
?L118:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
?L120:
	bsr	_releaseServerChannel
?L115:
?LBE46:
?LBE45:
?LBE_connectionHandleRfcommDisconnectReq:
	leavel	#3
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;# begin scan referenced symbols
.IMPORT _sendControlSignal 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommControlReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommControlReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommControlReq:
	ld	AH,@$XAP_AL
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AH,#H'0002
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_sendControlSignal
?LBE_connectionHandleRfcommControlReq:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
.IMPORT _startParnegPhase 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommStartCfm:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommStartCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommStartCfm:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB47:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,#H'00FF
	bsr	_getRfcommConnection
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L125
	ld	AL,@(H'0008,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	beq	?L127
	cmp	AL,#H'0001
	bcs	?L129
	cmp	AL,#H'0029
	beq	?L129
	bra	(?L130)
?L127:
	ld	AL,@(H'0008,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bra	(?L134)
?L129:
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0002
	bsr	$dostore_AL
	ld	AL,@(H'0008,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	_startParnegPhase
	bra	(?L133)
?L130:
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@$XAP_AH
	add	X,#H'0007
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,#H'0001
	bsr	_sendRfcommConnectionCfm
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,#H'00FF
	bsr	_deleteRfcommConnection
?L133:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,#H'0000
?L134:
	bsr	$dostore_AL
	bra	(?L124)
?L125:
	ld	AL,@(H'0008,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_closeMuxSession
?L124:
?LBE47:
?LBE_connectionHandleRfcommStartCfm:
	leavel	#11
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommStartInd:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommStartInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommStartInd:
	st	AL,@(H'0005,Y)
	ld	AH,@$XAP_AL
?LBB48:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@(H'0006,Y)
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_getRfcommConnection
	cmp	AL,#H'0000
	bne	?L140
?LBB49:
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_addRfcommConnection
	ld	AH,@$XAP_AL
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0009
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'00FF
	bsr	$dostore_AL
?L140:
?LBE49:
?LBB50:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'0006
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#-H'0001
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendRfcommPrim
?LBE50:
?LBE48:
?LBE_connectionHandleRfcommStartInd:
	leavel	#9
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;.stabn	224,0,0,?LBE48
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommStartCmpInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommStartCmpInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommStartCmpInd:
	st	AL,@(H'0001,Y)
?LBB51:
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L143
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L144
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0009
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bra	(?L142)
?L144:
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_deleteRfcommConnection
	bra	(?L142)
?L143:
	bsr	$_Panic
?L142:
?LBE51:
?LBE_connectionHandleRfcommStartCmpInd:
	leavel	#4
;.stabn	192,0,0,?LBB51
;.stabn	224,0,0,?LBE51
;# begin scan referenced symbols
.IMPORT $_connectionCheckIdInTaskMap 0 ; (Non-const ref)
.IMPORT _sendRfcommConnectionInd 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommParnegInd:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommParnegInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommParnegInd:
	st	AL,@(H'0006,Y)
?LBB52:
	add	AL,#H'0003
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,#H'0001
	bsr	$_connectionCheckIdInTaskMap
	cmp	AL,#H'0000
	bne	?L150
	ld	AH,@(H'0006,Y)
?LBB53:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_StreamRfcommSink
	cmp	AL,#H'0000
	beq	?L155
	bsr	_releaseServerChannel
	bra	(?L149)
?L150:
?LBE53:
?LBB54:
	ld	AL,#H'00FF
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L154
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	st	AL,@H'fff9
	ld	AH,@(H'0006,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AH
	ld	AL,@(H'0008,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	bcz	?L156
	ld	AH,@$XAP_AL
?L156:
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendRfcommConnectionInd
	cmp	AL,#H'0000
	beq	?L155
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0008,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0004
	ld	AH,@(H'0008,Y)
	add	AH,#H'0009
	st	AH,@H'fff9
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L170
	bcc	?L157
?L170:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AH; movqi_fetch_general+2 peephole
?L157:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0008,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dostore_AL
	bra	(?L149)
?L155:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bra	(?L164)
?L154:
	ld	AL,@(H'0006,Y)
?LBB55:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L160
	ld	AL,@(H'0006,Y)
	add	AL,#H'0004
	ld	AH,@(H'0009,Y)
	add	AH,#H'0009
	st	AH,@H'fff9
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L172
	bcc	?L161
?L172:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AH; movqi_fetch_general+2 peephole
?L161:
?LBB56:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'0021
	bsr	$dostore_AL
	ld	AH,#H'0002
	add	AH,@H'fff8
	ld	AL,@(H'0009,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0009,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0009,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendRfcommPrim
?LBE56:
	bra	(?L149)
?L160:
	ld	AH,@(H'0006,Y)
?LBB57:
	add	AH,#H'0007
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	st	AL,@(H'000A,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0003
	st	AH,@(H'000B,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_addRfcommConnection
	ld	AH,@$XAP_AL
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0002
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0009
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@(H'0006,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0006,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'000B
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@H'fff8
	add	AH,#H'0006
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_sendRfcommConnectionInd
	cmp	AL,#H'0000
	bne	?L149
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_deleteRfcommConnection
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	X,@H'ffff
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L164:
	bsr	$dofetch_AH
	bsr	_releaseServerChannelNoSink
?L149:
?LBE57:
?LBE55:
?LBE54:
?LBE52:
?LBE_connectionHandleRfcommParnegInd:
	leavel	#14
;.stabn	192,0,0,?LBB52
;.stabn	192,0,0,?LBB53
;.stabn	224,0,0,?LBE53
;.stabn	192,0,0,?LBB54
;.stabn	192,0,0,?LBB55
;.stabn	192,0,0,?LBB56
;.stabn	224,0,0,?LBE56
;.stabn	192,0,0,?LBB57
;.stabn	224,0,0,?LBE57
;.stabn	224,0,0,?LBE55
;.stabn	224,0,0,?LBE54
;.stabn	224,0,0,?LBE52
;# begin scan referenced symbols
.IMPORT _startEstablishPhase 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommParnegCfm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommParnegCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommParnegCfm:
	st	AL,@(H'0001,Y)
?LBB58:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L175
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0009
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	_startEstablishPhase
	bra	(?L174)
?L175:
	bsr	$_Panic
?L174:
?LBE58:
?LBE_connectionHandleRfcommParnegCfm:
	leavel	#4
;.stabn	192,0,0,?LBB58
;.stabn	224,0,0,?LBE58
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommEstablishInd:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommEstablishInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommEstablishInd:
	st	AL,@(H'0006,Y)
?LBB59:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L179
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendEstablishRes
	ld	AL,@(H'0007,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AH,#H'0004
	bsr	$dostore_AH
	ld	AL,@(H'0007,Y)
	bsr	_startControlPhase
	bra	(?L178)
?L179:
	ld	AL,@(H'0006,Y)
?LBB60:
	add	AL,#H'0003
	st	AL,@(H'0008,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,#H'0001
	bsr	$_connectionCheckIdInTaskMap
	cmp	AL,#H'0000
	beq	?L181
	ld	AH,@(H'0006,Y)
?LBB61:
	add	AH,#H'0004
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@(H'0009,Y)
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_addRfcommConnection
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendRfcommConnectionInd
	cmp	AL,#H'0000
	bne	?L178
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_deleteRfcommConnection
?L181:
?LBE61:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y); movqi2b+1 peephole
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendEstablishRes
?L178:
?LBE60:
?LBE59:
?LBE_connectionHandleRfcommEstablishInd:
	leavel	#12
;.stabn	192,0,0,?LBB59
;.stabn	192,0,0,?LBB60
;.stabn	192,0,0,?LBB61
;.stabn	224,0,0,?LBE61
;.stabn	224,0,0,?LBE60
;.stabn	224,0,0,?LBE59
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommEstablishCfm:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommEstablishCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommEstablishCfm:
	st	AL,@(H'0003,Y)
?LBB62:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L187
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L189
	ld	AH,@(H'0004,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0004
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	_startControlPhase
	bra	(?L187)
?L189:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0015
	bne	?L191
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0004,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0007
	bsr	_sendRfcommConnectionCfm
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	st	X,@H'ffff
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L195)
?L191:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0011
	bne	?L193
	ld	AL,@(H'0004,Y)
	bsr	_endConnection
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@(H'0006,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y); movqi2b+1 peephole
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0004
	bsr	_sendRfcommConnectionCfm
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	st	X,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L195)
?L193:
	ld	AL,@(H'0004,Y)
	bsr	_endConnection
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0004,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0001
	bsr	_sendRfcommConnectionCfm
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	st	X,@H'ffff
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L195:
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_deleteRfcommConnection
?L187:
?LBE62:
?LBE_connectionHandleRfcommEstablishCfm:
	leavel	#10
;.stabn	192,0,0,?LBB62
;.stabn	224,0,0,?LBE62
;# begin scan referenced symbols
.IMPORT $_MessageSinkTask 0 ; (Non-const ref)
.IMPORT $_MessageSinkGetTask 0 ; (Non-const ref)
.IMPORT _sendRfcommControlInd 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommControlInd:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommControlInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommControlInd:
	st	AL,@(H'0003,Y)
?LBB63:
	add	AL,#H'0002
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@(H'0006,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_getRfcommConnection
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L201
?LBB64:
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_StreamRfcommSink
	st	AL,@(H'0007,Y)
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	ld	AL,@(H'0004,Y)
	add	AL,#H'0007
	st	AL,@(H'0008,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AH,@(H'0004,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0000
	bsr	_sendRfcommConnectionCfm
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_MessageSinkTask
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_deleteRfcommConnection
?LBE64:
	bra	(?L200)
?L201:
	ld	AH,@(H'0003,Y)
?LBB65:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_StreamRfcommSink
	st	AL,@(H'0009,Y)
	bsr	$_MessageSinkGetTask
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L200
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0009,Y)
	bsr	_sendRfcommControlInd
?L200:
?LBE65:
?LBE63:
?LBE_connectionHandleRfcommControlInd:
	leavel	#12
;.stabn	192,0,0,?LBB63
;.stabn	192,0,0,?LBB64
;.stabn	224,0,0,?LBE64
;.stabn	192,0,0,?LBB65
;.stabn	224,0,0,?LBE65
;.stabn	224,0,0,?LBE63
;# begin scan referenced symbols
.IMPORT _sendRfcommDisconnectInd 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommReleaseInd:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommReleaseInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommReleaseInd:
	st	AL,@(H'0003,Y)
?LBB66:
	add	AL,#H'0003
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L207
	add	AL,#H'0007
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L206
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	ld	AL,@(H'0004,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L209
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0011
	bne	?L210
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0004
	bra	(?L220)
?L210:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0004,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0001
?L220:
	bsr	_sendRfcommConnectionCfm
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L214
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0013
	beq	?L214
	cmp	AL,#H'0021
	bne	?L213
?L214:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L209
?L213:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_closeMuxSession
?L209:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_deleteRfcommConnection
	bra	(?L206)
?L207:
	ld	AL,@(H'0003,Y)
?LBB67:
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L218
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0013
	beq	?L218
	cmp	AL,#H'0021
	bne	?L217
?L218:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L216
?L217:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_closeMuxSession
?L216:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_StreamRfcommSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L206
	bsr	$_MessageSinkGetTask
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendRfcommDisconnectInd
?L206:
?LBE67:
?LBE66:
?LBE_connectionHandleRfcommReleaseInd:
	leavel	#10
;.stabn	192,0,0,?LBB66
;.stabn	192,0,0,?LBB67
;.stabn	224,0,0,?LBE67
;.stabn	224,0,0,?LBE66
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommPortNegInd:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommPortNegInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommPortNegInd:
	st	AL,@(0,Y)
?LBB68:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'0025
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0007
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@(0,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0009
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@(0,Y)
	add	AL,#H'000D
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'000B
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendRfcommPrim
?LBE68:
?LBE_connectionHandleRfcommPortNegInd:
	leavel	#3
;.stabn	192,0,0,?LBB68
;.stabn	224,0,0,?LBE68
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 240 used[1] = 7 total = 247
;# Function pattern *movqi_fetch_general used[0] = 146 total = 146
;# Function pattern *movqi_store_y_relative used[0] = 141 used[1] = 31 total = 172
;# Function pattern *movqi_fetch_y_relative used[0] = 249 total = 249
;# Function pattern *movhi_fetch_y_relative used[0] = 6 total = 6
;# Function pattern *movhi_store_y_relative used[0] = 7 used[2] = 1 total = 8
;# Function pattern *movhi_fetch_general used[0] = 29 total = 29
;# Function pattern *movhi_store_general used[0] = 20 total = 20
;# Function pattern *movqi_store_general used[0] = 89 total = 89
;# Function pattern *movqi2 used[0] = 168 total = 168
;# Function pattern *movqi2b used[0] = 21 used[1] = 17 total = 38
;# Function pattern *addqi0-framep used[0] = 16 total = 16
;# Function pattern *addqi2 used[0] = 231 used[2] = 8 used[3] = 54 total = 293
;# Function pattern jump used[0] = 40 total = 40
;# Function pattern *call1 used[0] = 75 total = 75
;# Function pattern *call_value1 used[0] = 93 total = 93
;# Single pattern tablejump used = 1
;# Function pattern addsi3+1 used[0] = 45 total = 45
;# Function pattern addsi3+2 used[0] = 13 total = 13
;# Function pattern addsi3+3 used[0] = 2 total = 2
;# Function pattern addhi3-2 used[0] = 7 total = 7
;# Function pattern addhi3-1 used[0] = 8 total = 8
;# Function pattern subhi3+1 used[0] = 10 total = 10
;# Function pattern addqi3-2 used[0] = 27 total = 27
;# Function pattern addqi3-1 used[0] = 3 total = 3
;# Function pattern extendhfsf2+2 used[0] = 3 used[1] = 1 total = 4
;# Function pattern extendhfsf2+3 used[0] = 67 total = 67
	MODULE	sdp_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	CONST
_SdpPingServiceRequest:
	dc	H'0035
	dc	H'0005
	dc	H'001A
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sendSdpCloseSearchCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendSdpCloseSearchCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendSdpCloseSearchCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'702C
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendSdpCloseSearchCfm:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_BdaddrIsZero 0 ; (Non-const ref)
.IMPORT $_BdaddrIsSame 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
;# end scan referenced symbols
_sendSearchRequest:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendSearchRequest:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,#H'0002
	add	AL,@$XAP_AH
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L6
	ld	AL,#H'0001
	bra	(?L4)
?L6:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L14
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	ld	AH,@(H'0004,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L13
	ld	AL,#H'0003
	bra	(?L4)
?L5:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L14
	bsr	$_connectionGetCmTask
	ld	AH,@(0,Y)
	cmp	AH,@$XAP_AL
	bne	?L13
?L14:
	ld	AL,#H'0002
	bra	(?L4)
?L13:
	ld	AL,#H'0000
?L4:
?LBE_sendSearchRequest:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
.IMPORT $_VmSendSdpPrim 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpRegisterRequest:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpRegisterRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpRegisterRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB4:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L23
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB5:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AH,#H'000E
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendSdpPrim
?LBE5:
	bra	(?L22)
?L23:
?LBB6:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0039
	bsr	$_MessageSendConditionallyOnTask
?L22:
?LBE6:
?LBE4:
?LBE_connectionHandleSdpRegisterRequest:
	leavel	#9
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpRegisterCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpRegisterCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L26
?LBB8:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff9
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7029
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L26:
?LBE8:
?LBE7:
?LBE_connectionHandleSdpRegisterCfm:
	leavel	#5
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpUnregisterRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpUnregisterRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpUnregisterRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB9:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L30
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB10:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0010
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fff8
	bsr	$_VmSendSdpPrim
?LBE10:
	bra	(?L29)
?L30:
?LBB11:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'003A
	bsr	$_MessageSendConditionallyOnTask
?L29:
?LBE11:
?LBE9:
?LBE_connectionHandleSdpUnregisterRequest:
	leavel	#7
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpUnregisterCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpUnregisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpUnregisterCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB12:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L33
?LBB13:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff9
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'702A
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L33:
?LBE13:
?LBE12:
?LBE_connectionHandleSdpUnregisterCfm:
	leavel	#5
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpServerConfigMtu:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpServerConfigMtu ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpServerConfigMtu:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB14:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L37
?LBB15:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0012
	bsr	$dostore_AH
	ld	AH,#H'0001
	add	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendSdpPrim
?LBE15:
	bra	(?L36)
?L37:
?LBB16:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'003B
	bsr	$_MessageSendConditionallyOnTask
?L36:
?LBE16:
?LBE14:
?LBE_connectionHandleSdpServerConfigMtu:
	leavel	#7
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpClientConfigMtu:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpClientConfigMtu ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpClientConfigMtu:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB17:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L41
?LBB18:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'000B
	bsr	$dostore_AH
	ld	AH,#H'0001
	add	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendSdpPrim
?LBE18:
	bra	(?L40)
?L41:
?LBB19:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'003C
	bsr	$_MessageSendConditionallyOnTask
?L40:
?LBE19:
?LBE17:
?LBE_connectionHandleSdpClientConfigMtu:
	leavel	#7
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpOpenSearchRequest:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpOpenSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpOpenSearchRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB20:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L45
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
?LBB21:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AH,#H'0008
	bsr	$dostore_AH
	add	AL,#H'0002
	ld	AH,@(H'0004,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0005,Y)
	bsr	$_VmSendSdpPrim
?LBE21:
	bra	(?L44)
?L45:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L44
?LBB22:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'003D
	bsr	$_MessageSendConditionallyOnTask
?L44:
?LBE22:
?LBE20:
?LBE_connectionHandleSdpOpenSearchRequest:
	leavel	#9
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
.IMPORT _SdpPingServiceRequest 1 ; (Const ref)
.IMPORT $_ConnectionSdpServiceSearchRequest 0 ; (Non-const ref)
.IMPORT $_connectionConvertSdpOpenStatus 0 ; (Non-const ref)
.IMPORT $_BdaddrSetZero 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpOpenSearchCfm:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpOpenSearchCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpOpenSearchCfm:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB23:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L51
	ld	AL,@(H'0004,Y)
?LBB24:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L53
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#(_SdpPingServiceRequest)
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	bsr	$_ConnectionSdpServiceSearchRequest
?LBE24:
	bra	(?L53)
?L51:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L53
?LBB25:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSdpOpenStatus
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'702B
	bsr	$_MessageSend
?L53:
	ld	AL,@(H'0004,Y)
?LBE25:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L50
	st	X,@H'ffff
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	bsr	$_BdaddrSetZero
?L50:
?LBE23:
?LBE_connectionHandleSdpOpenSearchCfm:
	leavel	#8
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;# begin scan referenced symbols
.IMPORT _sendSdpCloseSearchCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpCloseSearchRequest:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpCloseSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpCloseSearchRequest:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB26:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L61
	ld	AL,#H'0002
	add	AL,@H'fffc
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L61
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L63
?LBB27:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AL,#H'000A
	bsr	$dostore_AL
	ld	AL,@H'fffc
	bsr	$_VmSendSdpPrim
?LBE27:
	bra	(?L60)
?L63:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0003
	bra	(?L67)
?L61:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
?L67:
	bsr	_sendSdpCloseSearchCfm
?L60:
?LBE26:
?LBE_connectionHandleSdpCloseSearchRequest:
	leavel	#4
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpCloseSearchInd:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpCloseSearchInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpCloseSearchInd:
	st	AL,@(0,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AH,#H'0002
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_sendSdpCloseSearchCfm
	st	X,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	bsr	$_BdaddrSetZero
?LBE_connectionHandleSdpCloseSearchInd:
	leavel	#3
;# begin scan referenced symbols
.IMPORT _sendSearchRequest 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpServiceSearchRequest:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpServiceSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpServiceSearchRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB28:
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	bsr	_sendSearchRequest
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	bne	?L73
?LBB29:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	ld	AH,@(H'0005,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L74
	ld	AH,@(H'0006,Y)
	add	AH,#H'0007
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L75)
?L74:
	ld	X,@(H'0006,Y)
	add	X,#H'0007
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L75:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	bsr	$_VmSendSdpPrim
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE29:
	bra	(?L72)
?L73:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L72
?LBB30:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	cmp	AH,#H'0001
	bne	?L78
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0008,Y)
	bra	(?L79)
?L78:
	ld	X,@(H'0004,Y)
	cmp	X,#H'0002
	bne	?L80
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	bra	(?L79)
?L80:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0003
	bne	?L82
	ld	X,@(H'0002,Y)
	st	X,@(H'0008,Y)
	bra	(?L79)
?L82:
	bsr	$_Panic
?L79:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'003F
	bsr	$_MessageSendConditionallyOnTask
?L72:
?LBE30:
?LBE28:
?LBE_connectionHandleSdpServiceSearchRequest:
	leavel	#12
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;.stabn	224,0,0,?LBE28
;# begin scan referenced symbols
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
.IMPORT $_VmGetPointerFromHandle 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
.IMPORT $_connectionConvertSdpSearchStatus 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpServiceSearchCfm:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpServiceSearchCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpServiceSearchCfm:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB31:
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L91
?LBB32:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0006
	st	AH,@(H'0007,Y)
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#(_SdpPingServiceRequest)
	bsr	$_memmove
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'07D0
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'003F
	bsr	$_MessageSendLater
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L92
	ld	AH,@(H'0004,Y)
?LBB33:
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L92:
	ld	AL,@(H'0003,Y)
?LBE33:
	add	AL,#H'0001
	st	AL,@H'fffc
	bra	(?L99)
?L91:
	ld	AL,@(H'0003,Y)
?LBE32:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L94
	ld	AH,@(H'0004,Y)
?LBB34:
	add	AH,#H'0003
	st	AH,@(H'0009,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSdpSearchStatus
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0008,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	ld	AH,@(H'0004,Y)
	add	AH,#H'0009
	bsr	$_connectionConvertBdaddr
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0008,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L95
	ld	AL,@(H'0004,Y)
?LBB35:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	add	AH,#H'0008
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	ld	AL,@(H'000A,Y)
	bsr	$_free
?LBE35:
	bra	(?L96)
?L95:
	ld	AH,@(H'0008,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L96:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@(H'000B,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'702D
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L99:
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBE34:
	bra	(?L90)
?L94:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L90
	ld	AH,@(H'0004,Y)
?LBB36:
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L90:
?LBE36:
?LBE31:
?LBE_connectionHandleSdpServiceSearchCfm:
	leavel	#14
;.stabn	192,0,0,?LBB32
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
;.stabn	224,0,0,?LBE32
;.stabn	192,0,0,?LBB34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	224,0,0,?LBE34
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpAttributeSearchRequest:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpAttributeSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpAttributeSearchRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB37:
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	bsr	_sendSearchRequest
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	bne	?L106
?LBB38:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	ld	AH,@(H'0005,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	X,@(H'0003,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L107
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L108)
?L107:
	ld	X,@(H'0006,Y)
	add	X,#H'0009
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L108:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	bsr	$_VmSendSdpPrim
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE38:
	bra	(?L105)
?L106:
?LBB39:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	cmp	AH,#H'0001
	bne	?L110
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0008,Y)
	bra	(?L111)
?L110:
	ld	X,@(H'0004,Y)
	cmp	X,#H'0002
	bne	?L112
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	bra	(?L111)
?L112:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0003
	bne	?L114
	ld	X,@(H'0002,Y)
	st	X,@(H'0008,Y)
	bra	(?L111)
?L114:
	bsr	$_Panic
?L111:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0040
	bsr	$_MessageSendConditionallyOnTask
?L105:
?LBE39:
?LBE37:
?LBE_connectionHandleSdpAttributeSearchRequest:
	leavel	#12
;.stabn	192,0,0,?LBB37
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	224,0,0,?LBE37
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpAttributeSearchCfm:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpAttributeSearchCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpAttributeSearchCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB40:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L122
?LBB41:
	add	AH,#H'0002
	st	AH,@(H'0004,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSdpSearchStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	bsr	$_connectionConvertBdaddr
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L123
	ld	AL,@(H'0002,Y)
?LBB42:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	bsr	$_free
?LBE42:
	bra	(?L124)
?L123:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L124:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'702E
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBE41:
	bra	(?L121)
?L122:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L121
	ld	AH,@(H'0002,Y)
?LBB43:
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L121:
?LBE43:
?LBE40:
?LBE_connectionHandleSdpAttributeSearchCfm:
	leavel	#9
;.stabn	192,0,0,?LBB41
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;.stabn	224,0,0,?LBE41
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpServiceSearchAttrRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpServiceSearchAttrRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpServiceSearchAttrRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB44:
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	bsr	_sendSearchRequest
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	bne	?L131
?LBB45:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AH,#H'0005
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	ld	AH,@(H'0005,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L132
	ld	AH,@(H'0006,Y)
	add	AH,#H'0007
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L133)
?L132:
	ld	X,@(H'0006,Y)
	add	X,#H'0007
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L133:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L134
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@(H'0008,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L135)
?L134:
	ld	X,@(H'0006,Y)
	add	X,#H'0009
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L135:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	bsr	$_VmSendSdpPrim
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE45:
	bra	(?L130)
?L131:
?LBB46:
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000A,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000A,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000A,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	cmp	AH,#H'0001
	bne	?L137
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0009,Y)
	bra	(?L138)
?L137:
	ld	X,@(H'0004,Y)
	cmp	X,#H'0002
	bne	?L139
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0009,Y)
	bra	(?L138)
?L139:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0003
	bne	?L141
	ld	X,@(H'0002,Y)
	st	X,@(H'0009,Y)
	bra	(?L138)
?L141:
	bsr	$_Panic
?L138:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0041
	bsr	$_MessageSendConditionallyOnTask
?L130:
?LBE46:
?LBE44:
?LBE_connectionHandleSdpServiceSearchAttrRequest:
	leavel	#13
;.stabn	192,0,0,?LBB44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;.stabn	224,0,0,?LBE44
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpServiceSearchAttributeCfm:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpServiceSearchAttributeCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpServiceSearchAttributeCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB47:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L150
?LBB48:
	add	AH,#H'0003
	st	AH,@(H'0004,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSdpSearchStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	ld	AH,@(H'0002,Y)
	add	AH,#H'000A
	bsr	$_connectionConvertBdaddr
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L151
	ld	AL,@(H'0002,Y)
?LBB49:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	bsr	$_free
?LBE49:
	bra	(?L152)
?L151:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L152:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'702F
	bsr	$_MessageSend
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L149
	st	X,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE48:
	bra	(?L149)
?L150:
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L149
	ld	AL,@(H'0002,Y)
?LBB50:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L149:
?LBE50:
?LBE47:
?LBE_connectionHandleSdpServiceSearchAttributeCfm:
	leavel	#9
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	224,0,0,?LBE48
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpTerminatePrimitiveRequest:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpTerminatePrimitiveRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpTerminatePrimitiveRequest:
?LBB51:
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fff8
	ld	X,@H'ffff
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L160
	st	AH,@H'fffc
	bsr	$dofetch_AH
	cmp	AH,@$XAP_AL
	bne	?L160
?LBB52:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0007
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bsr	$_VmSendSdpPrim
?L160:
?LBE52:
?LBE51:
?LBE_connectionHandleSdpTerminatePrimitiveRequest:
	leavel	#2
;.stabn	192,0,0,?LBB52
;.stabn	224,0,0,?LBE52
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 150 used[1] = 7 total = 157
;# Function pattern *movqi_fetch_general used[0] = 78 total = 78
;# Function pattern *movqi_store_y_relative used[0] = 116 used[1] = 6 total = 122
;# Function pattern *movqi_fetch_y_relative used[0] = 163 total = 163
;# Function pattern *movhi_store_y_relative used[2] = 1 total = 1
;# Function pattern *movhi_fetch_general used[0] = 16 total = 16
;# Function pattern *movhi_store_general used[0] = 9 total = 9
;# Function pattern *movqi_store_general used[0] = 59 total = 59
;# Function pattern *movqi2 used[0] = 100 total = 100
;# Function pattern *movqi2b used[0] = 13 used[1] = 5 total = 18
;# Function pattern *addqi2 used[0] = 143 used[2] = 13 used[3] = 15 total = 171
;# Function pattern jump used[0] = 34 total = 34
;# Function pattern *call1 used[0] = 48 total = 48
;# Function pattern *call_value1 used[0] = 69 total = 69
;# Function pattern addsi3+1 used[0] = 33 total = 33
;# Function pattern addsi3+2 used[0] = 20 total = 20
;# Function pattern addsi3+3 used[0] = 6 total = 6
;# Function pattern addhi3-2 used[0] = 12 total = 12
;# Function pattern subhi3+1 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 4 total = 4
;# Function pattern addqi3-1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 53 total = 53
	MODULE	connection_manager
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	VAR
_conn_list_head:
	DS	1
_multiple_channels_list_head:
	DS	1
_multiple_channels_entries:
	DS	1
_map?:
	DS	1
_mapSize:
	DS	1
;# begin scan referenced symbols
.IMPORT $_BdaddrIsSame 0 ; (Non-const ref)
.IMPORT $_BdaddrIsZero 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_id_match:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_id_match ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_id_match:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	cmp	X,#H'0000
	beq	?L2
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@$XAP_AH
	bne	?L2
	cmp	AL,#H'0000
	beq	?L16
	cmp	AL,#H'0001
	bne	?L2
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0021
	bne	?L6
	ld	AL,@H'fffc
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L8
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0008,Y)
	bne	?L7
?L8:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
?L7:
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L2
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0008,Y)
	bne	?L2
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'00FF
	bne	?L2
	ld	X,#H'0001
	st	X,@(H'0001,Y)
	bra	(?L2)
?L6:
	ld	AL,@(H'0008,Y)
	cmp	AL,#H'00FF
	bne	?L12
	ld	AL,@(0,Y)
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L2
	bra	(?L26)
?L12:
	ld	X,@(0,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0008,Y)
	bne	?L2
?L26:
	ld	AH,@(0,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0009,Y)
	bne	?L2
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	bra	(?L2)
?L16:
	ld	X,@(0,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0005,Y)
	bne	?L17
	cmp	AL,#H'0000
	bne	?L27
?L17:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0004,Y)
	bne	?L19
	cmp	AL,#H'0000
	beq	?L19
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L19
	ld	X,@(0,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L19
	ld	AH,#H'0000
	bra	(?L24)
?L19:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0004,Y)
	bne	?L2
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@(0,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L2
?L27:
	ld	AH,#H'0001
?L24:
	st	AH,@(H'0001,Y)
?L2:
?LBE2:
	ld	AL,@(H'0001,Y)
?LBE_id_match:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT _mapSize 0 ; (Non-const ref)
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_PanicNull 0 ; (Non-const ref)
.IMPORT _map? 0 ; (Non-const ref)
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
;# end scan referenced symbols
_deleteElement:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_deleteElement ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_deleteElement:
	st	AL,@(H'0001,Y)
?LBB3:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#-H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	lsl	#H'0010
	asr	#H'000E
	bsr	$_malloc
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	bne	?L52
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0004
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@H'fff8
	bra	(?L55)
?L52:
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_memmove
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff9
	cmp	AL,@(H'0001,Y)
	beq	?L53
	ld	AL,@(H'0002,Y)
	add	AL,@(H'0003,Y)
	st	AL,@H'fff8
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@(H'0003,Y)
	add	AH,@$XAP_AL
	ld	X,#H'0004
	add	X,@$XAP_AH
	ld	AL,@(H'0001,Y)
	nadd	AL,@H'fff9
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UXL
?L55:
	bsr	$_memmove
?L53:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_free
	ld	AL,@(H'0002,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE3:
?LBE_deleteElement:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT _conn_list_head 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionAddInstance:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAddInstance ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAddInstance:
	ld	AH,@$XAP_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AH
	add	X,#H'0022
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@$XAP_AH
?LBE_connectionAddInstance:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _id_match 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionDeleteInstance:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionDeleteInstance ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionDeleteInstance:
	st	AL,@(H'0006,Y)
?LBB4:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	cmp	AH,#H'0000
	beq	?L72
?L70:
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'000D,Y)
	ld	AL,@(H'000E,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000F,Y)
	ld	AL,@(H'0010,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0006,Y)
	bsr	_id_match
	cmp	AL,#H'0000
	beq	?L63
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0000
	beq	?L65
	ld	AL,@(H'0007,Y)
	add	AL,#H'001E
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L63
?L65:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#H'0022
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L66
	ld	AL,#H'0000
	bra	(?L73)
?L66:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@(H'0007,Y)
	cmp	AH,@$XAP_AL
	bne	?L68
	add	AH,#H'0022
	st	AH,@H'fffc
	bsr	$dofetch_AL
?L73:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L67)
?L68:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0022
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0008,Y)
	add	AH,#H'0022
	st	AH,@H'fffc
	bsr	$dostore_AL
?L67:
	ld	AL,@(H'0007,Y)
	bsr	$_free
	ld	AL,#H'0001
	bra	(?L59)
?L63:
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0022
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	bne	?L70
?L72:
	ld	AL,#H'0000
?L59:
?LBE4:
?LBE_connectionDeleteInstance:
	leavel	#11
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetInstance:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetInstance ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetInstance:
	st	AL,@(H'0006,Y)
?LBB5:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L83
?L88:
	ld	AH,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'000C,Y)
	ld	AL,@(H'000D,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000E,Y)
	ld	AL,@(H'000F,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0006,Y)
	bsr	_id_match
	cmp	AL,#H'0000
	beq	?L85
	ld	AL,@(H'0010,Y)
	cmp	AL,#H'0000
	beq	?L83
	ld	AL,@(H'0007,Y)
	add	AL,#H'001E
	ld	AH,@(H'0010,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L83
?L85:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0022
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	bne	?L88
?L83:
?LBE5:
	ld	AL,@(H'0007,Y)
?LBE_connectionGetInstance:
	leavel	#10
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetInstanceByState:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetInstanceByState ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetInstanceByState:
	st	AL,@H'fff8
?LBB6:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AH,#H'0000
	beq	?L97
?L100:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L99
	ld	X,@$XAP_AH
	add	X,#H'0008
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fff8
	beq	?L97
?L99:
	add	AH,#H'0022
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	cmp	AH,#H'0000
	bne	?L100
?L97:
?LBE6:
	ld	AL,@$XAP_AH
?LBE_connectionGetInstanceByState:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT $_BdaddrSetZero 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionGetId:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetId ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetId:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'000A,Y)
	ld	AL,@H'ffff
	st	AL,@H'fff8
	st	AH,@(H'000B,Y)
?LBB7:
	cmp	AL,#H'0000
	bne	?L107
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrSetZero
	bra	(?L108)
?L107:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0006,Y)
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dostore_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dostore_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dostore_AL
?L108:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0005,Y)
	ld	X,@(H'000E,Y)
	st	X,@(H'0004,Y)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@H'fffc
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'000A,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
?LBE7:
	ld	AL,@(H'000A,Y)
?LBE_connectionGetId:
	leavel	#14
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
_findMatchInMap:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_findMatchInMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_findMatchInMap:
	st	AL,@H'fffa
	st	AH,@H'fffb
?LBB8:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@H'fff9
	cmp	AH,@$XAP_AL
	bcc	?L125
?L123:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	ld	AL,@H'fff9
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fffa
	bne	?L113
	ld	AH,@H'fffa
	cmp	AH,#H'0000
	beq	?L117
	cmp	AH,#H'0001
	beq	?L119
	bra	(?L113)
?L117:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	bra	(?L127)
?L119:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@H'fff8
?L127:
	ld	AL,@H'fff9
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	add	AL,#H'0001
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fffb
	bne	?L113
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_fff9; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	bra	(?L110)
?L113:
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@H'fff9
	cmp	AH,@$XAP_AL
	bcs	?L123
?L125:
	ld	AL,#H'0000
?L110:
?LBE8:
?LBE_findMatchInMap:
	leavel	#2
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
.IMPORT _findMatchInMap 0 ; (Non-const ref)
.IMPORT $_realloc 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionAddTaskMap:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAddTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAddTaskMap:
	ld	X,#H'0000
	st	X,@(H'0004,Y); subreg eliminated automatically
	st	X,@(H'0005,Y); subreg eliminated automatically
	st	X,@(H'0006,Y); subreg eliminated automatically
	st	X,@(H'0007,Y); subreg eliminated automatically
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB9:
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	bsr	_findMatchInMap
	cmp	AL,#H'0000
	beq	?L135
	ld	AL,#H'0000
	bra	(?L134)
?L135:
?LBB10:
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0004,Y); subreg eliminated automatically
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0005,Y); subreg eliminated automatically
	ld	X,@(H'000A,Y)
	st	X,@(H'0006,Y); subreg eliminated automatically
	ld	AH,@(H'000B,Y)
	st	AH,@(H'0007,Y); subreg eliminated automatically
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,#H'0004
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_realloc
	bsr	$_PanicNull
	st	AL,@H'fff8
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,@(H'0004,Y); subreg fetch eliminated automatically
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y); subreg fetch eliminated automatically
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y); subreg fetch eliminated automatically
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'000B,Y)
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,#H'0001
?L134:
?LBE10:
?LBE9:
?LBE_connectionAddTaskMap:
	leavel	#10
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT _deleteElement 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionDeleteTaskMap:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionDeleteTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionDeleteTaskMap:
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB11:
	st	X,@(0,Y)
	bsr	_findMatchInMap
	cmp	AL,#H'0000
	beq	?L139
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	bne	?L140
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_free
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L141)
?L140:
	ld	AL,@(H'0001,Y)
	bsr	_deleteElement
?L141:
	ld	AL,#H'0001
	bra	(?L138)
?L139:
	ld	AL,#H'0000
?L138:
?LBE11:
?LBE_connectionDeleteTaskMap:
	leavel	#4
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionUpdateTaskMap:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionUpdateTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionUpdateTaskMap:
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB12:
	st	X,@(0,Y)
	bsr	_findMatchInMap
	cmp	AL,#H'0000
	beq	?L146
	ld	AL,@(H'0001,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@H'fff8
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0004,Y)
	bsr	$dostore_AL
	ld	AL,#H'0001
	bra	(?L145)
?L146:
	ld	AL,#H'0000
?L145:
?LBE12:
?LBE_connectionUpdateTaskMap:
	leavel	#4
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionCheckIdInTaskMap:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionCheckIdInTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionCheckIdInTaskMap:
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB13:
	st	X,@(0,Y)
	bsr	_findMatchInMap
?LBE13:
?LBE_connectionCheckIdInTaskMap:
	leavel	#4
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionFindTaskMap:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionFindTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionFindTaskMap:
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB14:
	st	X,@(0,Y)
	bsr	_findMatchInMap
	cmp	AL,#H'0000
	beq	?L151
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,@$XAP_AH
	bra	(?L150)
?L151:
	ld	AL,#H'0000
?L150:
?LBE14:
?LBE_connectionFindTaskMap:
	leavel	#4
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetIdFromTaskMap:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetIdFromTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetIdFromTaskMap:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB15:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fffb
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@H'fffb
	cmp	AH,@$XAP_AL
	bcc	?L173
?L171:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	ld	AL,@H'fffb
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@(H'0001,Y)
	bne	?L157
	ld	X,@(H'0001,Y)
	cmp	X,#H'0000
	beq	?L161
	cmp	X,#H'0001
	beq	?L162
	bra	(?L157)
?L161:
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	bra	(?L157)
?L162:
?LBB16:
	ld	AL,#H'0021
	st	AL,@(H'0003,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@H'fff8
	ld	AL,@H'fffb
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/1 peephole
	bsr	$dofetch_X
	st	X,@H'fffa
	ld	AL,@H'fffa
	cmp	AL,#H'0000
	beq	?L157
?L168:
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0006,Y)
	ld	AL,@H'fff9
	st	AL,@(H'0007,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch32_fff8; movhi_fetch_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0004,Y)
	ld	AL,@H'fff9
	st	AL,@(H'0005,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	cmp	AH,@H'fff8
	bne	?L165
	cmp	AL,@H'fff9
	bne	?L165
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	ld	AL,@H'fffb
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	st	X,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L175)
?L165:
	ld	X,@H'fffa
	add	X,#H'0005
	st	X,@H'fffc; addqi2+1/1 peephole
	bsr	$dofetch_X
	st	X,@H'fffa
	ld	AL,@H'fffa
	cmp	AL,#H'0000
	bne	?L168
?L157:
?LBE16:
	st	AL,@H'ffff
	ld	AL,@H'fffb
	add	AL,#H'0001
	st	AL,@H'fffb
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@H'fffb
	cmp	X,@$XAP_AL
	bcs	?L171
?L173:
	st	X,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0003,Y)
?L175:
	bsr	$dostore_AH
?LBE15:
	ld	AL,@(0,Y)
?LBE_connectionGetIdFromTaskMap:
	leavel	#10
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetTaskFromMap:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetTaskFromMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetTaskFromMap:
?LBB17:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@(0,Y)
	bsr	_findMatchInMap
	cmp	AL,#H'0000
	beq	?L185
	ld	AL,@(H'0001,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@H'fff8
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bra	(?L184)
?L185:
	ld	AL,#H'0000
?L184:
?LBE17:
?LBE_connectionGetTaskFromMap:
	leavel	#4
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetPsmTaskMatch:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetPsmTaskMatch ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetPsmTaskMatch:
	st	AL,@H'fffa
	st	AH,@H'fff8
?LBB18:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	cmp	AH,#H'0000
	beq	?L195
?L193:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L192
	ld	X,@$XAP_AH
	add	X,#H'001D
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fff8
	bne	?L192
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fffa
	bne	?L192
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L192:
	add	AH,#H'0022
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	cmp	AH,#H'0000
	bne	?L193
?L195:
?LBE18:
	ld	AL,@H'fff9
?LBE_connectionGetPsmTaskMatch:
	leavel	#2
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetPsmBdaddrMatch:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetPsmBdaddrMatch ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetPsmBdaddrMatch:
	st	AL,@(0,Y)
?LBB19:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(H'0002,Y)
	st	X,@H'ffff
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0001,Y)
	cmp	X,#H'0000
	beq	?L208
?L206:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L205
	ld	AL,#H'001E
	add	AL,@H'fffc
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L205
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(0,Y)
	bne	?L205
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0001
	bsr	$dostore_AL
	ld	X,@(H'0001,Y)
	add	X,#H'001D
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
?L205:
	ld	X,@(H'0001,Y)
	add	X,#H'0022
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	bne	?L206
?L208:
?LBE19:
	ld	AL,@(H'0002,Y)
?LBE_connectionGetPsmBdaddrMatch:
	leavel	#5
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT _multiple_channels_list_head 0 ; (Non-const ref)
.IMPORT _multiple_channels_entries 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionCompletedConnectionsGetPsmTaskMatch:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionCompletedConnectionsGetPsmTaskMatch ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionCompletedConnectionsGetPsmTaskMatch:
	st	AL,@(0,Y)
	st	AH,@H'fffa
?LBB20:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fffb
	ld	AL,@H'ffff
	ld	AH,@H'fffb
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AH,@$XAP_AL
	bcc	?L222
	st	AL,@H'fff9
?L220:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,@H'fffa
	bne	?L219
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@(0,Y)
	bne	?L219
	st	AL,@H'ffff
	ld	AL,@H'fffb
	add	AL,#H'0001
	st	AL,@H'fffb
	ld	AL,@H'ffff
?L219:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0007
	st	AL,@H'fff8
	ld	AL,@H'ffff
	add	AH,#H'0001
	cmp	AH,@H'fff9
	bcs	?L220
?L222:
?LBE20:
	ld	AL,@H'fffb
?LBE_connectionCompletedConnectionsGetPsmTaskMatch:
	leavel	#3
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionCompletedConnectionsGetPsmBdaddrMatch:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionCompletedConnectionsGetPsmBdaddrMatch ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionCompletedConnectionsGetPsmBdaddrMatch:
	st	AL,@(0,Y)
?LBB21:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@(H'0003,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(H'0002,Y)
	cmp	X,@$XAP_AL
	bcc	?L235
?L233:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L232
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(0,Y)
	bne	?L232
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0001
	bsr	$dostore_AL
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
?L232:
	ld	X,@(H'0001,Y)
	add	X,#H'0007
	st	X,@(H'0001,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@(H'0003,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AH,@$XAP_AL
	bcs	?L233
?L235:
?LBE21:
	ld	AL,@(H'0002,Y)
?LBE_connectionCompletedConnectionsGetPsmBdaddrMatch:
	leavel	#6
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
.IMPORT $_connectionFindTaskMap 0 ; (Non-const ref)
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionStoreCompletedConnection:
	enterl	#16
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionStoreCompletedConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionStoreCompletedConnection:
	st	AL,@(H'0008,Y)
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0009,Y); subreg eliminated automatically
	ld	AL,@(H'0011,Y)
	st	AL,@(H'000A,Y); subreg eliminated automatically
	ld	AH,@(H'0012,Y)
	st	AH,@(H'000B,Y); subreg eliminated automatically
	ld	AL,@(H'0013,Y)
	st	AL,@(H'000C,Y); subreg eliminated automatically
?LBB22:
	ld	AL,#H'0000
	ld	AH,@(H'0014,Y)
	bsr	$_connectionFindTaskMap
	cmp	AL,#H'0000
	beq	?L240
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L240
	add	AL,#H'0004
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bcz	?L240
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	bne	?L242
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000D,Y)
	bra	(?L243)
?L242:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	smult	#H'0007
	ld	AH,@$XAP_AL
	add	AH,#H'0007
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_realloc
	st	AL,@(H'000D,Y)
	cmp	AL,#H'0000
	bne	?L243
	bsr	$_Panic
?L243:
	ld	AH,@(H'0008,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0014,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0009,Y); subreg fetch eliminated automatically
	st	AH,@(H'0004,Y)
	ld	AL,@(H'000A,Y); subreg fetch eliminated automatically
	st	AL,@(H'0005,Y)
	ld	AH,@(H'000B,Y); subreg fetch eliminated automatically
	st	AH,@(H'0006,Y)
	ld	AL,@(H'000C,Y); subreg fetch eliminated automatically
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0015,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	smult	#H'0007
	ld	AH,@(H'000D,Y)
	add	AL,@$XAP_AH
	st	AL,@H'ffff
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@(H'000D,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?L240:
?LBE22:
?LBE_connectionStoreCompletedConnection:
	leavel	#16
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionRemoveCompletedConnection:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionRemoveCompletedConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionRemoveCompletedConnection:
	st	AL,@H'fffa
?LBB23:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@$XAP_AL
	ld	X,@H'fff9
	cmp	X,@$XAP_AL
	bcc	?L250
?L259:
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fffa
	bne	?L255
	cmp	AH,#H'0001
	bne	?L256
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_free
	ld	AH,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L250)
?L256:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	add	AL,#-H'0001
	ld	X,@H'fff9
	cmp	X,@$XAP_AL
	beq	?L258
	ld	AL,@H'fff9
	smult	#H'0007
	ld	AH,@$XAP_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	st	X,@H'fffa
	ld	X,@H'ffff
	ld	X,#H'0007
	add	X,@H'fffa
	ld	AL,@H'fff8
	sub	AL,@H'fff9
	smult	#H'0007
	add	AL,#-H'0007
	st	AL,@(0,Y)
	ld	AL,@H'fffa
	ld	AH,@$XAP_UXL
	bsr	$_memmove
?L258:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#-H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	smult	#H'0007
	ld	AH,@$XAP_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_realloc
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L250)
?L255:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0007
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@H'fff9
	cmp	AL,@$XAP_AH
	bcs	?L259
?L250:
?LBE23:
?LBE_connectionRemoveCompletedConnection:
	leavel	#3
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 25 used[1] = 3 total = 28
;# Function pattern *movqi_fetch_general used[0] = 25 total = 25
;# Function pattern *movqi_store_y_relative used[0] = 64 used[1] = 4 total = 68
;# Function pattern *movqi_fetch_y_relative used[0] = 59 total = 59
;# Function pattern *movhi_fetch_y_relative used[0] = 10 total = 10
;# Function pattern *movhi_store_y_relative used[0] = 6 used[1] = 2 total = 8
;# Function pattern *movhi_store_general used[0] = 1 total = 1
;# Function pattern *movqi_subreg_fetch_y_relative used[0] = 7 total = 7
;# Function pattern *movqi_subreg_store_y_relative used[0] = 12 total = 12
;# Function pattern *movqi_store_general used[0] = 13 total = 13
;# Function pattern *movqi_fetch_symbol_ref used[0] = 52 total = 52
;# Function pattern *movqi_store_symbol_ref used[0] = 14 total = 14
;# Function pattern *movqi2 used[0] = 51 total = 51
;# Function pattern *movqi2b used[0] = 34 used[1] = 28 total = 62
;# Function pattern *addqi4-withytranslation used[1] = 6 total = 6
;# Function pattern *addqi0-framep used[0] = 13 total = 13
;# Function pattern *addqi2 used[0] = 47 used[2] = 4 used[3] = 13 total = 64
;# Function pattern *subqi3 used[0] = 1 used[1] = 1 total = 2
;# Function pattern *mulqi3_const used[0] = 19 total = 19
;# Function pattern jump used[0] = 24 total = 24
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 27 total = 27
;# Function pattern addsi3+1 used[0] = 5 total = 5
;# Function pattern addsi3+2 used[0] = 2 total = 2
;# Function pattern addsi3+3 used[0] = 1 total = 1
;# Function pattern addhi3-2 used[0] = 1 total = 1
;# Function pattern subhi3+1 used[0] = 18 used[1] = 2 total = 20
;# Function pattern subhi3+2 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 1 total = 1
;# Function pattern addqi3-1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 89 total = 89
;# Function pattern extendhfsf2+5 used[1] = 1 total = 1
	MODULE	sdp_search
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionSdpOpenSearchRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSdpOpenSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSdpOpenSearchRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
?LBB3:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fff8
	ld	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'003D
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSdpOpenSearchRequest:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionSdpCloseSearchRequest:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSdpCloseSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSdpCloseSearchRequest:
	st	AL,@(H'0001,Y)
?LBB4:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'003E
	bsr	$_MessageSend
?LBE4:
?LBE_ConnectionSdpCloseSearchRequest:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_memmove 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionSdpServiceSearchRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSdpServiceSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSdpServiceSearchRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB5:
?LBB6:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fff8
	ld	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,@(H'0008,Y)
	bsr	$dostore_AH
	cmp	AH,#H'0000
	beq	?L4
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_AH
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0009,Y)
	bsr	$_memmove
	bra	(?L5)
?L4:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L5:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'003F
	bsr	$_MessageSend
?LBE6:
?LBE5:
?LBE_ConnectionSdpServiceSearchRequest:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 14 total = 14
;# Function pattern *movqi_fetch_general used[0] = 6 total = 6
;# Function pattern *movqi_store_y_relative used[0] = 13 total = 13
;# Function pattern *movqi_fetch_y_relative used[0] = 20 total = 20
;# Function pattern *movqi_store_general used[0] = 8 total = 8
;# Function pattern *movqi2 used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 10 used[2] = 2 used[3] = 2 total = 14
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 3 total = 3
;# Function pattern *call_value1 used[0] = 8 total = 8
;# Function pattern addsi3+1 used[0] = 3 total = 3
;# Function pattern addsi3+2 used[0] = 3 total = 3
;# Function pattern addqi3-2 used[0] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	initx
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	CONST
_spp_service_record:
	dc	H'0009
	dc	H'0000
	dc	H'0001
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0011
	dc	H'0001
	dc	H'0009
	dc	H'0000
	dc	H'0004
	dc	H'0035
	dc	H'000C
	dc	H'0035
	dc	H'0003
	dc	H'0019
	dc	H'0001
	dc	H'0000
	dc	H'0035
	dc	H'0005
	dc	H'0019
	dc	H'0000
	dc	H'0003
	dc	H'0008
	dc	H'0000
	dc	H'0009
	dc	H'0000
	dc	H'0006
	dc	H'0035
	dc	H'0009
	dc	H'0009
	dc	H'0065
	dc	H'006E
	dc	H'0009
	dc	H'0000
	dc	H'006A
	dc	H'0009
	dc	H'0001
	dc	H'0000
	dc	H'0009
	dc	H'0001
	dc	H'0000
	dc	H'0025
	dc	H'0007
	dc	H'0053
	dc	H'0050
	dc	H'0050
	dc	H'0020
	dc	H'0044
	dc	H'0065
	dc	H'0076
$_spp_recipe:
	dc	H'000D
	dc	H'0000
	dc	hwrd($_sppProfileHandler)
	dc	lwrd($_sppProfileHandler)
	dc	H'0001
	dc	H'0000
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sendCfmMsg:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendCfmMsg ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendCfmMsg:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'6F00
	bsr	$_MessageSend
?LBE2:
?LBE_sendCfmMsg:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
;# end scan referenced symbols
_sppSendInitReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppSendInitReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppSendInitReq:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0002
	bsr	$_MessageSend
?LBE3:
?LBE_sppSendInitReq:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_sppInitTaskData 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppCreateTaskInstance:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppCreateTaskInstance ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppCreateTaskInstance:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB4:
	ld	AL,#H'000D
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000F,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0011,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0012,Y)
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0013,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_sppInitTaskData
?LBE4:
	ld	AL,@(H'000A,Y)
?LBE_sppCreateTaskInstance:
	leavel	#13
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT _sendCfmMsg 0 ; (Non-const ref)
.IMPORT $_sppSetState 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppSendInitCfmToApp:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppSendInitCfmToApp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppSendInitCfmToApp:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_sendCfmMsg
	bra	(?L8)
?L5:
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	bsr	_sendCfmMsg
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_sppSetState
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L4
?L8:
	ld	AL,@(H'0001,Y)
	bsr	$_free
?L4:
?LBE_sppSendInitCfmToApp:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_sppProfileHandler 0 ; (Non-const ref)
.IMPORT _spp_service_record 1 ; (Const ref)
;# end scan referenced symbols
$_sppInitTaskData:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppInitTaskData ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppInitTaskData:
	st	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dostore_AH
	ld	AL,@(0,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'0003,Y)
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_sppSetState
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@(H'0004,Y)
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#hwrd($_sppProfileHandler)
	ld	AL,#lwrd($_sppProfileHandler)
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0009
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'000A,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L12
	ld	AL,@(0,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	ld	AL,@(H'0008,Y)
	bra	(?L16)
?L12:
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	bne	?L14
	ld	AL,@(0,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	ld	AL,#H'0033
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	ld	AL,#(_spp_service_record)
	bra	(?L16)
?L14:
	ld	AL,@(0,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	ld	AL,#H'0000
?L16:
	bsr	$dostore_AL
?LBE_sppInitTaskData:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_sppCreateTaskInstance 0 ; (Non-const ref)
.IMPORT _sppSendInitReq 0 ; (Non-const ref)
;# end scan referenced symbols
$_SppInit:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SppInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SppInit:
?LBB5:
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0009,Y); movqi2b+1 peephole
	ld	AH,#H'0000
	bsr	$_sppCreateTaskInstance
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	_sppSendInitReq
?LBE5:
?LBE_SppInit:
	leavel	#9
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
;# end scan referenced symbols
$_SppInitEx:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SppInitEx ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SppInitEx:
	st	AL,@H'fff8
	st	AH,@H'fff9
	ld	AH,@(H'0009,Y)
?LBB6:
	cmp	AH,#H'0000
	bne	?L21
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bra	(?L25)
?L21:
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L23
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L23
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'fff8; movqi2b+1 peephole
?L25:
	ld	AH,#H'0003
	bsr	_sendCfmMsg
	bra	(?L20)
?L23:
?LBB7:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,@H'fff9; movqi2b+1 peephole
	ld	AH,#H'0000
	bsr	$_sppCreateTaskInstance
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	_sppSendInitReq
?L20:
?LBE7:
?LBE6:
?LBE_SppInitEx:
	leavel	#9
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
.IMPORT $_spp_recipe 1 ; (Const ref)
;# end scan referenced symbols
$_SppInitLazy:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SppInitLazy ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SppInitLazy:
	st	AL,@H'fff8
	st	AH,@(H'0007,Y)
	ld	AL,@(H'000A,Y)
?LBB8:
	cmp	AL,#H'0000
	beq	?L37
	ld	AL,@(H'000A,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L32
	ld	AL,@(H'000A,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L32
?L37:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'fff8; movqi2b+1 peephole
	ld	AH,#H'0003
	bsr	_sendCfmMsg
	bra	(?L29)
?L32:
?LBB9:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	ld	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,#H'0000
	bsr	$_sppCreateTaskInstance
	ld	AH,@$XAP_AL
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L34
	st	AL,@H'ffff
	ld	AL,#($_spp_recipe)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bra	(?L36)
?L34:
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
?L36:
	ld	AL,@$XAP_AH
	ld	AH,@(H'0007,Y)
	bsr	_sppSendInitReq
?L29:
?LBE9:
?LBE8:
?LBE_SppInitLazy:
	leavel	#10
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_ConnectionRfcommAllocateChannelLazy 0 ; (Non-const ref)
.IMPORT $_ConnectionRfcommAllocateChannel 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleInternalInitReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleInternalInitReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleInternalInitReq:
	st	AL,@H'fff8
	add	AL,#H'0009
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L43
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_ConnectionRfcommAllocateChannelLazy
	bra	(?L42)
?L43:
	ld	AL,@H'fff8
	bsr	$_ConnectionRfcommAllocateChannel
?L42:
?LBE_sppHandleInternalInitReq:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_sppRegisterServiceRecord 0 ; (Non-const ref)
.IMPORT $_sppSendInitCfmToApp 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleRfcommRegisterCfm:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleRfcommRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleRfcommRegisterCfm:
	st	AL,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L47
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0008
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@H'fff8
	add	X,#H'000A
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L48
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bra	(?L51)
?L48:
	ld	AL,@H'fff8
	add	AH,#H'0001
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	$_sppRegisterServiceRecord
	bra	(?L46)
?L47:
	ld	AL,@H'fff8
	ld	AH,#H'0001
?L51:
	bsr	$_sppSendInitCfmToApp
?L46:
?LBE_sppHandleRfcommRegisterCfm:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 23 used[1] = 1 total = 24
;# Function pattern *movqi_fetch_general used[0] = 10 total = 10
;# Function pattern *movqi_store_y_relative used[0] = 31 used[1] = 14 total = 45
;# Function pattern *movqi_fetch_y_relative used[0] = 39 total = 39
;# Function pattern *movhi_store_general used[1] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 13 total = 13
;# Function pattern *movqi2 used[0] = 35 total = 35
;# Function pattern *movqi2b used[0] = 1 used[1] = 5 total = 6
;# Function pattern *addqi2 used[0] = 19 used[3] = 3 total = 22
;# Function pattern jump used[0] = 10 total = 10
;# Function pattern *call1 used[0] = 17 total = 17
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern addsi3+1 used[0] = 2 total = 2
;# Function pattern addhi3-1 used[0] = 7 total = 7
;# Function pattern subhi3+1 used[0] = 10 total = 10
;# Function pattern addqi3-2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 14 total = 14
	MODULE	spp_connect
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_sppSendConnectCfmToApp 0 ; (Non-const ref)
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sendInternalSppConnectMsg:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendInternalSppConnectMsg ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendInternalSppConnectMsg:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0005,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L2
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0018
	cmp	AL,#H'7FE7
	bcz	?L3
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,#H'000B
	ld	AH,@(H'0001,Y)
	bsr	$_sppSendConnectCfmToApp
	bra	(?L1)
?L3:
?LBB3:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0007
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L5
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bra	(?L10)
?L5:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'028A
?L10:
	bsr	$dostore_AL
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L7
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bra	(?L11)
?L7:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L11:
	ld	X,@H'fff8
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bra	(?L12)
?L2:
?LBE3:
?LBB4:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@$XAP_AH
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'028A
	bsr	$dostore_AL
	st	AH,@(0,Y)
?L12:
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0003
	bsr	$_MessageSend
?L1:
?LBE4:
?LBE2:
?LBE_sendInternalSppConnectMsg:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
_sendInternalSppConnectResponse:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendInternalSppConnectResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendInternalSppConnectResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB5:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#-H'0017
	cmp	AL,#H'7FE8
	bcz	?L19
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'0000
	beq	?L19
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	ld	AH,#H'0004
	bsr	$_MessageSend
?LBB6:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'000B
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0007
	bra	(?L23)
?L19:
?LBE6:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L21
	ld	X,@H'fff8
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	bra	(?L22)
?L21:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'028A
	bsr	$dostore_AH
?L22:
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	ld	AH,#H'0004
?L23:
	bsr	$_MessageSend
?LBE5:
?LBE_sendInternalSppConnectResponse:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT _sendInternalSppConnectMsg 0 ; (Non-const ref)
;# end scan referenced symbols
$_SppConnect:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SppConnect ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SppConnect:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bsr	_sendInternalSppConnectMsg
?LBE_SppConnect:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_SppConnectEx:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SppConnectEx ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SppConnectEx:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	_sendInternalSppConnectMsg
?LBE_SppConnectEx:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_sppCreateTaskInstance 0 ; (Non-const ref)
;# end scan referenced symbols
$_SppConnectLazy:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SppConnectLazy ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SppConnectLazy:
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'000A,Y)
?LBB7:
?LBB8:
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_sppCreateTaskInstance
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	_sendInternalSppConnectMsg
?LBE8:
?LBE7:
?LBE_SppConnectLazy:
	leavel	#10
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
.IMPORT _sendInternalSppConnectResponse 0 ; (Non-const ref)
;# end scan referenced symbols
$_SppConnectResponse:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SppConnectResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SppConnectResponse:
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0004,Y)
	bsr	_sendInternalSppConnectResponse
?LBE_SppConnectResponse:
	leavel	#4
;# begin scan referenced symbols
;# end scan referenced symbols
$_SppConnectResponseEx:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SppConnectResponseEx ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SppConnectResponseEx:
	ld	X,@(H'0005,Y)
	st	AH,@(0,Y)
	st	X,@(H'0001,Y)
	ld	AH,@(H'0004,Y)
	bsr	_sendInternalSppConnectResponse
?LBE_SppConnectResponseEx:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_sppInitTaskData 0 ; (Non-const ref)
;# end scan referenced symbols
$_SppConnectResponseLazy:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SppConnectResponseLazy ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SppConnectResponseLazy:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0008,Y); movqi2b+1 peephole
	ld	AH,@(H'000D,Y)
	bsr	$_sppInitTaskData
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000C,Y)
	bsr	_sendInternalSppConnectResponse
?LBE_SppConnectResponseLazy:
	leavel	#12
;# begin scan referenced symbols
;# end scan referenced symbols
$_SppDisconnect:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SppDisconnect ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SppDisconnect:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0006
	bsr	$_MessageSend
?LBE_SppDisconnect:
	leavel	#3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 20 total = 20
;# Function pattern *movqi_fetch_general used[0] = 17 total = 17
;# Function pattern *movqi_store_y_relative used[0] = 20 used[1] = 14 total = 34
;# Function pattern *movqi_fetch_y_relative used[0] = 30 total = 30
;# Function pattern *movqi_store_general used[0] = 12 total = 12
;# Function pattern *movqi2 used[0] = 23 total = 23
;# Function pattern *movqi2b used[0] = 2 used[1] = 2 total = 4
;# Function pattern *addqi2 used[0] = 18 used[2] = 2 used[3] = 10 total = 30
;# Function pattern jump used[0] = 6 total = 6
;# Function pattern *call1 used[0] = 12 total = 12
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern addsi3+1 used[0] = 4 total = 4
;# Function pattern addsi3+2 used[0] = 3 total = 3
;# Function pattern addhi3-1 used[0] = 3 total = 3
;# Function pattern addqi3-2 used[0] = 13 total = 13
;# Function pattern extendhfsf2+3 used[0] = 8 total = 8
	MODULE	rfc
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_initConfigParams:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_initConfigParams ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_initConfigParams:
	st	AL,@H'fffc
	ld	AH,#H'007F
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'EA60
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0006
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'00FF
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0007
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0009
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000A
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'000B
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000C
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0011
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000D
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0013
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000E
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'3F7F
	bsr	$dostore_AL
?LBE_initConfigParams:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
_sendInternalRfcommRegisterMessage:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendInternalRfcommRegisterMessage ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendInternalRfcommRegisterMessage:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'004A
	bsr	$_MessageSend
?LBE2:
?LBE_sendInternalRfcommRegisterMessage:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT _sendInternalRfcommRegisterMessage 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionRfcommAllocateChannel:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommAllocateChannel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommAllocateChannel:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	_sendInternalRfcommRegisterMessage
?LBE_ConnectionRfcommAllocateChannel:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionRfcommAllocateChannelLazy:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommAllocateChannelLazy ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommAllocateChannelLazy:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	_sendInternalRfcommRegisterMessage
?LBE_ConnectionRfcommAllocateChannelLazy:
	leavel	#3
;# begin scan referenced symbols
.IMPORT _initConfigParams 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionRfcommConnectRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommConnectRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommConnectRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
?LBB4:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fff8
	ld	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0002,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0006
	st	X,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0008,Y)
	cmp	AH,#H'0000
	beq	?L6
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0008,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000B
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000D
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000F
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0011
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0013
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0015
	st	X,@H'fffc
	bsr	$dostore_AL
	bra	(?L7)
?L6:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	bsr	_initConfigParams
?L7:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'004B
	bsr	$_MessageSend
?LBE4:
?LBE3:
?LBE_ConnectionRfcommConnectRequest:
	leavel	#6
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionRfcommConnectResponse:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommConnectResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommConnectResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB5:
?LBB6:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L10
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0008,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000B
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000D
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000F
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0011
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0013
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0015
	st	X,@H'fffc
	bsr	$dostore_AL
	bra	(?L11)
?L10:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	bsr	_initConfigParams
?L11:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'004C
	bsr	$_MessageSend
?LBE6:
?LBE5:
?LBE_ConnectionRfcommConnectResponse:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionRfcommDisconnectRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommDisconnectRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommDisconnectRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'004D
	bsr	$_MessageSend
?LBE7:
?LBE_ConnectionRfcommDisconnectRequest:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionRfcommControlSignalRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommControlSignalRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommControlSignalRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0050
	bsr	$_MessageSend
?LBE8:
?LBE_ConnectionRfcommControlSignalRequest:
	leavel	#6
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 53 total = 53
;# Function pattern *movqi_fetch_general used[0] = 8 total = 8
;# Function pattern *movqi_store_y_relative used[0] = 21 used[1] = 1 total = 22
;# Function pattern *movqi_fetch_y_relative used[0] = 68 total = 68
;# Function pattern *movhi_fetch_general used[0] = 14 total = 14
;# Function pattern *movhi_store_general used[0] = 12 used[1] = 1 total = 13
;# Function pattern *movqi_store_general used[0] = 33 total = 33
;# Function pattern *movqi2 used[0] = 22 total = 22
;# Function pattern *addqi2 used[0] = 45 used[2] = 2 used[3] = 18 total = 65
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 9 total = 9
;# Function pattern *call_value1 used[0] = 10 total = 10
;# Function pattern addsi3+1 used[0] = 2 total = 2
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern addhi3-2 used[0] = 2 total = 2
;# Function pattern addqi3-2 used[0] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
	MODULE	spp_common
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_sppSetState:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppSetState ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppSetState:
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
?LBE_sppSetState:
	leavel	#2
	ENDMOD

;# Function pattern addqi3-2 used[0] = 1 total = 1
	MODULE	spp_connect_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	CONST
_SppServiceRequest:
	dc	H'0035
	dc	H'0005
	dc	H'001A
	dc	H'0000
	dc	H'0000
	dc	H'0011
	dc	H'0001
_protocolAttributeRequest:
	dc	H'0035
	dc	H'0003
	dc	H'0009
	dc	H'0000
	dc	H'0004
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_convertRfcommConnectStatus:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_convertRfcommConnectStatus ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_convertRfcommConnectStatus:
	cmp	AL,#(H'0001+H'0007)
	bcc	?L11
	add	AL,#(?L12)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L12:
	.CODE
?JT12:
	.SEG	CONST
	dc	lwrd(?L3-?JT12)
	dc	lwrd(?L11-?JT12)
	dc	lwrd(?L5-?JT12)
	dc	lwrd(?L6-?JT12)
	dc	lwrd(?L7-?JT12)
	dc	lwrd(?L8-?JT12)
	dc	lwrd(?L9-?JT12)
	dc	lwrd(?L10-?JT12)
	.CODE
?L3:
	ld	AL,#H'0000
	bra	(?L1)
?L5:
	ld	AL,#H'0005
	bra	(?L1)
?L6:
	ld	AL,#H'0006
	bra	(?L1)
?L7:
	ld	AL,#H'0007
	bra	(?L1)
?L8:
	ld	AL,#H'0008
	bra	(?L1)
?L9:
	ld	AL,#H'0009
	bra	(?L1)
?L10:
	ld	AL,#H'000A
	bra	(?L1)
?L11:
	ld	AL,#H'0004
?L1:
?LBE_convertRfcommConnectStatus:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_convertRfcommDisconnectStatus:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_convertRfcommDisconnectStatus ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_convertRfcommDisconnectStatus:
	cmp	AL,#(H'0001+H'0031)
	bcc	?L49
	add	AL,#(?L50)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L50:
	.CODE
?JT50:
	.SEG	CONST
	dc	lwrd(?L16-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L18-?JT50)
	dc	lwrd(?L16-?JT50)
	dc	lwrd(?L17-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	dc	lwrd(?L49-?JT50)
	.CODE
?L16:
	ld	AL,#H'0000
	bra	(?L13)
?L17:
	ld	AL,#H'0001
	bra	(?L13)
?L18:
	ld	AL,#H'0003
	bra	(?L13)
?L49:
	ld	AL,#H'0004
?L13:
?LBE_convertRfcommDisconnectStatus:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_initConfigParams:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_initConfigParams ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_initConfigParams:
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'EA60
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0006
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'00FF
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0007
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0009
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000A
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'000B
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000C
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0011
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000D
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0013
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000E
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'3F7F
	bsr	$dostore_AL
?LBE_initConfigParams:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _SppServiceRequest 1 ; (Const ref)
.IMPORT $_sppSetState 0 ; (Non-const ref)
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
.IMPORT _protocolAttributeRequest 1 ; (Const ref)
.IMPORT $_ConnectionSdpServiceSearchAttributeRequest 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleConnectRequest:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleConnectRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleConnectRequest:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB2:
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L53
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0006,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AH
	bra	(?L57)
?L53:
	ld	AL,#H'0007
	st	AL,@(H'0007,Y)
	ld	AH,#(_SppServiceRequest)
?L57:
	st	AH,@(H'0008,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0002
	bsr	$_sppSetState
	ld	AL,@(H'0006,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0007
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L55
?LBB3:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y); movqi2b+1 peephole
	ld	AH,#H'0005
	bsr	$_MessageSend
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0003
	bsr	$_sppSetState
?LBE3:
	bra	(?L52)
?L55:
	st	AL,@H'ffff
	ld	AL,#H'0040
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0007,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0002,Y)
	st	AL,@H'ffff
	ld	AL,#H'0005
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	AL,#(_protocolAttributeRequest)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y); movqi2b+1 peephole
	ld	AH,@(H'0006,Y)
	bsr	$_ConnectionSdpServiceSearchAttributeRequest
?L52:
?LBE2:
?LBE_sppHandleConnectRequest:
	leavel	#12
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT _initConfigParams 0 ; (Non-const ref)
.IMPORT $_ConnectionRfcommConnectRequest 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleInternalRfcommConnectRequest:
	enterl	#22
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleInternalRfcommConnectRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleInternalRfcommConnectRequest:
	st	AL,@(H'0012,Y)
	st	AH,@(H'0013,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB4:
	bsr	_initConfigParams
	ld	AL,@(H'0012,Y)
	add	AL,#H'000C
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0012,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0013,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0012,Y)
	ld	AH,@(H'0013,Y)
	bsr	$_ConnectionRfcommConnectRequest
?LBE4:
?LBE_sppHandleInternalRfcommConnectRequest:
	leavel	#22
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_ConnectionRfcommConnectResponse 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleConnectResponse:
	enterl	#23
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleConnectResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleConnectResponse:
	st	AL,@(H'0012,Y)
	st	AH,@(H'0013,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB5:
	bsr	_initConfigParams
	ld	AL,@(H'0013,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0012,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0013,Y)
	add	AL,#H'0004
	st	AL,@(H'0014,Y)
	ld	AH,@(H'0013,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0012,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0012,Y)
	ld	X,@(H'0014,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_ConnectionRfcommConnectResponse
	ld	AL,@(H'0012,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L62
	ld	X,@(H'0014,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L62
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0012,Y); movqi2b+1 peephole
	ld	AH,#H'0001
	bsr	$_MessageSend
	bra	(?L61)
?L62:
	ld	AH,@(H'0013,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L61
	ld	AL,@(H'0012,Y)
	ld	AH,#H'0001
	bsr	$_sppSetState
?L61:
?LBE5:
?LBE_sppHandleConnectResponse:
	leavel	#23
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_ConnectionUnregisterServiceRecord 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppSendConnectCfmToApp:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppSendConnectCfmToApp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppSendConnectCfmToApp:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB6:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'000C
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	bsr	$dostore_AL
	st	AH,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'6F01
	bsr	$_MessageSend
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L69
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0004
	bsr	$_sppSetState
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L68
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_ConnectionUnregisterServiceRecord
	bra	(?L68)
?L69:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L72
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y); movqi2b+1 peephole
	ld	AH,#H'0001
	bsr	$_MessageSend
	bra	(?L68)
?L72:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0001
	bsr	$_sppSetState
?L68:
?LBE6:
?LBE_sppSendConnectCfmToApp:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT _convertRfcommConnectStatus 0 ; (Non-const ref)
.IMPORT $_sppSendConnectCfmToApp 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleRfcommConnectCfm:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleRfcommConnectCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleRfcommConnectCfm:
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L78
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@(0,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@(0,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore_AL
?L78:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_convertRfcommConnectStatus
	ld	AH,@(0,Y)
	bsr	$_sppSendConnectCfmToApp
?LBE_sppHandleRfcommConnectCfm:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_sppHandleRfcommConnectInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleRfcommConnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleRfcommConnectInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,@H'fff8
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	ld	AH,#H'0005
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'6F02
	bsr	$_MessageSend
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0003
	bsr	$_sppSetState
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L80
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dostore_AL
?L80:
?LBE7:
?LBE_sppHandleRfcommConnectInd:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
$_sppHandleConnectIndReject:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleConnectIndReject ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleConnectIndReject:
	st	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y); movqi2b+1 peephole
	ld	AH,#H'0000
	bsr	$_ConnectionRfcommConnectResponse
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L83
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y); movqi2b+1 peephole
	ld	AH,#H'0001
	bsr	$_MessageSend
?L83:
?LBE_sppHandleConnectIndReject:
	leavel	#6
;# begin scan referenced symbols
;# end scan referenced symbols
$_sppSendDisconnectIndToApp:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppSendDisconnectIndToApp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppSendDisconnectIndToApp:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'6F05
	bsr	$_MessageSend
?LBE8:
?LBE_sppSendDisconnectIndToApp:
	leavel	#5
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
.IMPORT _convertRfcommDisconnectStatus 0 ; (Non-const ref)
.IMPORT $_sppSendDisconnectIndToApp 0 ; (Non-const ref)
.IMPORT $_sppRegisterServiceRecord 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleRfcommDisconnectInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleRfcommDisconnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleRfcommDisconnectInd:
	st	AL,@(H'0001,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_convertRfcommDisconnectStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	bsr	$_sppSendDisconnectIndToApp
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L88
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	ld	AH,#H'0001
	bsr	$_MessageSend
	bra	(?L87)
?L88:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_sppSetState
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L87
	cmp	AL,#H'0000
	bne	?L87
	ld	AH,@(H'0001,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L87
	ld	AL,@(H'0001,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_sppRegisterServiceRecord
?L87:
?LBE_sppHandleRfcommDisconnectInd:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_ConnectionRfcommDisconnectRequest 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleInternalDisconnectReq:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleInternalDisconnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleInternalDisconnectReq:
	ld	X,@$XAP_AL
	add	X,#H'0007
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	$_ConnectionRfcommDisconnectRequest
?LBE_sppHandleInternalDisconnectReq:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_MessageFlushTask 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleFreeSppTask:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleFreeSppTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleFreeSppTask:
	st	AL,@(0,Y)
	bsr	$_MessageFlushTask
	ld	AL,@(0,Y)
	bsr	$_free
?LBE_sppHandleFreeSppTask:
	leavel	#3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 47 used[1] = 1 total = 48
;# Function pattern *movqi_fetch_general used[0] = 34 total = 34
;# Function pattern *movqi_store_y_relative used[0] = 35 used[1] = 3 total = 38
;# Function pattern *movqi_fetch_y_relative used[0] = 45 total = 45
;# Function pattern *movhi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_fetch_general used[0] = 2 total = 2
;# Function pattern *movhi_store_general used[1] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 24 total = 24
;# Function pattern *movqi2 used[0] = 50 total = 50
;# Function pattern *movqi2b used[0] = 16 used[1] = 2 total = 18
;# Function pattern *addqi0-framep used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 40 used[2] = 3 used[3] = 13 total = 56
;# Function pattern jump used[0] = 16 total = 16
;# Function pattern *call1 used[0] = 27 total = 27
;# Function pattern *call_value1 used[0] = 7 total = 7
;# Single pattern tablejump used = 2
;# Function pattern addsi3+1 used[0] = 5 total = 5
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern addhi3-1 used[0] = 7 total = 7
;# Function pattern subhi3+1 used[0] = 6 total = 6
;# Function pattern addqi3-2 used[0] = 10 total = 10
;# Function pattern extendhfsf2+2 used[1] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 13 total = 13
;# Function pattern extendhfsf2+4 used[0] = 1 total = 1
	MODULE	spp_profile_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_handleUnexpected:
; leaf function with empty stack frame
?LBB_handleUnexpected:
?LBE_handleUnexpected:
	bra	0,X
;# begin scan referenced symbols
.IMPORT $_sppInitTaskData 0 ; (Non-const ref)
.IMPORT $_sppHandleFreeSppTask 0 ; (Non-const ref)
.IMPORT $_sppHandleInternalInitReq 0 ; (Non-const ref)
.IMPORT $_sppHandleRfcommRegisterCfm 0 ; (Non-const ref)
.IMPORT $_sppHandleSdpRegisterCfm 0 ; (Non-const ref)
.IMPORT $_sppHandleSdpRegisterCfmReady 0 ; (Non-const ref)
.IMPORT $_sppHandleSdpUnregisterCfm 0 ; (Non-const ref)
.IMPORT $_sppHandleConnectRequest 0 ; (Non-const ref)
.IMPORT $_sppHandleConnectResponse 0 ; (Non-const ref)
.IMPORT $_sppHandleSdpServiceSearchAttributeCfm 0 ; (Non-const ref)
.IMPORT $_sppHandleInternalRfcommConnectRequest 0 ; (Non-const ref)
.IMPORT $_sppHandleRfcommConnectCfm 0 ; (Non-const ref)
.IMPORT $_sppHandleRfcommConnectInd 0 ; (Non-const ref)
.IMPORT $_sppHandleConnectIndReject 0 ; (Non-const ref)
.IMPORT $_sppHandleRfcommDisconnectInd 0 ; (Non-const ref)
.IMPORT $_sppHandleInternalDisconnectReq 0 ; (Non-const ref)
.IMPORT $_sppSendDisconnectIndToApp 0 ; (Non-const ref)
.IMPORT _handleUnexpected 1 ; (Const ref)
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
.IMPORT $_sppSendConnectCfmToApp 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppProfileHandler:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppProfileHandler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppProfileHandler:
	st	AL,@(H'0008,Y)
?LBB2:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_X
	st	X,@H'fff8
	cmp	AH,#H'702A
	beq	?L34
	cmp	AH,#(H'0001+H'702A)
	bcc	?L123
	cmp	AH,#H'0004
	beq	?L52
	cmp	AH,#(H'0001+H'0004)
	bcc	?L124
	cmp	AH,#H'0001
	beq	?L5
	cmp	AH,#H'0001
	bcs	?L4
	cmp	AH,#H'0002
	beq	?L6
	cmp	AH,#H'0003
	beq	?L43
	bra	(?L2)
?L124:
	cmp	AH,#H'0006
	beq	?L106
	cmp	AH,#H'0006
	bcs	?L70
	cmp	AH,#H'0007
	beq	?L118
	cmp	AH,#H'7029
	beq	?L24
	bra	(?L2)
?L123:
	cmp	AH,#H'7038
	beq	?L97
	cmp	AH,#(H'0001+H'7038)
	bcc	?L125
	cmp	AH,#H'7035
	beq	?L15
	cmp	AH,#(H'0001+H'7035)
	bcc	?L126
	cmp	AH,#H'702F
	beq	?L61
	bra	(?L2)
?L126:
	cmp	AH,#H'7036
	beq	?L79
	cmp	AH,#H'7037
	beq	?L88
	bra	(?L2)
?L125:
	cmp	AH,#-H'7FDE
	beq	?L117
	cmp	AH,#(H'0001-H'7FDE)
	bcc	?L2
	cmp	AH,#H'7039
	beq	?L115
	cmp	AH,#-H'7FDF
	beq	?L116
	bra	(?L2)
?L4:
?LBB3:
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0008,Y); movqi2b+1 peephole
	ld	AH,#H'0000
	bsr	$_sppInitTaskData
?LBE3:
	bra	(?L2)
?L5:
	ld	AL,@(H'0008,Y)
	bsr	$_sppHandleFreeSppTask
	bra	(?L2)
?L6:
	ld	AL,@H'fff8
	cmp	AL,#H'0000
	bne	?L113
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleInternalInitReq
	bra	(?L2)
?L15:
	ld	X,@H'fff8
	cmp	X,#H'0000
	bne	?L104
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleRfcommRegisterCfm
	bra	(?L2)
?L24:
	ld	AL,@H'fff8
	cmp	AL,#(H'0001+H'0003)
	bcc	?L104
	cmp	AL,#H'0001
	bcc	?L29
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleSdpRegisterCfm
	bra	(?L2)
?L29:
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleSdpRegisterCfmReady
	bra	(?L2)
?L34:
	ld	X,@H'fff8
	cmp	X,#(H'0001+H'0004)
	bcc	?L104
	ld	X,@H'fff8
	add	X,#(?L42)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L42:
	.CODE
?JT42:
	.SEG	CONST
	dc	lwrd(?L104-?JT42)
	dc	lwrd(?L37-?JT42)
	dc	lwrd(?L104-?JT42)
	dc	lwrd(?L104-?JT42)
	dc	lwrd(?L37-?JT42)
	.CODE
?L37:
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleSdpUnregisterCfm
	bra	(?L2)
?L43:
	ld	AL,@H'fff8
	cmp	AL,#H'0001
	beq	?L45
	cmp	AL,#H'0001
	bcs	?L113
	cmp	AL,#(H'0001+H'0004)
	bcc	?L113
	bra	(?L57)
?L45:
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleConnectRequest
	bra	(?L2)
?L52:
	ld	X,@H'fff8
	cmp	X,#(H'0001+H'0004)
	bcc	?L113
	ld	X,@H'fff8
	add	X,#(?L60)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L60:
	.CODE
?JT60:
	.SEG	CONST
	dc	lwrd(?L113-?JT60)
	dc	lwrd(?L57-?JT60)
	dc	lwrd(?L57-?JT60)
	dc	lwrd(?L54-?JT60)
	dc	lwrd(?L57-?JT60)
	.CODE
?L54:
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleConnectResponse
	bra	(?L2)
?L57:
	ld	AL,#H'0003
	ld	AH,@(H'0008,Y)
	bra	(?L130)
?L61:
	ld	AL,@H'fff8
	cmp	AL,#(H'0001+H'0004)
	bcc	?L104
	ld	X,@H'fff8
	add	X,#(?L69)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L69:
	.CODE
?JT69:
	.SEG	CONST
	dc	lwrd(?L104-?JT69)
	dc	lwrd(?L2-?JT69)
	dc	lwrd(?L63-?JT69)
	dc	lwrd(?L2-?JT69)
	dc	lwrd(?L2-?JT69)
	.CODE
?L63:
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleSdpServiceSearchAttributeCfm
	bra	(?L2)
?L70:
	ld	AL,@H'fff8
	cmp	AL,#H'0003
	bne	?L113
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleInternalRfcommConnectRequest
	bra	(?L2)
?L79:
	ld	X,@H'fff8
	cmp	X,#H'0003
	bne	?L104
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleRfcommConnectCfm
	bra	(?L2)
?L88:
	ld	AL,@H'fff8
	cmp	AL,#H'0001
	beq	?L90
	cmp	AL,#H'0001
	bcs	?L104
	cmp	AL,#(H'0001+H'0004)
	bcc	?L104
	bra	(?L93)
?L90:
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleRfcommConnectInd
	bra	(?L2)
?L93:
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleConnectIndReject
	bra	(?L2)
?L97:
	ld	X,@H'fff8
	cmp	X,#H'0000
	beq	?L104
	cmp	X,#(H'0001+H'0004)
	bcc	?L104
	ld	AL,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
	bsr	$_sppHandleRfcommDisconnectInd
	bra	(?L2)
?L104:
	st	AH,@(0,Y)
	ld	AL,#H'0000
	bra	(?L129)
?L106:
	ld	AL,@H'fff8
	cmp	AL,#(H'0001+H'0004)
	bcc	?L113
	ld	X,@H'fff8
	add	X,#(?L114)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L114:
	.CODE
?JT114:
	.SEG	CONST
	dc	lwrd(?L113-?JT114)
	dc	lwrd(?L111-?JT114)
	dc	lwrd(?L111-?JT114)
	dc	lwrd(?L109-?JT114)
	dc	lwrd(?L109-?JT114)
	.CODE
?L109:
	ld	AL,@(H'0008,Y)
	bsr	$_sppHandleInternalDisconnectReq
	bra	(?L2)
?L111:
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0002
	bsr	$_sppSendDisconnectIndToApp
	bra	(?L2)
?L113:
	st	AH,@(0,Y)
	ld	AL,#H'0001
?L129:
	ld	AH,@H'fff8
	bsr	_handleUnexpected
	bra	(?L2)
?L115:
?LBB4:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fff8
	ld	AL,@(H'000B,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'7039
	bra	(?L128)
?L116:
?LBE4:
?LBB5:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	st	AH,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'6F03
	bra	(?L128)
?L117:
?LBE5:
?LBB6:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	st	AH,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'6F04
?L128:
	bsr	$_MessageSend
?LBE6:
	bra	(?L2)
?L118:
?LBB7:
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dofetch_AH
?L130:
	bsr	$_sppSendConnectCfmToApp
?L2:
?LBE7:
?LBE2:
?LBE_sppProfileHandler:
	leavel	#11
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 9 total = 9
;# Function pattern *movqi_fetch_general used[0] = 5 used[1] = 1 total = 6
;# Function pattern *movqi_store_y_relative used[0] = 6 used[1] = 7 total = 13
;# Function pattern *movqi_fetch_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_store_general used[0] = 3 total = 3
;# Function pattern *movqi2 used[0] = 59 total = 59
;# Function pattern *movqi2b used[0] = 2 used[1] = 1 total = 3
;# Function pattern *addqi2 used[0] = 6 used[2] = 1 total = 7
;# Function pattern jump used[0] = 30 total = 30
;# Function pattern *call1 used[0] = 20 total = 20
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Single pattern tablejump used = 4
;# Function pattern addsi3+1 used[0] = 4 total = 4
;# Function pattern addsi3+3 used[0] = 1 total = 1
;# Function pattern addhi3-2 used[0] = 1 total = 1
;# Function pattern addhi3-1 used[0] = 1 total = 1
;# Function pattern subhi3+1 used[0] = 4 total = 4
;# Function pattern addqi3-2 used[0] = 2 total = 2
;# Function pattern extendhfsf2+2 used[1] = 13 total = 13
;# Function pattern extendhfsf2+3 used[0] = 28 total = 28
	MODULE	spp_sdp
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_storeSdpHandle:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_storeSdpHandle ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_storeSdpHandle:
	st	AL,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L2
	add	AH,#H'0001
	st	AH,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	bra	(?L1)
?L2:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
?L1:
?LBE_storeSdpHandle:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_memcpy 0 ; (Non-const ref)
.IMPORT $_SdpParseInsertRfcommServerChannel 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
.IMPORT $_sppSendInitCfmToApp 0 ; (Non-const ref)
.IMPORT $_ConnectionRegisterServiceRecord 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppRegisterServiceRecord:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppRegisterServiceRecord ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppRegisterServiceRecord:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	add	AL,#H'000A
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_memcpy
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0003,Y)
	bsr	$_SdpParseInsertRfcommServerChannel
	cmp	AL,#H'0000
	bne	?L6
	ld	AL,@(H'0003,Y)
	bsr	$_free
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0002
	bsr	$_sppSendInitCfmToApp
	bra	(?L5)
?L6:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_ConnectionRegisterServiceRecord
?L5:
?LBE2:
?LBE_sppRegisterServiceRecord:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT _storeSdpHandle 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleSdpRegisterCfm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleSdpRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleSdpRegisterCfm:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	bsr	_storeSdpHandle
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L10
	ld	AL,@(0,Y)
	ld	AH,#H'0000
	bra	(?L12)
?L10:
	ld	AL,@(0,Y)
	ld	AH,#H'0002
?L12:
	bsr	$_sppSendInitCfmToApp
?LBE_sppHandleSdpRegisterCfm:
	leavel	#4
;# begin scan referenced symbols
;# end scan referenced symbols
$_sppHandleSdpRegisterCfmReady:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleSdpRegisterCfmReady ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleSdpRegisterCfmReady:
	bsr	_storeSdpHandle
?LBE_sppHandleSdpRegisterCfmReady:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_sppHandleSdpUnregisterCfm:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleSdpUnregisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleSdpUnregisterCfm:
	st	AL,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L15
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
?L15:
?LBE_sppHandleSdpUnregisterCfm:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_SdpParseGetMultipleRfcommServerChannels 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
.IMPORT $_sppSetState 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
.IMPORT $_sppSendConnectCfmToApp 0 ; (Non-const ref)
;# end scan referenced symbols
$_sppHandleSdpServiceSearchAttributeCfm:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sppHandleSdpServiceSearchAttributeCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sppHandleSdpServiceSearchAttributeCfm:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB3:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L19
?LBB4:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,#H'0001; movqi2b+1 peephole
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0008
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0006,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_SdpParseGetMultipleRfcommServerChannels
	cmp	AL,#H'0000
	beq	?L20
?LBB5:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0006,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0007,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	$_free
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0005
	bsr	$_MessageSend
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0003
	bsr	$_sppSetState
?LBE5:
	bra	(?L18)
?L20:
	bsr	$_Panic
?LBE4:
	bra	(?L18)
?L19:
	ld	AL,#H'0001
	ld	AH,@(H'0005,Y)
	bsr	$_sppSendConnectCfmToApp
?L18:
?LBE3:
?LBE_sppHandleSdpServiceSearchAttributeCfm:
	leavel	#10
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 15 total = 15
;# Function pattern *movqi_fetch_general used[0] = 11 total = 11
;# Function pattern *movqi_store_y_relative used[0] = 16 used[1] = 1 total = 17
;# Function pattern *movqi_fetch_y_relative used[0] = 14 total = 14
;# Function pattern *movhi_store_general used[1] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 4 total = 4
;# Function pattern *movqi2 used[0] = 18 total = 18
;# Function pattern *movqi2b used[1] = 2 total = 2
;# Function pattern *addqi0-framep used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 12 used[2] = 1 used[3] = 2 total = 15
;# Function pattern jump used[0] = 5 total = 5
;# Function pattern *call1 used[0] = 11 total = 11
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern addsi3+1 used[0] = 4 total = 4
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern addhi3-1 used[0] = 1 total = 1
;# Function pattern subhi3+2 used[0] = 1 total = 1
;# Function pattern addqi3-1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 6 total = 6
	MODULE	sdp_register
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionRegisterServiceRecord:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRegisterServiceRecord ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRegisterServiceRecord:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AH,#H'0000
	beq	?L3
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'0000
	bne	?L2
?L3:
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7029
	bra	(?L5)
?L2:
?LBE3:
?LBB4:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0039
?L5:
	bsr	$_MessageSend
?LBE4:
?LBE2:
?LBE_ConnectionRegisterServiceRecord:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionUnregisterServiceRecord:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionUnregisterServiceRecord ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionUnregisterServiceRecord:
	st	AL,@(H'0001,Y)
?LBB5:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	ld	AL,@(H'0006,Y)
	bsr	$dostore32_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'003A
	bsr	$_MessageSend
?LBE5:
?LBE_ConnectionUnregisterServiceRecord:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 4 total = 4
;# Function pattern *movqi_store_y_relative used[0] = 8 total = 8
;# Function pattern *movqi_fetch_y_relative used[0] = 8 total = 8
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_general used[0] = 1 used[1] = 1 total = 2
;# Function pattern *movqi_store_general used[0] = 5 total = 5
;# Function pattern *movqi2 used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 1 used[3] = 3 total = 4
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 5 total = 5
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
	MODULE	sdp_service_attr_search
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionSdpServiceSearchAttributeRequest:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSdpServiceSearchAttributeRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSdpServiceSearchAttributeRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
?LBB3:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fff8
	ld	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AH,@(H'0009,Y)
	bsr	$dostore_AH
	cmp	AH,#H'0000
	beq	?L2
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@(H'0004,Y)
	ld	AL,@$XAP_AH
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	bra	(?L3)
?L2:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L3:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AH,@(H'000B,Y)
	bsr	$dostore_AH
	cmp	AH,#H'0000
	beq	?L4
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_AH
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'000C,Y)
	bsr	$_memmove
	bra	(?L5)
?L4:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L5:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0041
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSdpServiceSearchAttributeRequest:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 10 total = 10
;# Function pattern *movqi_fetch_general used[0] = 3 total = 3
;# Function pattern *movqi_store_y_relative used[0] = 8 total = 8
;# Function pattern *movqi_fetch_y_relative used[0] = 19 total = 19
;# Function pattern *movqi_store_general used[0] = 7 total = 7
;# Function pattern *movqi2 used[0] = 6 total = 6
;# Function pattern *addqi2 used[0] = 10 used[2] = 1 used[3] = 1 total = 12
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Function pattern addsi3+1 used[0] = 3 total = 3
;# Function pattern addsi3+2 used[0] = 3 total = 3
;# Function pattern addqi3-2 used[0] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
	MODULE	bdaddr_is_same
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_BdaddrIsSame:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_BdaddrIsSame ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_BdaddrIsSame:
	st	AL,@H'fff8
	st	AH,@H'fffa
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fffb
	ld	AL,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	ld	X,@H'fffa
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	bne	?L2
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	bne	?L2
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch32_fff8; movhi_fetch_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff9
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dofetch32_fff8; movhi_fetch_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	cmp	AH,@H'fff8
	bne	?L2
	cmp	AL,@H'fff9
	bne	?L2
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fffb
	ld	AL,@H'ffff
?L2:
	ld	AL,@H'fffb
?LBE_BdaddrIsSame:
	leavel	#6
	ENDMOD

;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[1] = 2 total = 2
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[1] = 4 total = 4
;# Function pattern addsi3+3 used[0] = 2 total = 2
;# Function pattern subhi3+1 used[0] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
;# Function pattern extendhfsf2+5 used[1] = 1 total = 1
	MODULE	bdaddr_is_zero
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_BdaddrIsZero:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_BdaddrIsZero ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_BdaddrIsZero:
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L2
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L2
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L2
	cmp	AL,#H'0000
	bne	?L2
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L2:
	ld	AL,@H'fff8
?LBE_BdaddrIsZero:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movhi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[0] = 1 used[1] = 2 total = 3
;# Function pattern subhi3+1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
;# Function pattern extendhfsf2+4 used[0] = 1 total = 1
	MODULE	bdaddr_set_zero
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_BdaddrSetZero:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_BdaddrSetZero ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_BdaddrSetZero:
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
?LBE_BdaddrSetZero:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movhi_store_general used[1] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *addqi2 used[3] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 1 total = 1
	MODULE	sdp_parse_rf_server_channel
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_ServiceFindAttribute 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_findProtocolDescriptorList:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_findProtocolDescriptorList ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_findProtocolDescriptorList:
?LBB2:
	st	AH,@(H'0002,Y)
	add	AH,@$XAP_AL
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dostore_AH
	bra	(?L2)
?L6:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0006
	bne	?L2
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,#H'0004
	bsr	$_ServiceFindAttribute
	cmp	AL,#H'0000
	bne	?L6
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_findProtocolDescriptorList:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_ServiceGetValue 0 ; (Non-const ref)
.IMPORT $_RegionMatchesUUID32 0 ; (Non-const ref)
;# end scan referenced symbols
_findServerChannel:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_findServerChannel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_findServerChannel:
	st	AL,@(H'0005,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'0001
	st	AH,@(H'0006,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
?LBB3:
	bra	(?L23)
?L22:
	ld	AH,@(H'000C,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L23
	bra	(?L14)
?L18:
	ld	AL,@(H'000C,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L15
?L14:
	ld	AH,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'000C,Y)
	bsr	$_RegionMatchesUUID32
	cmp	AL,#H'0000
	beq	?L18
?L15:
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L23
	ld	AL,@(H'000C,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L23
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bne	?L23
	ld	AL,#H'0001
	bra	(?L9)
?L23:
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	bne	?L22
	ld	AL,#H'0000
?L9:
?LBE3:
?LBE_findServerChannel:
	leavel	#10
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT _findProtocolDescriptorList 0 ; (Non-const ref)
.IMPORT _findServerChannel 0 ; (Non-const ref)
.IMPORT $_RegionWriteUnsigned 0 ; (Non-const ref)
;# end scan referenced symbols
$_SdpParseInsertRfcommServerChannel:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SdpParseInsertRfcommServerChannel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SdpParseInsertRfcommServerChannel:
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB4:
	st	X,@(0,Y)
	bsr	_findProtocolDescriptorList
	cmp	AL,#H'0000
	beq	?L32
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0003
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_findServerChannel
	cmp	AL,#H'0000
	beq	?L32
	ld	AL,@(H'0009,Y)
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_RegionWriteUnsigned
	ld	AL,#H'0001
	bra	(?L31)
?L32:
	ld	AL,#H'0000
?L31:
?LBE4:
?LBE_SdpParseInsertRfcommServerChannel:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_RegionReadUnsigned 0 ; (Non-const ref)
;# end scan referenced symbols
$_SdpParseGetMultipleRfcommServerChannels:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SdpParseGetMultipleRfcommServerChannels ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SdpParseGetMultipleRfcommServerChannels:
	st	AL,@H'fff8
?LBB5:
	st	X,@H'ffff
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@(0,Y)
	ld	AL,@H'fff8
	bsr	_findProtocolDescriptorList
	cmp	AL,#H'0000
	beq	?L37
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	X,#H'0001
	st	X,@(H'0007,Y)
	bra	(?L38)
?L43:
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0003,Y)
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,@(H'000B,Y)
	bcc	?L37
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	add	AH,@$XAP_AL
	st	AH,@(H'0008,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_RegionReadUnsigned
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0001
	bsr	$dostore_AL
?L38:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0003
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_findServerChannel
	cmp	AL,#H'0000
	bne	?L43
?L37:
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L44
	ld	AL,#H'0001
	bra	(?L36)
?L44:
	ld	AL,#H'0000
?L36:
?LBE5:
?LBE_SdpParseGetMultipleRfcommServerChannels:
	leavel	#11
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[1] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 17 total = 17
;# Function pattern *movqi_fetch_y_relative used[0] = 7 total = 7
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[0] = 2 used[2] = 2 total = 4
;# Function pattern *movqi_store_general used[0] = 3 total = 3
;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi2b used[0] = 8 used[1] = 1 total = 9
;# Function pattern *addqi4-withytranslation used[0] = 2 used[1] = 1 total = 3
;# Function pattern *addqi0-framep used[0] = 18 total = 18
;# Function pattern *addqi2 used[0] = 4 total = 4
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 8 total = 8
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Function pattern addsi3+1 used[0] = 7 total = 7
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 15 total = 15
	MODULE	region_matches_uuid32
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	CONST
_uuid_suffix:
	dc	H'0000
	dc	H'0000
	dc	H'0010
	dc	H'0000
	dc	H'0080
	dc	H'0000
	dc	H'0000
	dc	H'0080
	dc	H'005F
	dc	H'009B
	dc	H'0034
	dc	H'00FB
;# begin scan referenced symbols
.IMPORT $_RegionReadUnsigned 0 ; (Non-const ref)
.IMPORT _uuid_suffix 1 ; (Const ref)
.IMPORT $_memcmp 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_RegionMatchesUUID32:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_RegionMatchesUUID32 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_RegionMatchesUUID32:
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_RegionReadUnsigned
	cmp	AH,@(H'0005,Y)
	bne	?L2
	cmp	AL,@(H'0006,Y)
	bne	?L2
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	sub	AL,@$XAP_AH
	cmp	AL,#H'0010
	bne	?L3
	ld	AL,#H'000C
	st	AL,@(0,Y)
	ld	AL,#(_uuid_suffix); movqi2b+1 peephole
	bsr	$dofetch_AH
	bsr	$_memcmp
	cmp	AL,#H'0000
	bne	?L2
?L3:
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L2:
	ld	AL,@(H'0002,Y)
?LBE_RegionMatchesUUID32:
	leavel	#5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 2 total = 2
;# Function pattern *movqi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi2b used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern addsi3+1 used[0] = 1 total = 1
;# Function pattern addhi3-1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
;# Function pattern extendhfsf2+5 used[1] = 1 total = 1
	MODULE	region_read_unsigned
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_RegionReadUnsigned:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_RegionReadUnsigned ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_RegionReadUnsigned:
	ld	AH,@$XAP_AL
?LBB2:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AL,@H'fffc
	bsr	$dofetch_X
	st	X,@H'fffa
	add	AL,#H'0001
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@H'fffa
	cmp	X,@$XAP_AL
	beq	?L8
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fffb
	ld	AL,@H'ffff
?L6:
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	asl	#H'0008
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	st	AL,@H'ffff
	ld	AL,@H'fffa
	add	AL,#H'0001
	st	AL,@H'fffa
	ld	AL,@H'ffff
	ld	X,@H'fffb
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fffa
	cmp	X,@$XAP_AL
	bne	?L6
?L8:
?LBE2:
	ld	AH,@H'fff8
	ld	AL,@H'fff9
?LBE_RegionReadUnsigned:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[1] = 1 total = 1
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi2b used[0] = 1 used[1] = 2 total = 3
;# Function pattern *movhi used[2] = 2 used[3] = 3 total = 5
;# Function pattern *iorhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[3] = 2 total = 2
;# Function pattern *ashlhi3 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern addsi3+1 used[0] = 2 total = 2
;# Function pattern subhi3+1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
	MODULE	region_write_unsigned
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_RegionWriteUnsigned:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_RegionWriteUnsigned ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_RegionWriteUnsigned:
	st	AL,@H'fffb
	st	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	st	AL,@H'fff9
	ld	AL,@(H'0002,Y)
	st	AL,@H'fff8
	ld	AL,@H'ffff
?LBB2:
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/1 peephole
	bsr	$dofetch_X
	st	X,@H'fffa
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@H'fffa
	cmp	AH,@$XAP_AL
	beq	?L7
?L5:
	st	AL,@H'ffff
	ld	AL,@H'fffa
	add	AL,#-H'0001
	st	AL,@H'fffa
	ld	AL,@H'ffff
	ld	AL,@H'fff9
	and	AL,#H'00FF
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	lsr	#H'0008
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@H'fffb
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@H'fffa
	cmp	AH,@$XAP_AL
	bne	?L5
?L7:
?LBE2:
?LBE_RegionWriteUnsigned:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movhi_fetch_y_relative used[1] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi2b used[0] = 1 used[1] = 1 total = 2
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi2 used[3] = 1 total = 1
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *lshrhi3 used[0] = 1 total = 1
;# Function pattern addsi3+1 used[0] = 1 total = 1
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern subhi3+1 used[1] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
	MODULE	service_find_attribute
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_ServiceNextAttribute 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ServiceFindAttribute:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ServiceFindAttribute ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ServiceFindAttribute:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB2:
	bra	(?L2)
?L6:
	ld	AL,@(H'0002,Y)
	cmp	AL,@(H'0004,Y)
	bne	?L2
	ld	AL,#H'0001
	bra	(?L1)
?L2:
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_ServiceNextAttribute
	cmp	AL,#H'0000
	bne	?L6
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_ServiceFindAttribute:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_fetch_y_relative used[0] = 3 total = 3
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[0] = 2 total = 2
;# Function pattern *addqi0-framep used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
	MODULE	service_get_value
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_ServiceGetValue:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ServiceGetValue ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ServiceGetValue:
	st	AL,@H'fff9
	st	AH,@H'fffa
?LBB2:
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	beq	?L22
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fffc
	bsr	$dofetch_X
	st	X,@H'fff8
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@H'fff8
	lsr	#H'0003
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dostore_AH; movqi_fetch_general+2 peephole
	ld	AL,@H'fff8
	and	AL,#H'0007
	cmp	AL,#(H'0001+H'0007)
	bcc	?L5
	add	AL,#(?L19)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L19:
	.CODE
?JT19:
	.SEG	CONST
	dc	lwrd(?L5-?JT19)
	dc	lwrd(?L7-?JT19)
	dc	lwrd(?L8-?JT19)
	dc	lwrd(?L9-?JT19)
	dc	lwrd(?L10-?JT19)
	dc	lwrd(?L11-?JT19)
	dc	lwrd(?L13-?JT19)
	dc	lwrd(?L16-?JT19)
	.CODE
?L5:
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L6
	ld	AL,#H'0001
?L6:
	st	AL,@H'fff8
	bra	(?L3)
?L7:
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	bra	(?L3)
?L8:
	st	AL,@H'ffff
	ld	AL,#H'0004
	st	AL,@H'fff8
	ld	AL,@H'ffff
	bra	(?L3)
?L9:
	st	AL,@H'ffff
	ld	AL,#H'0008
	st	AL,@H'fff8
	ld	AL,@H'ffff
	bra	(?L3)
?L10:
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@H'fff8
	ld	AL,@H'ffff
	bra	(?L3)
?L11:
	ld	X,@H'fff9
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L22
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fffc
	bsr	$dofetch_X
	st	X,@H'fff8
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0001
	bra	(?L21)
?L13:
	ld	X,@H'fff9
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	sub	AL,@$XAP_AH
	cmp	AL,#H'0001
	bcz	?L22
?Ltext1:
?LBB3:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0008
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	or	AL,@$XAP_AH
	st	AL,@H'fff8
?Ltext2:
?LBE3:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0002
	bra	(?L21)
?L16:
	ld	X,@H'fff9
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	sub	AL,@$XAP_AH
	cmp	AL,#H'0003
	bcz	?L22
?Ltext3:
?LBB4:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
?LBB5:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fffa
	ld	AL,@H'fffa
	ld	AH,#H'0000
	asl	#H'0008
	st	AH,@H'fffa
	st	AL,@H'fffb
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	or	AL,@H'fffb
	or	AH,@H'fffa
	asl	#H'0008
	st	AH,@H'fffa
	st	AL,@H'fffb
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	or	AL,@H'fffb
	or	AH,@H'fffa
	asl	#H'0008
	st	AH,@H'fffa
	st	AL,@H'fffb
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
?LBE5:
?LBE4:
	or	AL,@H'fffb
	st	AL,@H'fff8
?Ltext4:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0004
?L21:
	bsr	$dostore_AL
?L3:
	ld	X,@H'fff9
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	sub	AL,@$XAP_AH
	cmp	AL,@H'fff8
	bcc	?L20
?L22:
	ld	AL,#H'0000
	bra	(?L1)
?L20:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,@H'fff8
	bsr	$dostore_AL
	ld	X,@(H'0002,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,#H'0001
?L1:
?LBE2:
?LBE_ServiceGetValue:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 2 total = 2
;# Function pattern *movqi_fetch_general used[0] = 2 used[1] = 2 total = 4
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 3 total = 3
;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi2b used[0] = 3 used[1] = 9 total = 12
;# Function pattern *movhi used[3] = 3 total = 3
;# Function pattern *iorhi3 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 4 used[2] = 2 total = 6
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *iorqi3 used[0] = 2 total = 2
;# Function pattern *subqi3 used[0] = 3 total = 3
;# Function pattern *ashlhi3 used[0] = 3 total = 3
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 3 total = 3
;# Function pattern jump used[0] = 8 total = 8
;# Single pattern tablejump used = 1
;# Function pattern addsi3+1 used[0] = 15 total = 15
;# Function pattern addsi3+2 used[0] = 3 total = 3
;# Function pattern subhi3+1 used[0] = 10 total = 10
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 6 total = 6
	MODULE	service_next_attribute
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_ServiceGetValue 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ServiceNextAttribute:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ServiceNextAttribute ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ServiceNextAttribute:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB2:
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_ServiceGetValue
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0001
	bne	?L2
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fffc
	sub	AL,@(H'0001,Y)
	cmp	AL,#H'0002
	bne	?L2
?Ltext1:
?LBB3:
	bsr	$dofetch_X
	st	X,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0008
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	or	AL,@$XAP_AH
?LBE3:
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?Ltext2:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_ServiceGetValue
	bra	(?L1)
?L2:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_ServiceNextAttribute:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 2 used[1] = 1 total = 3
;# Function pattern *movqi_store_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *movqi2b used[0] = 1 total = 1
;# Function pattern *addqi4-withytranslation used[1] = 1 total = 1
;# Function pattern *addqi0-framep used[0] = 2 total = 2
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern addsi3+1 used[0] = 1 total = 1
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern subhi3+1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 3 total = 3
	MODULE	battery
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -IC:\BlueLab412\tools/include/firmware
;# -IC:\BlueLab412\tools/include/standard
;# -IC:\BlueLab412\tools/include/profiles/BlueLab4.1.2-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_repeatReading:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_repeatReading ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_repeatReading:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_MessageSend
?LBE2:
?LBE_repeatReading:
	leavel	#5
;# begin scan referenced symbols
;# end scan referenced symbols
_sendReading:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendReading ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendReading:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	ld	AL,#H'0002
	bsr	$_malloc
	st	AL,@H'fffa
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0000
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@H'fffa
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	ld	AH,#H'6800
	bsr	$_MessageSend
?LBE3:
?LBE_sendReading:
	leavel	#5
;# begin scan referenced symbols
;# end scan referenced symbols
_getReading:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_getReading ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_getReading:
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0005
	bne	?L4
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bra	(?L6)
?L4:
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
?L6:
	bsr	$dofetch_AL
?LBE_getReading:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_batSrcToAdcSrc:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_batSrcToAdcSrc ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_batSrcToAdcSrc:
	ld	AH,@$XAP_AL
?LBB4:
	ld	AL,#H'0000
	cmp	AH,#(H'0001+H'0005)
	bcc	?L9
	ld	X,@$XAP_AH
	add	X,#(?L28)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L28:
	.CODE
?JT28:
	.SEG	CONST
	dc	lwrd(?L25-?JT28)
	dc	lwrd(?L25-?JT28)
	dc	lwrd(?L25-?JT28)
	dc	lwrd(?L25-?JT28)
	dc	lwrd(?L25-?JT28)
	dc	lwrd(?L25-?JT28)
	.CODE
?L25:
	ld	AL,@$XAP_AH
?L9:
?LBE4:
?LBE_batSrcToAdcSrc:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_AdcRequest 0 ; (Non-const ref)
.IMPORT _getReading 0 ; (Non-const ref)
.IMPORT $___udivhi3 0 ; (Non-const ref)
.IMPORT _sendReading 0 ; (Non-const ref)
.IMPORT _batSrcToAdcSrc 0 ; (Non-const ref)
.IMPORT _repeatReading 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
_batteryHandler:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_batteryHandler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_batteryHandler:
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
?LBB5:
	cmp	AH,#H'0001
	beq	?L34
	cmp	AH,#H'0001
	bcs	?L32
	cmp	AH,#-H'7FDB
	beq	?L36
	bra	(?L30)
?L32:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
	bsr	$_AdcRequest
	cmp	AL,#H'0000
	bne	?L30
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
	bra	(?L52)
?L34:
?LBB6:
	ld	AL,@(H'0003,Y)
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_AdcRequest
	cmp	AL,#H'0000
	bne	?L30
	ld	AL,@(H'0003,Y)
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bra	(?L52)
?L36:
?LBE6:
?LBB7:
	ld	AH,@(H'000E,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#-H'2000
	cmp	AL,#H'4000
	bne	?L37
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L30
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L39
?LBB8:
	ld	AL,@$XAP_AH
	bsr	_getReading
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	st	AL,@H'ffff
	ld	AL,#-H'22E2
	st	AL,@H'fff9
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0004
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$___udivhi3
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bra	(?L51)
?L39:
	ld	AL,@(H'0004,Y)
?LBE8:
	add	AL,#H'0006
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_AH
	bsr	_getReading
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	add	AL,@$XAP_AH
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0004
	st	AH,@(H'0006,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0003
	ld	AH,@$XAP_AL
	asr	#H'0003
	add	AH,#H'0001
	and	AH,#H'1FFF
	bsr	$dofetch_AL
	and	AL,#-H'2000
	or	AL,@$XAP_AH
	bsr	$dostore_AL
	and	AL,#H'1FFF
	cmp	AL,#H'0004
	bne	?L48
?LBB9:
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	lsr	#H'0002
	ld	AL,@$XAP_AH
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	st	AL,@H'ffff
	ld	AL,#-H'22E2
	st	AL,@H'fff9
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0004
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$___udivhi3
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	_sendReading
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#-H'2000
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L53)
?L37:
?LBE9:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L43
	ld	AH,@(H'0004,Y)
	add	AH,#H'0005
	st	AH,@(H'0007,Y)
	ld	AL,@H'fffc
	bsr	_getReading
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	st	AL,@H'ffff
	ld	AL,#-H'22E2
	st	AL,@H'fff9
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0004
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$___udivhi3
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0004,Y)
	add	AL,#H'0004
	st	AL,@(H'0008,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_batSrcToAdcSrc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	bsr	$_AdcRequest
	cmp	AL,#H'0000
	bne	?L30
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	lsr	#H'000D
	ld	AL,@$XAP_AH
	bsr	_batSrcToAdcSrc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
?L52:
	bsr	_repeatReading
	bra	(?L30)
?L43:
	ld	AL,@(H'0004,Y)
?LBB10:
	add	AL,#H'0005
	st	AL,@(H'0009,Y)
	ld	AL,@$XAP_AH
	bsr	_getReading
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	st	AH,@H'ffff
	umult	@H'ffff
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'00FF
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	bsr	$___udivhi3
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L46
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
?L51:
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	_sendReading
	bra	(?L30)
?L46:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	st	AL,@(H'000A,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,@H'fff9
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0004
	st	AH,@(H'000B,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0003
	ld	AH,@$XAP_AL
	asr	#H'0003
	add	AH,#H'0001
	and	AH,#H'1FFF
	bsr	$dofetch_AL
	and	AL,#-H'2000
	or	AL,@$XAP_AH
	bsr	$dostore_AL
	and	AL,#H'1FFF
	cmp	AL,#H'0004
	bne	?L48
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	lsr	#H'0002
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_sendReading
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#-H'2000
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L53:
	ld	AH,#H'0000
	bsr	$dostore_AH
?L48:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y); movqi2b+1 peephole
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0000
	bsr	$_MessageSendLater
?L30:
?LBE10:
?LBE7:
?LBE5:
?LBE_batteryHandler:
	leavel	#14
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT _batteryHandler 0 ; (Non-const ref)
;# end scan referenced symbols
$_BatteryInit:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_BatteryInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_BatteryInit:
	st	AL,@(0,Y)
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#hwrd(_batteryHandler)
	ld	AL,#lwrd(_batteryHandler)
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	add	AL,#H'0004
	st	AL,@H'fff8
	ld	AL,@(H'0003,Y)
	asl	#H'000D
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	and	AH,#H'1FFF
	or	AH,@$XAP_AL
	bsr	$dostore_AH
	ld	AH,@(H'0004,Y)
	lsr	#H'0002
	ld	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dostore_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#-H'2000
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	ld	AH,#H'0002
	bsr	$_AdcRequest
	cmp	AL,#H'0000
	bne	?L67
	ld	AL,@(0,Y)
	ld	AH,#H'0002
	bsr	_repeatReading
?L67:
?LBE_BatteryInit:
	leavel	#3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 19 used[1] = 2 total = 21
;# Function pattern *movqi_fetch_general used[0] = 17 total = 17
;# Function pattern *movqi_store_y_relative used[0] = 15 total = 15
;# Function pattern *movqi_fetch_y_relative used[0] = 19 total = 19
;# Function pattern *movhi_store_y_relative used[0] = 4 used[2] = 1 total = 5
;# Function pattern *movhi_store_general used[1] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 12 total = 12
;# Function pattern *movqi2 used[0] = 30 total = 30
;# Function pattern *movqi2b used[0] = 9 used[1] = 8 total = 17
;# Function pattern *movhi used[2] = 3 used[3] = 3 total = 6
;# Function pattern *addqi2 used[0] = 21 used[2] = 1 used[3] = 2 total = 24
;# Function pattern *andqi3 used[0] = 11 total = 11
;# Function pattern *iorqi3 used[0] = 3 total = 3
;# Function pattern *umulqihi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 5 total = 5
;# Function pattern *ashrqi3 used[0] = 2 total = 2
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern *zero_extendqihi2 used[0] = 5 total = 5
;# Function pattern jump used[0] = 8 total = 8
;# Function pattern *call1 used[0] = 8 total = 8
;# Function pattern *call_value1 used[0] = 16 total = 16
;# Single pattern tablejump used = 1
;# Function pattern addsi3+1 used[0] = 11 total = 11
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern addhi3-2 used[0] = 1 total = 1
;# Function pattern addhi3-1 used[0] = 2 total = 2
;# Function pattern subhi3+1 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 15 total = 15
	MODULE	calloc
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_memset 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_calloc:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_calloc ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_calloc:
	ld	X,@$XAP_AH
?LBB2:
	smult	@$XAP_UXL
	st	AL,@(H'0002,Y)
	bsr	$_malloc
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_memset
?L2:
?LBE2:
	ld	AL,@(H'0001,Y)
?LBE_calloc:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi2b used[0] = 1 total = 1
;# Function pattern *mulqi3 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	memcpy
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_memcpy:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_memcpy ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_memcpy:
	st	AL,@H'fffa
	st	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	st	AL,@H'fff8
	ld	AL,@H'ffff
?LBB2:
	st	AL,@H'fff9
	ld	AL,#-H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#-H'0001
	beq	?L7
?L5:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	add	AH,#H'0001
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,#-H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#-H'0001
	bne	?L5
?L7:
?LBE2:
	ld	AL,@H'fffa
?LBE_memcpy:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_fetch_y_relative used[1] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[1] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 used[3] = 1 total = 2
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
;# Function pattern extendhfsf2+6 used[0] = 2 total = 2
	MODULE	memset
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_memcpy 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_memset:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_memset ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_memset:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0004,Y)
?LBB2:
	cmp	AH,#H'0000
	beq	?L2
?LBB3:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	add	AH,#-H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_memcpy
?L2:
?LBE3:
?LBE2:
	ld	AL,@(H'0001,Y)
?LBE_memset:
	leavel	#4
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi2b used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 used[2] = 1 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	memcmp
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_memcmp:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_memcmp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_memcmp:
	st	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	st	AL,@H'fffa
	ld	AL,@H'ffff
?LBB2:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	AL,#-H'0001
	add	AL,@H'fffa
	st	AL,@H'fffa
	cmp	AL,#-H'0001
	beq	?L11
?L9:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bcc	?L5
	ld	AL,#-H'0001
	bra	(?L1)
?L5:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bcz	?L7
	ld	AL,#H'0001
	bra	(?L1)
?L7:
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,@H'fff8
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,#-H'0001
	add	AL,@H'fffa
	st	AL,@H'fffa
	cmp	AL,#-H'0001
	bne	?L9
?L11:
	ld	AL,#H'0000
?L1:
?LBE2:
?LBE_memcmp:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_fetch_y_relative used[1] = 1 total = 1
;# Function pattern *movqi2b used[0] = 3 used[1] = 2 total = 5
;# Function pattern *addqi2 used[3] = 2 total = 2
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern addsi3+1 used[0] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 4 total = 4
;# Function pattern extendhfsf2+6 used[0] = 2 total = 2
	MODULE	_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$__init:
; leaf function with empty stack frame
?LBB__init:
?LBE__init:
	bra	0,X
	ENDMOD

	MODULE	udiv
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $__udivmod 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$___udivhi3:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB___udivhi3 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB___udivhi3:
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
?LBB2:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@(H'0002,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$__udivmod
?LBE2:
?LBE___udivhi3:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0-framep used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	MessageSend
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_MessageSend:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_MessageSend ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_MessageSend:
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'FFFF
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	bsr	$_MessageSendLater
?LBE_MessageSend:
	leavel	#5
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[2] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	MessageCancelAll
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_MessageCancelAll:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_MessageCancelAll ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_MessageCancelAll:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0000
	bra	(?L6)
?L5:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
?L6:
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_MessageCancelFirst
	cmp	AL,#H'0000
	bne	?L5
?LBE2:
	ld	AL,@(H'0002,Y)
?LBE_MessageCancelAll:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi2b used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	MessageLoop
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_MessageWait 0 ; (Non-const ref)
.IMPORT $_MessageFree 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_MessageLoop:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_MessageLoop ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_MessageLoop:
?L2:
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB2:
?LBB3:
	bsr	$_MessageWait
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch32_fff8
	ld	AL,@$XAP_AH
	ld	AH,@(H'0002,Y)
	bsr	?L5
	
?L5:
	add	X,@H'fff9
	st	X,@H'ffff
	ld	X,@$XAP_UXH
	addc	X,@H'fff8
	st	X,@(-4,Y)
	ld	XH,@(-4,Y)
	ld	X,@H'ffff
	bsr	-?L5,X
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_MessageFree
?LBE3:
	bra	(?L2)
?LBE2:
?LBE_MessageLoop:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movqi_fetch_y_relative used[0] = 5 total = 5
;# Function pattern *movhi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *addqi0-framep used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call4 used[0] = 1 total = 1
	MODULE	MessageSendConditionallyOnTask
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_MessageSendConditionally 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_MessageSendConditionallyOnTask:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_MessageSendConditionallyOnTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_MessageSendConditionallyOnTask:
	st	AL,@H'fff8
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	bsr	$_MessageSendConditionally
?LBE_MessageSendConditionallyOnTask:
	leavel	#4
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[1] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	SinkIsValid
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_StreamSourceFromSink 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_SinkIsValid:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SinkIsValid ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SinkIsValid:
	bsr	$_StreamSourceFromSink
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0001
?L2:
?LBE_SinkIsValid:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2b used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	udivmod
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1.2-Release
;# -I.
;# -Ic:/Perforce/bc/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT _count_leading_zeros 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$__udivmod:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB__udivmod ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB__udivmod:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
?LBB2:
	cmp	AH,#hwrd(H'0001+H'0001)
	bcs	?L17
	bne	?L8
	cmp	AL,#lwrd(H'0001+H'0001)
	bcc	?L8
?L17:
	st	X,@H'ffff
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bra	(?L7)
?L8:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,@(H'0007,Y)
	bcs	?L18
	bne	?L10
	cmp	AL,@(H'0008,Y)
	bcc	?L10
?L18:
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,#H'0000
	ld	AH,#H'0000
	bra	(?L7)
?L10:
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y); subreg eliminated automatically
	st	AL,@(H'0002,Y); subreg eliminated automatically
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	bsr	_count_leading_zeros
	st	AL,@(H'0004,Y)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_count_leading_zeros
	nadd	AL,@(H'0004,Y)
	st	AL,@(H'0004,Y)
?L12:
?LBB4:
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	asl	@(H'0004,Y)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,@H'fff8
	bcs	?L14
	bne	?L19
	cmp	AL,@H'fff9
	bcs	?L14
?L19:
	sub	AL,@H'fff9
	subc	AH,@H'fff8
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,#H'0000
	ld	AL,#H'0001
	asl	@(H'0004,Y)
	add	AL,@(H'0003,Y)
	addc	AH,@(H'0002,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
?L14:
	ld	AL,@(H'0004,Y)
?LBE4:
	add	AL,#-H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#-H'0001
	bne	?L12
	st	X,@H'ffff
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	$dostore32_AH
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
?L7:
?LBE3:
?LBE2:
?LBE__udivmod:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
_count_leading_zeros:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_count_leading_zeros ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_count_leading_zeros:
	st	AH,@H'fff8
	st	AL,@H'fff9
?LBB5:
	lsr	#H'0010
	ld	X,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'000F
	st	AL,@H'fffa
	ld	AL,@H'ffff
	cmp	AL,#H'0000
	bne	?L2
	ld	X,@H'fff9
	st	AL,@H'ffff
	ld	AL,#H'001F
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L2:
	ld	AH,@$XAP_UXL
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L3
	ld	X,@$XAP_AH
	st	AL,@H'ffff
	ld	AL,@H'fffa
	add	AL,#-H'0008
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L3:
	ld	AH,@$XAP_UXL
	lsr	#H'0004
	cmp	AH,#H'0000
	beq	?L4
	ld	X,@$XAP_AH
	st	AL,@H'ffff
	ld	AL,@H'fffa
	add	AL,#-H'0004
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L4:
	ld	AH,@$XAP_UXL
	lsr	#H'0002
	cmp	AH,#H'0000
	beq	?L5
	ld	X,@$XAP_AH
	st	AL,@H'ffff
	ld	AL,@H'fffa
	add	AL,#-H'0002
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L5:
	ld	AH,@$XAP_UXL
	lsr	#H'0001
	cmp	AH,#H'0000
	beq	?L6
	st	AL,@H'ffff
	ld	AL,@H'fffa
	add	AL,#-H'0001
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L6:
?LBE5:
	ld	AL,@H'fffa
?LBE_count_leading_zeros:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[1] = 2 total = 2
;# Function pattern *movqi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_fetch_y_relative used[0] = 4 total = 4
;# Function pattern *movhi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movhi_store_general used[0] = 1 used[1] = 1 total = 2
;# Function pattern *movqi_subreg_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi2b used[0] = 8 used[1] = 2 total = 10
;# Function pattern *movhi used[2] = 6 used[3] = 3 total = 9
;# Function pattern *addhi3 used[0] = 1 total = 1
;# Function pattern *subhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 used[3] = 4 total = 5
;# Function pattern *subqi3 used[1] = 1 total = 1
;# Function pattern *ashlhi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *lshrhi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern addhi3-2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 6 total = 6
;# Function pattern extendhfsf2+5 used[0] = 1 used[1] = 2 total = 3
